(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["svg-slimming"] = factory();
	else
		root["svg-slimming"] = factory();
})(global, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/slimming/app.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/node/index.ts":
/*!***************************!*\
  !*** ./src/node/index.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/*\r\n * 除了 EndTag ，其它值都来自标准：\r\n * https://developer.mozilla.org/zh-CN/docs/Web/API/Node/nodeType\r\n */\r\nvar NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"EndTag\"] = -1] = \"EndTag\";\r\n    NodeType[NodeType[\"Tag\"] = 1] = \"Tag\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"OtherSect\"] = 5] = \"OtherSect\";\r\n    NodeType[NodeType[\"OtherDecl\"] = 6] = \"OtherDecl\";\r\n    NodeType[NodeType[\"XMLDecl\"] = 7] = \"XMLDecl\";\r\n    NodeType[NodeType[\"Comments\"] = 8] = \"Comments\";\r\n    NodeType[NodeType[\"Document\"] = 9] = \"Document\";\r\n    NodeType[NodeType[\"DocType\"] = 10] = \"DocType\";\r\n})(NodeType = exports.NodeType || (exports.NodeType = {}));\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/node/index.ts?");

/***/ }),

/***/ "./src/slimming/algorithm/create-shorten-id.ts":
/*!*****************************************************!*\
  !*** ./src/slimming/algorithm/create-shorten-id.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst shortenlist_1 = __webpack_require__(/*! ../utils/shortenlist */ \"./src/slimming/utils/shortenlist.ts\");\r\nconst startLen = shortenlist_1.startChar.length;\r\nconst nameLen = shortenlist_1.nameChar.length;\r\nconst sList = shortenlist_1.startChar.split('');\r\nlet slen = startLen;\r\nlet pi = 0;\r\nexports.createShortenID = (si) => {\r\n    while (si >= slen) {\r\n        sList.push.apply(sList, shortenlist_1.nameChar.split('').map(s => sList[pi] + s));\r\n        slen += nameLen;\r\n        pi++;\r\n    }\r\n    return sList[si];\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/algorithm/create-shorten-id.ts?");

/***/ }),

/***/ "./src/slimming/algorithm/douglas-peucker.ts":
/*!***************************************************!*\
  !*** ./src/slimming/algorithm/douglas-peucker.ts ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vector_1 = __webpack_require__(/*! ../math/vector */ \"./src/slimming/math/vector.ts\");\r\nconst minus_1 = __webpack_require__(/*! ../math/minus */ \"./src/slimming/math/minus.ts\");\r\nconst check = (threshold, startI, endI, paths) => {\r\n    let max = 0;\r\n    let maxI = 0;\r\n    // 拿到基础向量\r\n    const baseVector = new vector_1.Vector(minus_1.minus(paths[endI], paths[startI]), minus_1.minus(paths[endI + 1], paths[startI + 1]));\r\n    for (let i = startI + 2; i < endI; i += 2) {\r\n        // 获取每个点基于起始和结束位置的向量\r\n        const vectorToStart = new vector_1.Vector(minus_1.minus(paths[i], paths[startI]), minus_1.minus(paths[i + 1], paths[startI + 1]));\r\n        const vectorToEnd = new vector_1.Vector(minus_1.minus(paths[i], paths[endI]), minus_1.minus(paths[i + 1], paths[endI + 1]));\r\n        let distance = 0;\r\n        // 与起始或结束点重合的点直接跳过\r\n        if (!vectorToStart.isZero && !vectorToEnd.isZero) {\r\n            // 边界情况：投影分量的模大于基础向量，说明途径点在起始点或结束点之外，不能单纯靠垂直分量来抽稀\r\n            const prjToStart = vector_1.Vector.projected(vectorToStart, baseVector);\r\n            const prjToEnd = vector_1.Vector.projected(vectorToEnd, baseVector);\r\n            if (prjToStart.modulo > baseVector.modulo) {\r\n                distance = prjToStart.modulo;\r\n            }\r\n            else if (prjToEnd.modulo > baseVector.modulo) {\r\n                distance = prjToEnd.modulo;\r\n            }\r\n            else {\r\n                distance = vector_1.Vector.plumb(vectorToStart, baseVector).modulo;\r\n            }\r\n            if (distance > max) {\r\n                max = distance;\r\n                maxI = i;\r\n            }\r\n        }\r\n    }\r\n    if (max <= threshold) {\r\n        paths.splice(startI + 2, endI - startI - 2);\r\n    }\r\n    else {\r\n        if (maxI < endI - 2) {\r\n            check(threshold, maxI, endI, paths);\r\n        }\r\n        if (maxI > startI + 2) {\r\n            check(threshold, startI, maxI, paths);\r\n        }\r\n    }\r\n};\r\nexports.douglasPeucker = (threshold, pathArr) => {\r\n    const pathCopy = pathArr.slice();\r\n    check(threshold, 0, pathCopy.length - 2, pathCopy);\r\n    return pathCopy;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/algorithm/douglas-peucker.ts?");

/***/ }),

/***/ "./src/slimming/app.ts":
/*!*****************************!*\
  !*** ./src/slimming/app.ts ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nconst node_1 = __webpack_require__(/*! ../node */ \"./src/node/index.ts\");\r\nconst app_1 = __webpack_require__(/*! ../xml-parser/app */ \"./src/xml-parser/app.ts\");\r\nconst index_1 = __webpack_require__(/*! ./rules/index */ \"./src/slimming/rules/index.ts\");\r\nconst create_1 = __webpack_require__(/*! ./xml/create */ \"./src/slimming/xml/create.ts\");\r\nconst merge_1 = __webpack_require__(/*! ./config/merge */ \"./src/slimming/config/merge.ts\");\r\nconst exportFunc = async (data, userConfig = null) => new Promise((resolve, reject) => {\r\n    app_1.parse(data).then(async (dom) => {\r\n        const finalConfig = merge_1.mergeConfig(userConfig);\r\n        for (const item of index_1.rules) {\r\n            if (item[0]) {\r\n                await (item[1])(dom);\r\n            }\r\n            else {\r\n                await (item[1])(finalConfig[item[2]], dom);\r\n            }\r\n        }\r\n        resolve(create_1.createXML(dom));\r\n    }, reject);\r\n});\r\nexportFunc.xmlParser = app_1.parse;\r\nexportFunc.NodeType = node_1.NodeType;\r\nmodule.exports = exportFunc;\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/app.ts?");

/***/ }),

/***/ "./src/slimming/color/exec.ts":
/*!************************************!*\
  !*** ./src/slimming/color/exec.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst const_1 = __webpack_require__(/*! ../const */ \"./src/slimming/const/index.ts\");\r\nconst syntax_1 = __webpack_require__(/*! ../const/syntax */ \"./src/slimming/const/syntax.ts\");\r\nconst tofixed_1 = __webpack_require__(/*! ../math/tofixed */ \"./src/slimming/math/tofixed.ts\");\r\nconst shorten_func_1 = __webpack_require__(/*! ../utils/shorten-func */ \"./src/slimming/utils/shorten-func.ts\");\r\nconst hsl2rgb_1 = __webpack_require__(/*! ./hsl2rgb */ \"./src/slimming/color/hsl2rgb.ts\");\r\nconst keywords_1 = __webpack_require__(/*! ./keywords */ \"./src/slimming/color/keywords.ts\");\r\nconst valid_1 = __webpack_require__(/*! ./valid */ \"./src/slimming/color/valid.ts\");\r\nconst shorten_percent_1 = __webpack_require__(/*! ../utils/shorten-percent */ \"./src/slimming/utils/shorten-percent.ts\");\r\nconst rgbReg = new RegExp(`^rgba?\\\\((${syntax_1.numberPattern})(%?),(${syntax_1.numberPattern})(%?),(${syntax_1.numberPattern})(%?)(?:,(${syntax_1.numberPattern})(%?))?\\\\)$`, 'gi');\r\nconst hslReg = new RegExp(`^hsla?\\\\((${syntax_1.numberPattern})((?:${syntax_1.angel})?),(${syntax_1.numberPattern})%,(${syntax_1.numberPattern})%(?:,(${syntax_1.numberPattern})(%?))?\\\\)$`, 'gi');\r\nconst hexReg = /^#([0-9a-f]{3,4}|[0-9a-f]{6}|[0-9a-f]{8})$/i;\r\nconst alphaMap = {\r\n    '255': 100,\r\n    '252': 99,\r\n    '250': 98,\r\n    '247': 97,\r\n    '245': 96,\r\n    '242': 95,\r\n    '240': 94,\r\n    '237': 93,\r\n    '235': 92,\r\n    '232': 91,\r\n    '230': 90,\r\n    '227': 89,\r\n    '224': 88,\r\n    '222': 87,\r\n    '219': 86,\r\n    '217': 85,\r\n    '214': 84,\r\n    '212': 83,\r\n    '209': 82,\r\n    '207': 81,\r\n    '204': 80,\r\n    '201': 79,\r\n    '199': 78,\r\n    '196': 77,\r\n    '194': 76,\r\n    '191': 75,\r\n    '189': 74,\r\n    '186': 73,\r\n    '184': 72,\r\n    '181': 71,\r\n    '179': 70,\r\n    '176': 69,\r\n    '173': 68,\r\n    '171': 67,\r\n    '168': 66,\r\n    '166': 65,\r\n    '163': 64,\r\n    '161': 63,\r\n    '158': 62,\r\n    '156': 61,\r\n    '153': 60,\r\n    '150': 59,\r\n    '148': 58,\r\n    '145': 57,\r\n    '143': 56,\r\n    '140': 55,\r\n    '138': 54,\r\n    '135': 53,\r\n    '133': 52,\r\n    '130': 51,\r\n    '128': 50,\r\n    '125': 49,\r\n    '122': 48,\r\n    '120': 47,\r\n    '117': 46,\r\n    '115': 45,\r\n    '112': 44,\r\n    '110': 43,\r\n    '107': 42,\r\n    '105': 41,\r\n    '102': 40,\r\n    '99': 39,\r\n    '97': 38,\r\n    '94': 37,\r\n    '92': 36,\r\n    '89': 35,\r\n    '87': 34,\r\n    '84': 33,\r\n    '82': 32,\r\n    '79': 31,\r\n    '77': 30,\r\n    '74': 29,\r\n    '71': 28,\r\n    '69': 27,\r\n    '66': 26,\r\n    '64': 25,\r\n    '61': 24,\r\n    '59': 23,\r\n    '56': 22,\r\n    '54': 21,\r\n    '51': 20,\r\n    '48': 19,\r\n    '46': 18,\r\n    '43': 17,\r\n    '41': 16,\r\n    '38': 15,\r\n    '36': 14,\r\n    '33': 13,\r\n    '31': 12,\r\n    '28': 11,\r\n    '26': 10,\r\n    '23': 9,\r\n    '20': 8,\r\n    '18': 7,\r\n    '15': 6,\r\n    '13': 5,\r\n    '10': 4,\r\n    '8': 3,\r\n    '5': 2,\r\n    '3': 1,\r\n    '0': 0,\r\n};\r\nexports.exec = (color, digit = const_1.OPACITY_DIGIT) => {\r\n    const fixed3 = tofixed_1.toFixed(digit);\r\n    // 首先对原始字符串进行基本的格式处理和类型转换\r\n    let _color = color.trim();\r\n    if (keywords_1.keywords.hasOwnProperty(_color)) {\r\n        // 关键字转为 16 位色\r\n        _color = keywords_1.keywords[_color];\r\n    }\r\n    else if (/^(?:rgb|hsl)a?\\s*\\(/.test(_color)) {\r\n        // 缩短函数类\r\n        _color = shorten_func_1.shortenFunc(_color);\r\n    }\r\n    const result = {\r\n        r: 0,\r\n        g: 0,\r\n        b: 0,\r\n        a: 1,\r\n        origin: _color,\r\n        valid: true,\r\n    };\r\n    // 16 位色直接解析\r\n    const hexMatch = _color.match(hexReg);\r\n    if (hexMatch) {\r\n        const hex = hexMatch[1];\r\n        switch (hex.length) {\r\n            case 3:\r\n                result.r = parseInt(`0x${hex[0]}${hex[0]}`, const_1.Hex);\r\n                result.g = parseInt(`0x${hex[1]}${hex[1]}`, const_1.Hex);\r\n                result.b = parseInt(`0x${hex[2]}${hex[2]}`, const_1.Hex);\r\n                break;\r\n            case 4:\r\n                result.r = parseInt(`0x${hex[0]}${hex[0]}`, const_1.Hex);\r\n                result.g = parseInt(`0x${hex[1]}${hex[1]}`, const_1.Hex);\r\n                result.b = parseInt(`0x${hex[2]}${hex[2]}`, const_1.Hex);\r\n                const alpha4 = parseInt(`0x${hex[3]}${hex[3]}`, const_1.Hex);\r\n                result.a = ramda_1.has(`${alpha4}`, alphaMap) ? alphaMap[`${alpha4}`] / const_1.Hundred : fixed3(alpha4 / const_1.FF);\r\n                break;\r\n            case 8:\r\n                result.r = parseInt(`0x${hex[0]}${hex[1]}`, const_1.Hex);\r\n                result.g = parseInt(`0x${hex[2]}${hex[3]}`, const_1.Hex);\r\n                result.b = parseInt(`0x${hex[4]}${hex[5]}`, const_1.Hex);\r\n                const alpha8 = parseInt(`0x${hex[6]}${hex[7]}`, const_1.Hex);\r\n                result.a = ramda_1.has(`${alpha8}`, alphaMap) ? alphaMap[`${alpha8}`] / const_1.Hundred : fixed3(alpha8 / const_1.FF);\r\n                break;\r\n            default:\r\n                result.r = parseInt(`0x${hex[0]}${hex[1]}`, const_1.Hex);\r\n                result.g = parseInt(`0x${hex[2]}${hex[3]}`, const_1.Hex);\r\n                result.b = parseInt(`0x${hex[4]}${hex[5]}`, const_1.Hex);\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    // rgb/rgba/hsl/hsla 解析\r\n    rgbReg.lastIndex = 0; // 重置正则表达式匹配位置\r\n    const rgbMatch = rgbReg.exec(_color);\r\n    if (rgbMatch) {\r\n        if (rgbMatch[2] === rgbMatch[4] && rgbMatch[4] === rgbMatch[6]) {\r\n            result.r = valid_1.valid(rgbMatch[2], const_1.FF, rgbMatch[1]);\r\n            result.g = valid_1.valid(rgbMatch[4], const_1.FF, rgbMatch[3]);\r\n            result.b = valid_1.valid(rgbMatch[6], const_1.FF, rgbMatch[5]);\r\n            if (rgbMatch[7]) {\r\n                result.a = valid_1.validOpacity(digit, rgbMatch[8], rgbMatch[7]);\r\n            }\r\n        }\r\n        else {\r\n            result.valid = false;\r\n        }\r\n        return result;\r\n    }\r\n    hslReg.lastIndex = 0;\r\n    const hslMatch = hslReg.exec(_color);\r\n    if (hslMatch) {\r\n        let hue;\r\n        switch (hslMatch[2].toLowerCase()) {\r\n            case 'grad':\r\n                hue = +hslMatch[1] * const_1.CIRC / const_1.GRAD;\r\n                break;\r\n            case 'rad':\r\n                hue = +hslMatch[1] * const_1.CIRC / const_1.RAD;\r\n                break;\r\n            case 'turn':\r\n                hue = +hslMatch[1] * const_1.CIRC;\r\n                break;\r\n            default: // deg 和纯数值都按照 360 解析\r\n                hue = +hslMatch[1];\r\n                break;\r\n        }\r\n        [result.r, result.g, result.b] = hsl2rgb_1.hsl2rgb(hue, +hslMatch[3] / const_1.Hundred, +hslMatch[4] / const_1.Hundred);\r\n        if (hslMatch[5]) {\r\n            result.a = valid_1.validOpacity(digit, hslMatch[6], hslMatch[5]);\r\n            // 考虑到转来转去可能和原始字符串不同，保留一份缩短后的 hsl 原始字符串\r\n            result.origin = `hsl(${valid_1.validNum(const_1.CIRC, hue)},${valid_1.validNum(const_1.Hundred, +hslMatch[3])}%,${valid_1.validNum(const_1.Hundred, +hslMatch[4])}%,${shorten_percent_1.shortenPercent(digit, result.a)})`;\r\n        }\r\n        return result;\r\n    }\r\n    if (_color === 'transparent') {\r\n        result.a = 0;\r\n        return result;\r\n    }\r\n    result.valid = false;\r\n    return result;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/color/exec.ts?");

/***/ }),

/***/ "./src/slimming/color/hsl2rgb.ts":
/*!***************************************!*\
  !*** ./src/slimming/color/hsl2rgb.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst const_1 = __webpack_require__(/*! ../const */ \"./src/slimming/const/index.ts\");\r\nconst valid_1 = __webpack_require__(/*! ./valid */ \"./src/slimming/color/valid.ts\");\r\nconst CIRC6 = const_1.CIRC / 6;\r\nexports.hsl2rgb = (h, s, l) => {\r\n    let _R;\r\n    let G;\r\n    let B;\r\n    let X;\r\n    let C;\r\n    let _h = (h % const_1.CIRC) / CIRC6;\r\n    C = s * 2 * (l < const_1.HALF ? l : 1 - l);\r\n    X = C * (1 - Math.abs(_h % 2 - 1));\r\n    _R = G = B = l - C / 2;\r\n    _h = ~~_h;\r\n    _R += [C, X, 0, 0, X, C][_h];\r\n    G += [X, C, C, X, 0, 0][_h];\r\n    B += [0, 0, X, C, C, X][_h];\r\n    return [valid_1.validNum(const_1.FF, _R * const_1.FF), valid_1.validNum(const_1.FF, G * const_1.FF), valid_1.validNum(const_1.FF, B * const_1.FF)];\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/color/hsl2rgb.ts?");

/***/ }),

/***/ "./src/slimming/color/keywords.ts":
/*!****************************************!*\
  !*** ./src/slimming/color/keywords.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.keywords = {\r\n    'aliceblue': '#f0f8ff',\r\n    'antiquewhite': '#faebd7',\r\n    'aqua': '#00ffff',\r\n    'aquamarine': '#7fffd4',\r\n    'azure': '#f0ffff',\r\n    'beige': '#f5f5dc',\r\n    'bisque': '#ffe4c4',\r\n    'black': '#000000',\r\n    'blanchedalmond': '#ffebcd',\r\n    'blue': '#0000ff',\r\n    'blueviolet': '#8a2be2',\r\n    'brown': '#a52a2a',\r\n    'burlywood': '#deb887',\r\n    'cadetblue': '#5f9ea0',\r\n    'chartreuse': '#7fff00',\r\n    'chocolate': '#d2691e',\r\n    'coral': '#ff7f50',\r\n    'cornflowerblue': '#6495ed',\r\n    'cornsilk': '#fff8dc',\r\n    'crimson': '#dc143c',\r\n    'cyan': '#00ffff',\r\n    'darkblue': '#00008b',\r\n    'darkcyan': '#008b8b',\r\n    'darkgoldenrod': '#b8860b',\r\n    'darkgray': '#a9a9a9',\r\n    'darkgreen': '#006400',\r\n    'darkgrey': '#a9a9a9',\r\n    'darkkhaki': '#bdb76b',\r\n    'darkmagenta': '#8b008b',\r\n    'darkolivegreen': '#556b2f',\r\n    'darkorange': '#ff8c00',\r\n    'darkorchid': '#9932cc',\r\n    'darkred': '#8b0000',\r\n    'darksalmon': '#e9967a',\r\n    'darkseagreen': '#8fbc8f',\r\n    'darkslateblue': '#483d8b',\r\n    'darkslategray': '#2f4f4f',\r\n    'darkslategrey': '#2f4f4f',\r\n    'darkturquoise': '#00ced1',\r\n    'darkviolet': '#9400d3',\r\n    'deeppink': '#ff1493',\r\n    'deepskyblue': '#00bfff',\r\n    'dimgray': '#696969',\r\n    'dimgrey': '#696969',\r\n    'dodgerblue': '#1e90ff',\r\n    'firebrick': '#b22222',\r\n    'floralwhite': '#fffaf0',\r\n    'forestgreen': '#228b22',\r\n    'fuchsia': '#ff00ff',\r\n    'gainsboro': '#dcdcdc',\r\n    'ghostwhite': '#f8f8ff',\r\n    'gold': '#ffd700',\r\n    'goldenrod': '#daa520',\r\n    'gray': '#808080',\r\n    'green': '#008000',\r\n    'greenyellow': '#adff2f',\r\n    'grey': '#808080',\r\n    'honeydew': '#f0fff0',\r\n    'hotpink': '#ff69b4',\r\n    'indianred': '#cd5c5c',\r\n    'indigo': '#4b0082',\r\n    'ivory': '#fffff0',\r\n    'khaki': '#f0e68c',\r\n    'lavender': '#e6e6fa',\r\n    'lavenderblush': '#fff0f5',\r\n    'lawngreen': '#7cfc00',\r\n    'lemonchiffon': '#fffacd',\r\n    'lightblue': '#add8e6',\r\n    'lightcoral': '#f08080',\r\n    'lightcyan': '#e0ffff',\r\n    'lightgoldenrodyellow': '#fafad2',\r\n    'lightgray': '#d3d3d3',\r\n    'lightgreen': '#90ee90',\r\n    'lightgrey': '#d3d3d3',\r\n    'lightpink': '#ffb6c1',\r\n    'lightsalmon': '#ffa07a',\r\n    'lightseagreen': '#20b2aa',\r\n    'lightskyblue': '#87cefa',\r\n    'lightslategray': '#778899',\r\n    'lightslategrey': '#778899',\r\n    'lightsteelblue': '#b0c4de',\r\n    'lightyellow': '#ffffe0',\r\n    'lime': '#00ff00',\r\n    'limegreen': '#32cd32',\r\n    'linen': '#faf0e6',\r\n    'magenta': '#ff00ff',\r\n    'maroon': '#800000',\r\n    'mediumaquamarine': '#66cdaa',\r\n    'mediumblue': '#0000cd',\r\n    'mediumorchid': '#ba55d3',\r\n    'mediumpurple': '#9370db',\r\n    'mediumseagreen': '#3cb371',\r\n    'mediumslateblue': '#7b68ee',\r\n    'mediumspringgreen': '#00fa9a',\r\n    'mediumturquoise': '#48d1cc',\r\n    'mediumvioletred': '#c71585',\r\n    'midnightblue': '#191970',\r\n    'mintcream': '#f5fffa',\r\n    'mistyrose': '#ffe4e1',\r\n    'moccasin': '#ffe4b5',\r\n    'navajowhite': '#ffdead',\r\n    'navy': '#000080',\r\n    'oldlace': '#fdf5e6',\r\n    'olive': '#808000',\r\n    'olivedrab': '#6b8e23',\r\n    'orange': '#ffa500',\r\n    'orangered': '#ff4500',\r\n    'orchid': '#da70d6',\r\n    'palegoldenrod': '#eee8aa',\r\n    'palegreen': '#98fb98',\r\n    'paleturquoise': '#afeeee',\r\n    'palevioletred': '#db7093',\r\n    'papayawhip': '#ffefd5',\r\n    'peachpuff': '#ffdab9',\r\n    'peru': '#cd853f',\r\n    'pink': '#ffc0cb',\r\n    'plum': '#dda0dd',\r\n    'powderblue': '#b0e0e6',\r\n    'purple': '#800080',\r\n    'rebeccapurple': '#663399',\r\n    'red': '#ff0000',\r\n    'rosybrown': '#bc8f8f',\r\n    'royalblue': '#4169e1',\r\n    'saddlebrown': '#8b4513',\r\n    'salmon': '#fa8072',\r\n    'sandybrown': '#f4a460',\r\n    'seagreen': '#2e8b57',\r\n    'seashell': '#fff5ee',\r\n    'sienna': '#a0522d',\r\n    'silver': '#c0c0c0',\r\n    'skyblue': '#87ceeb',\r\n    'slateblue': '#6a5acd',\r\n    'slategray': '#708090',\r\n    'slategrey': '#708090',\r\n    'snow': '#fffafa',\r\n    'springgreen': '#00ff7f',\r\n    'steelblue': '#4682b4',\r\n    'tan': '#d2b48c',\r\n    'teal': '#008080',\r\n    'thistle': '#d8bfd8',\r\n    'tomato': '#ff6347',\r\n    'turquoise': '#40e0d0',\r\n    'violet': '#ee82ee',\r\n    'wheat': '#f5deb3',\r\n    'white': '#ffffff',\r\n    'whitesmoke': '#f5f5f5',\r\n    'yellow': '#ffff00',\r\n    'yellowgreen': '#9acd32',\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/color/keywords.ts?");

/***/ }),

/***/ "./src/slimming/color/rgb2hsl.ts":
/*!***************************************!*\
  !*** ./src/slimming/color/rgb2hsl.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst const_1 = __webpack_require__(/*! ../const */ \"./src/slimming/const/index.ts\");\r\nconst valid_1 = __webpack_require__(/*! ./valid */ \"./src/slimming/color/valid.ts\");\r\nexports.rgb2hsl = (rgb) => {\r\n    const r = rgb.r / const_1.FF;\r\n    const g = rgb.g / const_1.FF;\r\n    const b = rgb.b / const_1.FF;\r\n    const max = Math.max(r, g, b);\r\n    const min = Math.min(r, g, b);\r\n    const diff = max - min;\r\n    const l = (max + min) / 2;\r\n    const h = diff === 0 ?\r\n        0 :\r\n        max === r ?\r\n            (g - b) / diff :\r\n            max === g ?\r\n                (b - r) / diff + 2 :\r\n                (r - g) / diff + 4;\r\n    const s = diff === 0 ?\r\n        0 :\r\n        l < const_1.HALF ?\r\n            diff / (l * 2) :\r\n            diff / (2 - l * 2);\r\n    return { h: valid_1.validNum(const_1.CIRC, (h + const_1.CIRC) % 6 * (const_1.CIRC / 6)), s: valid_1.validNum(const_1.Hundred, s * const_1.Hundred), l: valid_1.validNum(const_1.Hundred, l * const_1.Hundred) };\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/color/rgb2hsl.ts?");

/***/ }),

/***/ "./src/slimming/color/valid.ts":
/*!*************************************!*\
  !*** ./src/slimming/color/valid.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst const_1 = __webpack_require__(/*! ../const */ \"./src/slimming/const/index.ts\");\r\nconst tofixed_1 = __webpack_require__(/*! ../math/tofixed */ \"./src/slimming/math/tofixed.ts\");\r\n// 转换百分比格式字符串为数值\r\nexports.validPercent = (max, n) => Math.round(Math.max(Math.min(const_1.Hundred, n), 0) * max / const_1.Hundred);\r\n// 转换非百分比格式字符串为数值\r\nexports.validNum = (max, n) => Math.max(Math.min(max, Math.round(n)), 0);\r\n// 转换字符串为数值\r\nexports.valid = (isPercent, max, n) => isPercent ? exports.validPercent(max, +n) : exports.validNum(max, +n);\r\n// 转换透明度数值\r\nexports.validOpacity = (digit, p, n) => tofixed_1.toFixed(digit, Math.max(Math.min(1, p ? +n / const_1.Hundred : +n), 0));\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/color/valid.ts?");

/***/ }),

/***/ "./src/slimming/config/config.ts":
/*!***************************************!*\
  !*** ./src/slimming/config/config.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst const_1 = __webpack_require__(/*! ../const */ \"./src/slimming/const/index.ts\");\r\nexports.config = {\r\n    // 合并 g 标签\r\n    'collapse-g': [true],\r\n    // 塌陷无意义的文本节点\r\n    'collapse-textwrap': [true],\r\n    // 合并 path 标签\r\n    'combine-path': [true, {\r\n            disregardFill: false,\r\n            disregardOpacity: false,\r\n            keyOrder: ['disregardFill', 'disregardOpacity'],\r\n        }],\r\n    // 分析并合并 transform 属性\r\n    'combine-transform': [true, {\r\n            angelDigit: const_1.DEFAULT_ACCURATE_DIGIT,\r\n            sizeDigit: const_1.DEFAULT_SIZE_DIGIT,\r\n            trifuncDigit: const_1.DEFAULT_MATRIX_DIGIT,\r\n            keyOrder: ['trifuncDigit', 'sizeDigit', 'angelDigit'],\r\n        }],\r\n    // 计算 path 的 d 属性，使之变得更短\r\n    'compute-path': [true, {\r\n            angelDigit: const_1.DEFAULT_ACCURATE_DIGIT,\r\n            sizeDigit: const_1.DEFAULT_SIZE_DIGIT,\r\n            straighten: 0,\r\n            thinning: 0,\r\n            keyOrder: ['removed thinning switch@v1.5.0', 'thinning', 'size', 'angelDigit', 'straighten'],\r\n        }],\r\n    // 移除非规范的属性\r\n    'rm-attribute': [true, {\r\n            keepAria: false,\r\n            keepEvent: false,\r\n            rmDefault: true,\r\n            keyOrder: ['rmDefault', 'keepEvent', 'keepAria'],\r\n        }],\r\n    // 移除注释\r\n    'rm-comments': [true],\r\n    // 移除 DOCTYPE 声明\r\n    'rm-doctype': [true],\r\n    // 移除隐藏对象\r\n    'rm-hidden': [true],\r\n    // 移除不规范嵌套的标签\r\n    'rm-irregular-nesting': [true, {\r\n            ignore: [],\r\n            keyOrder: ['ignore'],\r\n        }],\r\n    // 移除非规范的标签\r\n    // 配置不移除的非规范标签\r\n    'rm-irregular-tag': [true, {\r\n            ignore: [],\r\n            keyOrder: ['ignore'],\r\n        }],\r\n    // 移除 px 单位\r\n    'rm-px': [true],\r\n    // 移除不必要的标签\r\n    // 配置需要移除的标签列表\r\n    'rm-unnecessary': [true, {\r\n            tags: ['desc', 'discard', 'foreignObject', 'video', 'audio', 'iframe', 'canvas', 'metadata', 'script', 'title', 'unknown'],\r\n            keyOrder: ['tags'],\r\n        }],\r\n    // 移除 svg 标签的 version 属性\r\n    'rm-version': [true],\r\n    // 是否强制移除 viewBox 属性\r\n    'rm-viewbox': [true],\r\n    // 移除 xml 声明\r\n    'rm-xml-decl': [true],\r\n    // 如有必要，移除 xml 命名空间\r\n    'rm-xmlns': [true],\r\n    // 缩短 className ，并移除不被引用的 className\r\n    'shorten-class': [true],\r\n    // 缩短颜色\r\n    'shorten-color': [true, {\r\n            opacityDigit: const_1.OPACITY_DIGIT,\r\n            rrggbbaa: false,\r\n            keyOrder: ['rrggbbaa', 'opacityDigit'],\r\n        }],\r\n    // 缩短小数点后位数\r\n    'shorten-decimal-digits': [true, {\r\n            angelDigit: const_1.DEFAULT_ACCURATE_DIGIT,\r\n            sizeDigit: const_1.DEFAULT_SIZE_DIGIT,\r\n            keyOrder: ['sizeDigit', 'angelDigit'],\r\n        }],\r\n    // 合并所有的 defs ，移除无效的 defs 定义\r\n    'shorten-defs': [true],\r\n    // 缩短 ID ，并移除不被引用的 ID\r\n    'shorten-id': [true],\r\n    // 缩短 shape 类型的节点\r\n    'shorten-shape': [true, {\r\n            thinning: 0,\r\n            keyOrder: ['thinning'],\r\n        }],\r\n    // 缩短 style 属性\r\n    'shorten-style-attr': [true, {\r\n            exchange: false,\r\n            keyOrder: ['exchange'],\r\n        }],\r\n    // 缩短 style 标签的内容（合并相同规则、移除无效样式）\r\n    // 深度分析，移除无效选择器、合并相同的选择器、合并相同规则\r\n    'shorten-style-tag': [true, {\r\n            deepShorten: true,\r\n            keyOrder: ['deepShorten'],\r\n        }],\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/config/config.ts?");

/***/ }),

/***/ "./src/slimming/config/merge.ts":
/*!**************************************!*\
  !*** ./src/slimming/config/merge.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst config_1 = __webpack_require__(/*! ./config */ \"./src/slimming/config/config.ts\");\r\nconst mergeUserVal = (v, _v) => {\r\n    if (Array.isArray(v)) {\r\n        // 数组只要字符串项\r\n        if (Array.isArray(_v)) {\r\n            return _v.filter(s => typeof s === 'string');\r\n        }\r\n    }\r\n    else if (typeof v === typeof _v) {\r\n        if (typeof _v === 'number') {\r\n            // 数值项要忽略 NaN、Infinity 和负数，并下取整\r\n            // 数值精度最多保留 8 位\r\n            if (_v >= 0 && _v !== Infinity) {\r\n                return Math.floor(_v);\r\n            }\r\n        }\r\n        else {\r\n            return _v;\r\n        }\r\n    }\r\n    return v;\r\n};\r\nexports.mergeConfig = (userConfig) => {\r\n    const finalConfig = {};\r\n    // 首先把默认规则深拷贝合并过来\r\n    for (const [key, val] of Object.entries(config_1.config)) {\r\n        finalConfig[key] = [val[0]];\r\n        if (val[1]) {\r\n            const option = { keyOrder: val[1].keyOrder };\r\n            for (const [k, v] of Object.entries(val[1])) {\r\n                option[k] = Array.isArray(v) ? v.slice() : v;\r\n            }\r\n            finalConfig[key][1] = option;\r\n        }\r\n    }\r\n    if (typeof userConfig === 'object' && userConfig) {\r\n        for (const [key, val] of Object.entries(userConfig)) {\r\n            // 只合并存在的值\r\n            if (finalConfig.hasOwnProperty(key)) {\r\n                const conf = finalConfig[key];\r\n                // 布尔值直接设置开关位置\r\n                if (typeof val === 'boolean') {\r\n                    conf[0] = val;\r\n                }\r\n                else if (Array.isArray(val) && typeof val[0] === 'boolean') {\r\n                    // 如果开关位置不是布尔值，后续直接抛弃处理\r\n                    conf[0] = val[0];\r\n                    // 默认配置如果没有 option 则不必再验证，如果没有打开配置项，后续也不必再验证\r\n                    if (conf[0] && conf[1]) {\r\n                        if (typeof val[1] === 'object' && val[1] && !Array.isArray(val[1])) {\r\n                            // 如果拿到的是 IConfigOption 类型\r\n                            for (const [k, v] of Object.entries(val[1])) {\r\n                                if (k !== 'keyOrder' && conf[1].hasOwnProperty(k)) {\r\n                                    conf[1][k] = mergeUserVal(conf[1][k], v);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            for (const k of Object.keys(conf[1])) {\r\n                                if (k !== 'keyOrder') {\r\n                                    const index = conf[1].keyOrder.indexOf(k) + 1;\r\n                                    conf[1][k] = mergeUserVal(conf[1][k], val[index]);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return finalConfig;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/config/merge.ts?");

/***/ }),

/***/ "./src/slimming/const/definitions.ts":
/*!*******************************************!*\
  !*** ./src/slimming/const/definitions.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// elements group\r\nexports.animationElements = ['animate', 'animateMotion', 'animateTransform', 'discard', 'set'];\r\nexports.descriptiveElements = ['desc', 'metadata', 'title'];\r\nexports.gradientElements = ['linearGradient', 'radialGradient'];\r\nexports.filterPrimitiveElements = ['feBlend', 'feFlood', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDropShadow', 'feGaussianBlur', 'feImage', 'feMerge', 'feMorphology', 'feOffset', 'feSpecularLighting', 'feTile', 'feTurbulence'];\r\nexports.lightSourceElements = ['feDistantLight', 'fePointLight', 'feSpotLight'];\r\nexports.paintServerElements = ['solidcolor', 'linearGradient', 'radialGradient', 'meshgradient', 'pattern', 'hatch'];\r\nexports.shapeElements = ['circle', 'ellipse', 'line', 'path', 'polygon', 'polyline', 'rect'];\r\nexports.structuralElements = ['defs', 'g', 'svg', 'symbol', 'use'];\r\nexports.textContentChildElements = ['tspan', 'textPath'];\r\nexports.textContentElements = ['text'].concat(exports.textContentChildElements);\r\nexports.graphicsElements = ['audio', 'canvas', 'circle', 'ellipse', 'foreignObject', 'iframe', 'image', 'line', 'mesh', 'path', 'polygon', 'polyline', 'rect', 'text', 'textPath', 'tspan', 'video'];\r\nexports.containerElements = ['a', 'clipPath', 'defs', 'g', 'marker', 'mask', 'pattern', 'svg', 'switch', 'symbol', 'unknown'];\r\nexports.newViewportsElements = ['svg', 'symbol', 'foreignObject', 'video', 'audio', 'canvas', 'image', 'iframe'];\r\nexports.unnecessaryElements = ['desc', 'discard', 'foreignObject', 'video', 'audio', 'iframe', 'canvas', 'metadata', 'script', 'style', 'title', 'unknown'];\r\nexports.allElements = exports.animationElements.concat(exports.descriptiveElements, exports.gradientElements, exports.filterPrimitiveElements, exports.lightSourceElements, exports.paintServerElements, exports.shapeElements, exports.structuralElements, exports.textContentChildElements, exports.textContentElements, exports.graphicsElements, exports.containerElements, exports.newViewportsElements, exports.unnecessaryElements);\r\n// attributes group\r\n// https://www.w3.org/TR/SVG2/interact.html#EventAttributes\r\nexports.eventAttributes = ['onabort', 'onafterprint', 'onbeforeprint', 'onbegin', 'oncancel', 'oncanplay', 'oncanplaythrough', 'onchange', 'onclick', 'onclose', 'oncuechange', 'ondblclick', 'ondrag', 'ondragend', 'ondragenter', 'ondragexit', 'ondragleave', 'ondragover', 'ondragstart', 'ondrop', 'ondurationchange', 'onemptied', 'onend', 'onended', 'onerror', 'onerror', 'onfocus', 'onfocusin', 'onfocusout', 'onhashchange', 'oninput', 'oninvalid', 'onkeydown', 'onkeypress', 'onkeyup', 'onload', 'onloadeddata', 'onloadedmetadata', 'onloadstart', 'onmessage', 'onmousedown', 'onmouseenter', 'onmouseleave', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onmousewheel', 'onoffline', 'ononline', 'onpagehide', 'onpageshow', 'onpause', 'onplay', 'onplaying', 'onpopstate', 'onprogress', 'onratechange', 'onrepeat', 'onreset', 'onresize', 'onresize', 'onscroll', 'onscroll', 'onseeked', 'onseeking', 'onselect', 'onshow', 'onstalled', 'onstorage', 'onsubmit', 'onsuspend', 'ontimeupdate', 'ontoggle', 'onunload', 'onunload', 'onvolumechange', 'onwaiting'];\r\n// https://www.w3.org/TR/wai-aria-1.1/#aria-activedescendant\r\nexports.ariaAttributes = ['aria-activedescendant', 'aria-atomic', 'aria-busy', 'aria-checked', 'aria-colcount', 'aria-colindex', 'aria-colspan', 'aria-controls', 'aria-current', 'aria-describedby', 'aria-details', 'aria-disabled', 'aria-dropeffect', 'aria-errormessage', 'aria-expanded', 'aria-flowto', 'aria-grabbed', 'aria-haspopup', 'aria-hidden', 'aria-invalid', 'aria-keyshortcuts', 'aria-label', 'aria-labelledby', 'aria-level', 'aria-live', 'aria-modal', 'aria-multiline', 'aria-multiselectable', 'aria-orientation', 'aria-owns', 'aria-placeholder', 'aria-posinset', 'aria-pressed', 'aria-readonly', 'aria-relevant', 'aria-required', 'aria-roledescription', 'aria-rowcount', 'aria-rowindex', 'aria-rowspan', 'aria-selected', 'aria-setsize', 'aria-sort', 'aria-valuemax', 'aria-valuemin', 'aria-valuenow', 'aria-valuetext', 'role'];\r\nexports.animationAttributes = ['from', 'to', 'by', 'values'];\r\nexports.transformAttributes = ['gradientTransform', 'patternTransform', 'transform'];\r\nexports.cantCollapseAttributes = ['id', 'class', 'mask', 'style'];\r\nexports.conditionalProcessingAttributes = ['requiredExtensions', 'systemLanguage'];\r\nexports.coreAttributes = ['id', 'tabindex', 'lang', 'xml:space', 'class', 'style', 'transform'];\r\nexports.deprecatedXlinkAttributes = ['xlink:href', 'xlink:title'];\r\nexports.animationAdditionAttributes = ['additive', 'accumulate'];\r\nexports.animationTimingAttributes = ['begin', 'dur', 'end', 'min', 'max', 'restart', 'repeatCount', 'repeatDur', 'fill'];\r\nexports.animationValueAttributes = ['calcMode', 'values', 'keyTimes', 'keySplines', 'from', 'to', 'by'];\r\nexports.rectAttributes = ['x', 'y', 'width', 'height'];\r\nexports.transferFunctionElementAttributes = ['type', 'tableValues', 'slope', 'intercept', 'amplitude', 'exponent', 'offset'];\r\n// 只在 css 中生效的属性\r\nexports.onlyInCSS = ['transform', 'transform-box', 'mix-blend-mode', 'animation-name', 'animation-duration', 'animation-delay', 'animation-iteration-count', 'animation-direction', 'animation-timing-function', 'animation-fill-mode', 'animation', 'text-decoration-line', 'text-decoration-style', 'text-decoration-color', 'font-feature-settings', 'font-kerning'];\r\n// https://www.w3.org/TR/SVG/text.html#TextLayoutContentArea\r\n// todo: inline-size shape-inside shape-inside shape-subtract shape-padding shape-margin shape-image-threshold\r\n// todo: 对于 text 和 tspan 的 x y dx dy rotate 需要支持 numberlist\r\n// 特殊：不建议转 style 的 attribute\r\nexports.onlyInAttr = {\r\n    'svg': ['width', 'height'],\r\n    'text': ['x', 'y'],\r\n    'tspan': ['x', 'y'],\r\n};\r\nexports.validPseudoClass = ['hover', 'link', 'active', 'visited', 'focus', 'first-child', 'lang', 'not'];\r\nexports.validPseudoElement = ['first-letter', 'first-line'];\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/const/definitions.ts?");

/***/ }),

/***/ "./src/slimming/const/enum.ts":
/*!************************************!*\
  !*** ./src/slimming/const/enum.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n// 存储所有的枚举值\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar accumulateVal;\r\n(function (accumulateVal) {\r\n    accumulateVal[accumulateVal[\"none\"] = 0] = \"none\";\r\n    accumulateVal[accumulateVal[\"sum\"] = 1] = \"sum\";\r\n})(accumulateVal = exports.accumulateVal || (exports.accumulateVal = {}));\r\nvar additiveVal;\r\n(function (additiveVal) {\r\n    additiveVal[additiveVal[\"replace\"] = 0] = \"replace\";\r\n    additiveVal[additiveVal[\"sum\"] = 1] = \"sum\";\r\n})(additiveVal = exports.additiveVal || (exports.additiveVal = {}));\r\nvar calcModelVal;\r\n(function (calcModelVal) {\r\n    calcModelVal[calcModelVal[\"discrete\"] = 0] = \"discrete\";\r\n    calcModelVal[calcModelVal[\"linear\"] = 1] = \"linear\";\r\n    calcModelVal[calcModelVal[\"paced\"] = 2] = \"paced\";\r\n    calcModelVal[calcModelVal[\"spline\"] = 3] = \"spline\";\r\n})(calcModelVal = exports.calcModelVal || (exports.calcModelVal = {}));\r\nvar unitVal;\r\n(function (unitVal) {\r\n    unitVal[unitVal[\"userSpaceOnUse\"] = 0] = \"userSpaceOnUse\";\r\n    unitVal[unitVal[\"objectBoundingBox\"] = 1] = \"objectBoundingBox\";\r\n})(unitVal = exports.unitVal || (exports.unitVal = {}));\r\nvar crossoriginVal;\r\n(function (crossoriginVal) {\r\n    crossoriginVal[crossoriginVal[\"\"] = 0] = \"\";\r\n    crossoriginVal[crossoriginVal[\"anonymous\"] = 1] = \"anonymous\";\r\n    crossoriginVal[crossoriginVal[\"use-credentials\"] = 2] = \"use-credentials\";\r\n})(crossoriginVal = exports.crossoriginVal || (exports.crossoriginVal = {}));\r\nvar durVal;\r\n(function (durVal) {\r\n    durVal[durVal[\"media\"] = 0] = \"media\";\r\n    durVal[durVal[\"indefinite\"] = 1] = \"indefinite\";\r\n})(durVal = exports.durVal || (exports.durVal = {}));\r\nvar edgeModeVal;\r\n(function (edgeModeVal) {\r\n    edgeModeVal[edgeModeVal[\"duplicate\"] = 0] = \"duplicate\";\r\n    edgeModeVal[edgeModeVal[\"wrap\"] = 1] = \"wrap\";\r\n    edgeModeVal[edgeModeVal[\"none\"] = 2] = \"none\";\r\n})(edgeModeVal = exports.edgeModeVal || (exports.edgeModeVal = {}));\r\nvar inVal;\r\n(function (inVal) {\r\n    inVal[inVal[\"SourceGraphic\"] = 0] = \"SourceGraphic\";\r\n    inVal[inVal[\"SourceAlpha\"] = 1] = \"SourceAlpha\";\r\n    inVal[inVal[\"BackgroundImage\"] = 2] = \"BackgroundImage\";\r\n    inVal[inVal[\"BackgroundAlpha\"] = 3] = \"BackgroundAlpha\";\r\n    inVal[inVal[\"FillPaint\"] = 4] = \"FillPaint\";\r\n    inVal[inVal[\"StrokePaint\"] = 5] = \"StrokePaint\";\r\n})(inVal = exports.inVal || (exports.inVal = {}));\r\nvar lengthAdjustVal;\r\n(function (lengthAdjustVal) {\r\n    lengthAdjustVal[lengthAdjustVal[\"spacing\"] = 0] = \"spacing\";\r\n    lengthAdjustVal[lengthAdjustVal[\"spacingAndGlyphs\"] = 1] = \"spacingAndGlyphs\";\r\n})(lengthAdjustVal = exports.lengthAdjustVal || (exports.lengthAdjustVal = {}));\r\nvar markerUnitVal;\r\n(function (markerUnitVal) {\r\n    markerUnitVal[markerUnitVal[\"strokeWidth\"] = 0] = \"strokeWidth\";\r\n    markerUnitVal[markerUnitVal[\"userSpaceOnUse\"] = 1] = \"userSpaceOnUse\";\r\n})(markerUnitVal = exports.markerUnitVal || (exports.markerUnitVal = {}));\r\nvar methodVal;\r\n(function (methodVal) {\r\n    methodVal[methodVal[\"align\"] = 0] = \"align\";\r\n    methodVal[methodVal[\"stretch\"] = 1] = \"stretch\";\r\n})(methodVal = exports.methodVal || (exports.methodVal = {}));\r\nvar blendModeVal;\r\n(function (blendModeVal) {\r\n    blendModeVal[blendModeVal[\"normal\"] = 0] = \"normal\";\r\n    blendModeVal[blendModeVal[\"multiply\"] = 1] = \"multiply\";\r\n    blendModeVal[blendModeVal[\"screen\"] = 2] = \"screen\";\r\n    blendModeVal[blendModeVal[\"overlay\"] = 3] = \"overlay\";\r\n    blendModeVal[blendModeVal[\"darken\"] = 4] = \"darken\";\r\n    blendModeVal[blendModeVal[\"lighten\"] = 5] = \"lighten\";\r\n    blendModeVal[blendModeVal[\"color-dodge\"] = 6] = \"color-dodge\";\r\n    blendModeVal[blendModeVal[\"color-burn\"] = 7] = \"color-burn\";\r\n    blendModeVal[blendModeVal[\"hard-light\"] = 8] = \"hard-light\";\r\n    blendModeVal[blendModeVal[\"soft-light\"] = 9] = \"soft-light\";\r\n    blendModeVal[blendModeVal[\"difference\"] = 10] = \"difference\";\r\n    blendModeVal[blendModeVal[\"exclusion\"] = 11] = \"exclusion\";\r\n    blendModeVal[blendModeVal[\"hue\"] = 12] = \"hue\";\r\n    blendModeVal[blendModeVal[\"saturation\"] = 13] = \"saturation\";\r\n    blendModeVal[blendModeVal[\"color\"] = 14] = \"color\";\r\n    blendModeVal[blendModeVal[\"luminosity\"] = 15] = \"luminosity\";\r\n})(blendModeVal = exports.blendModeVal || (exports.blendModeVal = {}));\r\nvar operaterVal;\r\n(function (operaterVal) {\r\n    operaterVal[operaterVal[\"over\"] = 0] = \"over\";\r\n    operaterVal[operaterVal[\"in\"] = 1] = \"in\";\r\n    operaterVal[operaterVal[\"out\"] = 2] = \"out\";\r\n    operaterVal[operaterVal[\"atop\"] = 3] = \"atop\";\r\n    operaterVal[operaterVal[\"xor\"] = 4] = \"xor\";\r\n    operaterVal[operaterVal[\"lighter\"] = 5] = \"lighter\";\r\n    operaterVal[operaterVal[\"arithmetic\"] = 6] = \"arithmetic\";\r\n})(operaterVal = exports.operaterVal || (exports.operaterVal = {}));\r\nvar operaterVal1;\r\n(function (operaterVal1) {\r\n    operaterVal1[operaterVal1[\"erode\"] = 0] = \"erode\";\r\n    operaterVal1[operaterVal1[\"dilate\"] = 1] = \"dilate\";\r\n})(operaterVal1 = exports.operaterVal1 || (exports.operaterVal1 = {}));\r\nvar orientVal;\r\n(function (orientVal) {\r\n    orientVal[orientVal[\"auto\"] = 0] = \"auto\";\r\n    orientVal[orientVal[\"auto-start-reverse\"] = 1] = \"auto-start-reverse\";\r\n})(orientVal = exports.orientVal || (exports.orientVal = {}));\r\nvar playbackorderVal;\r\n(function (playbackorderVal) {\r\n    playbackorderVal[playbackorderVal[\"forwardonly\"] = 0] = \"forwardonly\";\r\n    playbackorderVal[playbackorderVal[\"all\"] = 1] = \"all\";\r\n})(playbackorderVal = exports.playbackorderVal || (exports.playbackorderVal = {}));\r\nvar booleanVal;\r\n(function (booleanVal) {\r\n    booleanVal[booleanVal[\"false\"] = 0] = \"false\";\r\n    booleanVal[booleanVal[\"true\"] = 1] = \"true\";\r\n})(booleanVal = exports.booleanVal || (exports.booleanVal = {}));\r\nvar alignXVal;\r\n(function (alignXVal) {\r\n    alignXVal[alignXVal[\"left\"] = 0] = \"left\";\r\n    alignXVal[alignXVal[\"center\"] = 1] = \"center\";\r\n    alignXVal[alignXVal[\"right\"] = 2] = \"right\";\r\n})(alignXVal = exports.alignXVal || (exports.alignXVal = {}));\r\nvar alignYVal;\r\n(function (alignYVal) {\r\n    alignYVal[alignYVal[\"top\"] = 0] = \"top\";\r\n    alignYVal[alignYVal[\"center\"] = 1] = \"center\";\r\n    alignYVal[alignYVal[\"bottom\"] = 2] = \"bottom\";\r\n})(alignYVal = exports.alignYVal || (exports.alignYVal = {}));\r\nvar restartVal;\r\n(function (restartVal) {\r\n    restartVal[restartVal[\"always\"] = 0] = \"always\";\r\n    restartVal[restartVal[\"whenNotActive\"] = 1] = \"whenNotActive\";\r\n    restartVal[restartVal[\"never\"] = 2] = \"never\";\r\n})(restartVal = exports.restartVal || (exports.restartVal = {}));\r\nvar rotateVal;\r\n(function (rotateVal) {\r\n    rotateVal[rotateVal[\"auto\"] = 0] = \"auto\";\r\n    rotateVal[rotateVal[\"auto-reverse\"] = 1] = \"auto-reverse\";\r\n})(rotateVal = exports.rotateVal || (exports.rotateVal = {}));\r\nvar sideVal;\r\n(function (sideVal) {\r\n    sideVal[sideVal[\"left\"] = 0] = \"left\";\r\n    sideVal[sideVal[\"right\"] = 1] = \"right\";\r\n})(sideVal = exports.sideVal || (exports.sideVal = {}));\r\nvar spacingVal;\r\n(function (spacingVal) {\r\n    spacingVal[spacingVal[\"auto\"] = 0] = \"auto\";\r\n    spacingVal[spacingVal[\"exact\"] = 1] = \"exact\";\r\n})(spacingVal = exports.spacingVal || (exports.spacingVal = {}));\r\nvar spreadMethodVal;\r\n(function (spreadMethodVal) {\r\n    spreadMethodVal[spreadMethodVal[\"pad\"] = 0] = \"pad\";\r\n    spreadMethodVal[spreadMethodVal[\"reflect\"] = 1] = \"reflect\";\r\n    spreadMethodVal[spreadMethodVal[\"repeat\"] = 2] = \"repeat\";\r\n})(spreadMethodVal = exports.spreadMethodVal || (exports.spreadMethodVal = {}));\r\nvar stitchVal;\r\n(function (stitchVal) {\r\n    stitchVal[stitchVal[\"stitch\"] = 0] = \"stitch\";\r\n    stitchVal[stitchVal[\"noStitch\"] = 1] = \"noStitch\";\r\n})(stitchVal = exports.stitchVal || (exports.stitchVal = {}));\r\nvar targetVal;\r\n(function (targetVal) {\r\n    targetVal[targetVal[\"_self\"] = 0] = \"_self\";\r\n    targetVal[targetVal[\"_parent\"] = 1] = \"_parent\";\r\n    targetVal[targetVal[\"_top\"] = 2] = \"_top\";\r\n    targetVal[targetVal[\"_blank\"] = 3] = \"_blank\";\r\n})(targetVal = exports.targetVal || (exports.targetVal = {}));\r\nvar timelinebeginVal;\r\n(function (timelinebeginVal) {\r\n    timelinebeginVal[timelinebeginVal[\"loadend\"] = 0] = \"loadend\";\r\n    timelinebeginVal[timelinebeginVal[\"loadbegin\"] = 1] = \"loadbegin\";\r\n})(timelinebeginVal = exports.timelinebeginVal || (exports.timelinebeginVal = {}));\r\nvar animateTransformType;\r\n(function (animateTransformType) {\r\n    animateTransformType[animateTransformType[\"translate\"] = 0] = \"translate\";\r\n    animateTransformType[animateTransformType[\"scale\"] = 1] = \"scale\";\r\n    animateTransformType[animateTransformType[\"rotate\"] = 2] = \"rotate\";\r\n    animateTransformType[animateTransformType[\"skewX\"] = 3] = \"skewX\";\r\n    animateTransformType[animateTransformType[\"skewY\"] = 4] = \"skewY\";\r\n})(animateTransformType = exports.animateTransformType || (exports.animateTransformType = {}));\r\nvar feColorMatrixType;\r\n(function (feColorMatrixType) {\r\n    feColorMatrixType[feColorMatrixType[\"matrix\"] = 0] = \"matrix\";\r\n    feColorMatrixType[feColorMatrixType[\"saturate\"] = 1] = \"saturate\";\r\n    feColorMatrixType[feColorMatrixType[\"hueRotate\"] = 2] = \"hueRotate\";\r\n    feColorMatrixType[feColorMatrixType[\"luminanceToAlpha\"] = 3] = \"luminanceToAlpha\";\r\n})(feColorMatrixType = exports.feColorMatrixType || (exports.feColorMatrixType = {}));\r\nvar feFuncType;\r\n(function (feFuncType) {\r\n    feFuncType[feFuncType[\"identity\"] = 0] = \"identity\";\r\n    feFuncType[feFuncType[\"table\"] = 1] = \"table\";\r\n    feFuncType[feFuncType[\"discrete\"] = 2] = \"discrete\";\r\n    feFuncType[feFuncType[\"linear\"] = 3] = \"linear\";\r\n    feFuncType[feFuncType[\"gamma\"] = 4] = \"gamma\";\r\n})(feFuncType = exports.feFuncType || (exports.feFuncType = {}));\r\nvar feTurbulenceType;\r\n(function (feTurbulenceType) {\r\n    feTurbulenceType[feTurbulenceType[\"fractalNoise\"] = 0] = \"fractalNoise\";\r\n    feTurbulenceType[feTurbulenceType[\"turbulence\"] = 1] = \"turbulence\";\r\n})(feTurbulenceType = exports.feTurbulenceType || (exports.feTurbulenceType = {}));\r\nvar channelVal;\r\n(function (channelVal) {\r\n    channelVal[channelVal[\"R\"] = 0] = \"R\";\r\n    channelVal[channelVal[\"G\"] = 1] = \"G\";\r\n    channelVal[channelVal[\"B\"] = 2] = \"B\";\r\n    channelVal[channelVal[\"A\"] = 3] = \"A\";\r\n})(channelVal = exports.channelVal || (exports.channelVal = {}));\r\nvar xmlSpaceVal;\r\n(function (xmlSpaceVal) {\r\n    xmlSpaceVal[xmlSpaceVal[\"default\"] = 0] = \"default\";\r\n    xmlSpaceVal[xmlSpaceVal[\"preserve\"] = 1] = \"preserve\";\r\n})(xmlSpaceVal = exports.xmlSpaceVal || (exports.xmlSpaceVal = {}));\r\nvar zoomAndPanVal;\r\n(function (zoomAndPanVal) {\r\n    zoomAndPanVal[zoomAndPanVal[\"disable\"] = 0] = \"disable\";\r\n    zoomAndPanVal[zoomAndPanVal[\"magnify\"] = 1] = \"magnify\";\r\n})(zoomAndPanVal = exports.zoomAndPanVal || (exports.zoomAndPanVal = {}));\r\nvar alignmentBaseline;\r\n(function (alignmentBaseline) {\r\n    alignmentBaseline[alignmentBaseline[\"auto\"] = 0] = \"auto\";\r\n    alignmentBaseline[alignmentBaseline[\"baseline\"] = 1] = \"baseline\";\r\n    alignmentBaseline[alignmentBaseline[\"before-edge\"] = 2] = \"before-edge\";\r\n    alignmentBaseline[alignmentBaseline[\"text-before-edge\"] = 3] = \"text-before-edge\";\r\n    alignmentBaseline[alignmentBaseline[\"middle\"] = 4] = \"middle\";\r\n    alignmentBaseline[alignmentBaseline[\"central\"] = 5] = \"central\";\r\n    alignmentBaseline[alignmentBaseline[\"after-edge\"] = 6] = \"after-edge\";\r\n    alignmentBaseline[alignmentBaseline[\"text-after-edge\"] = 7] = \"text-after-edge\";\r\n    alignmentBaseline[alignmentBaseline[\"ideographic\"] = 8] = \"ideographic\";\r\n    alignmentBaseline[alignmentBaseline[\"alphabetic\"] = 9] = \"alphabetic\";\r\n    alignmentBaseline[alignmentBaseline[\"hanging\"] = 10] = \"hanging\";\r\n    alignmentBaseline[alignmentBaseline[\"mathematical\"] = 11] = \"mathematical\";\r\n})(alignmentBaseline = exports.alignmentBaseline || (exports.alignmentBaseline = {}));\r\nvar baselineShift;\r\n(function (baselineShift) {\r\n    baselineShift[baselineShift[\"sub\"] = 0] = \"sub\";\r\n    baselineShift[baselineShift[\"super\"] = 1] = \"super\";\r\n})(baselineShift = exports.baselineShift || (exports.baselineShift = {}));\r\nvar clipBox;\r\n(function (clipBox) {\r\n    clipBox[clipBox[\"border-box\"] = 0] = \"border-box\";\r\n    clipBox[clipBox[\"padding-box\"] = 1] = \"padding-box\";\r\n    clipBox[clipBox[\"content-box\"] = 2] = \"content-box\";\r\n    clipBox[clipBox[\"margin-box\"] = 3] = \"margin-box\";\r\n    clipBox[clipBox[\"fill-box\"] = 4] = \"fill-box\";\r\n    clipBox[clipBox[\"stroke-box\"] = 5] = \"stroke-box\";\r\n    clipBox[clipBox[\"view-box\"] = 6] = \"view-box\";\r\n})(clipBox = exports.clipBox || (exports.clipBox = {}));\r\nvar nonzeroEvenodd;\r\n(function (nonzeroEvenodd) {\r\n    nonzeroEvenodd[nonzeroEvenodd[\"nonzero\"] = 0] = \"nonzero\";\r\n    nonzeroEvenodd[nonzeroEvenodd[\"evenodd\"] = 1] = \"evenodd\";\r\n})(nonzeroEvenodd = exports.nonzeroEvenodd || (exports.nonzeroEvenodd = {}));\r\n// css 值的全局关键字\r\nvar CSSWideKeywords;\r\n(function (CSSWideKeywords) {\r\n    CSSWideKeywords[CSSWideKeywords[\"inherit\"] = 0] = \"inherit\";\r\n    CSSWideKeywords[CSSWideKeywords[\"initial\"] = 1] = \"initial\";\r\n    CSSWideKeywords[CSSWideKeywords[\"unset\"] = 2] = \"unset\";\r\n})(CSSWideKeywords = exports.CSSWideKeywords || (exports.CSSWideKeywords = {}));\r\nvar colorKeywords;\r\n(function (colorKeywords) {\r\n    colorKeywords[colorKeywords[\"currentColor\"] = 0] = \"currentColor\";\r\n    colorKeywords[colorKeywords[\"transparent\"] = 1] = \"transparent\";\r\n})(colorKeywords = exports.colorKeywords || (exports.colorKeywords = {}));\r\nvar x11Colors;\r\n(function (x11Colors) {\r\n    x11Colors[x11Colors[\"aliceblue\"] = 0] = \"aliceblue\";\r\n    x11Colors[x11Colors[\"antiquewhite\"] = 1] = \"antiquewhite\";\r\n    x11Colors[x11Colors[\"aqua\"] = 2] = \"aqua\";\r\n    x11Colors[x11Colors[\"aquamarine\"] = 3] = \"aquamarine\";\r\n    x11Colors[x11Colors[\"azure\"] = 4] = \"azure\";\r\n    x11Colors[x11Colors[\"beige\"] = 5] = \"beige\";\r\n    x11Colors[x11Colors[\"bisque\"] = 6] = \"bisque\";\r\n    x11Colors[x11Colors[\"black\"] = 7] = \"black\";\r\n    x11Colors[x11Colors[\"blanchedalmond\"] = 8] = \"blanchedalmond\";\r\n    x11Colors[x11Colors[\"blue\"] = 9] = \"blue\";\r\n    x11Colors[x11Colors[\"blueviolet\"] = 10] = \"blueviolet\";\r\n    x11Colors[x11Colors[\"brown\"] = 11] = \"brown\";\r\n    x11Colors[x11Colors[\"burlywood\"] = 12] = \"burlywood\";\r\n    x11Colors[x11Colors[\"cadetblue\"] = 13] = \"cadetblue\";\r\n    x11Colors[x11Colors[\"chartreuse\"] = 14] = \"chartreuse\";\r\n    x11Colors[x11Colors[\"chocolate\"] = 15] = \"chocolate\";\r\n    x11Colors[x11Colors[\"coral\"] = 16] = \"coral\";\r\n    x11Colors[x11Colors[\"cornflowerblue\"] = 17] = \"cornflowerblue\";\r\n    x11Colors[x11Colors[\"cornsilk\"] = 18] = \"cornsilk\";\r\n    x11Colors[x11Colors[\"crimson\"] = 19] = \"crimson\";\r\n    x11Colors[x11Colors[\"cyan\"] = 20] = \"cyan\";\r\n    x11Colors[x11Colors[\"darkblue\"] = 21] = \"darkblue\";\r\n    x11Colors[x11Colors[\"darkcyan\"] = 22] = \"darkcyan\";\r\n    x11Colors[x11Colors[\"darkgoldenrod\"] = 23] = \"darkgoldenrod\";\r\n    x11Colors[x11Colors[\"darkgray\"] = 24] = \"darkgray\";\r\n    x11Colors[x11Colors[\"darkgreen\"] = 25] = \"darkgreen\";\r\n    x11Colors[x11Colors[\"darkgrey\"] = 26] = \"darkgrey\";\r\n    x11Colors[x11Colors[\"darkkhaki\"] = 27] = \"darkkhaki\";\r\n    x11Colors[x11Colors[\"darkmagenta\"] = 28] = \"darkmagenta\";\r\n    x11Colors[x11Colors[\"darkolivegreen\"] = 29] = \"darkolivegreen\";\r\n    x11Colors[x11Colors[\"darkorange\"] = 30] = \"darkorange\";\r\n    x11Colors[x11Colors[\"darkorchid\"] = 31] = \"darkorchid\";\r\n    x11Colors[x11Colors[\"darkred\"] = 32] = \"darkred\";\r\n    x11Colors[x11Colors[\"darksalmon\"] = 33] = \"darksalmon\";\r\n    x11Colors[x11Colors[\"darkseagreen\"] = 34] = \"darkseagreen\";\r\n    x11Colors[x11Colors[\"darkslateblue\"] = 35] = \"darkslateblue\";\r\n    x11Colors[x11Colors[\"darkslategray\"] = 36] = \"darkslategray\";\r\n    x11Colors[x11Colors[\"darkslategrey\"] = 37] = \"darkslategrey\";\r\n    x11Colors[x11Colors[\"darkturquoise\"] = 38] = \"darkturquoise\";\r\n    x11Colors[x11Colors[\"darkviolet\"] = 39] = \"darkviolet\";\r\n    x11Colors[x11Colors[\"deeppink\"] = 40] = \"deeppink\";\r\n    x11Colors[x11Colors[\"deepskyblue\"] = 41] = \"deepskyblue\";\r\n    x11Colors[x11Colors[\"dimgray\"] = 42] = \"dimgray\";\r\n    x11Colors[x11Colors[\"dimgrey\"] = 43] = \"dimgrey\";\r\n    x11Colors[x11Colors[\"dodgerblue\"] = 44] = \"dodgerblue\";\r\n    x11Colors[x11Colors[\"firebrick\"] = 45] = \"firebrick\";\r\n    x11Colors[x11Colors[\"floralwhite\"] = 46] = \"floralwhite\";\r\n    x11Colors[x11Colors[\"forestgreen\"] = 47] = \"forestgreen\";\r\n    x11Colors[x11Colors[\"fuchsia\"] = 48] = \"fuchsia\";\r\n    x11Colors[x11Colors[\"gainsboro\"] = 49] = \"gainsboro\";\r\n    x11Colors[x11Colors[\"ghostwhite\"] = 50] = \"ghostwhite\";\r\n    x11Colors[x11Colors[\"gold\"] = 51] = \"gold\";\r\n    x11Colors[x11Colors[\"goldenrod\"] = 52] = \"goldenrod\";\r\n    x11Colors[x11Colors[\"gray\"] = 53] = \"gray\";\r\n    x11Colors[x11Colors[\"green\"] = 54] = \"green\";\r\n    x11Colors[x11Colors[\"greenyellow\"] = 55] = \"greenyellow\";\r\n    x11Colors[x11Colors[\"grey\"] = 56] = \"grey\";\r\n    x11Colors[x11Colors[\"honeydew\"] = 57] = \"honeydew\";\r\n    x11Colors[x11Colors[\"hotpink\"] = 58] = \"hotpink\";\r\n    x11Colors[x11Colors[\"indianred\"] = 59] = \"indianred\";\r\n    x11Colors[x11Colors[\"indigo\"] = 60] = \"indigo\";\r\n    x11Colors[x11Colors[\"ivory\"] = 61] = \"ivory\";\r\n    x11Colors[x11Colors[\"khaki\"] = 62] = \"khaki\";\r\n    x11Colors[x11Colors[\"lavender\"] = 63] = \"lavender\";\r\n    x11Colors[x11Colors[\"lavenderblush\"] = 64] = \"lavenderblush\";\r\n    x11Colors[x11Colors[\"lawngreen\"] = 65] = \"lawngreen\";\r\n    x11Colors[x11Colors[\"lemonchiffon\"] = 66] = \"lemonchiffon\";\r\n    x11Colors[x11Colors[\"lightblue\"] = 67] = \"lightblue\";\r\n    x11Colors[x11Colors[\"lightcoral\"] = 68] = \"lightcoral\";\r\n    x11Colors[x11Colors[\"lightcyan\"] = 69] = \"lightcyan\";\r\n    x11Colors[x11Colors[\"lightgoldenrodyellow\"] = 70] = \"lightgoldenrodyellow\";\r\n    x11Colors[x11Colors[\"lightgray\"] = 71] = \"lightgray\";\r\n    x11Colors[x11Colors[\"lightgreen\"] = 72] = \"lightgreen\";\r\n    x11Colors[x11Colors[\"lightgrey\"] = 73] = \"lightgrey\";\r\n    x11Colors[x11Colors[\"lightpink\"] = 74] = \"lightpink\";\r\n    x11Colors[x11Colors[\"lightsalmon\"] = 75] = \"lightsalmon\";\r\n    x11Colors[x11Colors[\"lightseagreen\"] = 76] = \"lightseagreen\";\r\n    x11Colors[x11Colors[\"lightskyblue\"] = 77] = \"lightskyblue\";\r\n    x11Colors[x11Colors[\"lightslategray\"] = 78] = \"lightslategray\";\r\n    x11Colors[x11Colors[\"lightslategrey\"] = 79] = \"lightslategrey\";\r\n    x11Colors[x11Colors[\"lightsteelblue\"] = 80] = \"lightsteelblue\";\r\n    x11Colors[x11Colors[\"lightyellow\"] = 81] = \"lightyellow\";\r\n    x11Colors[x11Colors[\"lime\"] = 82] = \"lime\";\r\n    x11Colors[x11Colors[\"limegreen\"] = 83] = \"limegreen\";\r\n    x11Colors[x11Colors[\"linen\"] = 84] = \"linen\";\r\n    x11Colors[x11Colors[\"magenta\"] = 85] = \"magenta\";\r\n    x11Colors[x11Colors[\"maroon\"] = 86] = \"maroon\";\r\n    x11Colors[x11Colors[\"mediumaquamarine\"] = 87] = \"mediumaquamarine\";\r\n    x11Colors[x11Colors[\"mediumblue\"] = 88] = \"mediumblue\";\r\n    x11Colors[x11Colors[\"mediumorchid\"] = 89] = \"mediumorchid\";\r\n    x11Colors[x11Colors[\"mediumpurple\"] = 90] = \"mediumpurple\";\r\n    x11Colors[x11Colors[\"mediumseagreen\"] = 91] = \"mediumseagreen\";\r\n    x11Colors[x11Colors[\"mediumslateblue\"] = 92] = \"mediumslateblue\";\r\n    x11Colors[x11Colors[\"mediumspringgreen\"] = 93] = \"mediumspringgreen\";\r\n    x11Colors[x11Colors[\"mediumturquoise\"] = 94] = \"mediumturquoise\";\r\n    x11Colors[x11Colors[\"mediumvioletred\"] = 95] = \"mediumvioletred\";\r\n    x11Colors[x11Colors[\"midnightblue\"] = 96] = \"midnightblue\";\r\n    x11Colors[x11Colors[\"mintcream\"] = 97] = \"mintcream\";\r\n    x11Colors[x11Colors[\"mistyrose\"] = 98] = \"mistyrose\";\r\n    x11Colors[x11Colors[\"moccasin\"] = 99] = \"moccasin\";\r\n    x11Colors[x11Colors[\"navajowhite\"] = 100] = \"navajowhite\";\r\n    x11Colors[x11Colors[\"navy\"] = 101] = \"navy\";\r\n    x11Colors[x11Colors[\"oldlace\"] = 102] = \"oldlace\";\r\n    x11Colors[x11Colors[\"olive\"] = 103] = \"olive\";\r\n    x11Colors[x11Colors[\"olivedrab\"] = 104] = \"olivedrab\";\r\n    x11Colors[x11Colors[\"orange\"] = 105] = \"orange\";\r\n    x11Colors[x11Colors[\"orangered\"] = 106] = \"orangered\";\r\n    x11Colors[x11Colors[\"orchid\"] = 107] = \"orchid\";\r\n    x11Colors[x11Colors[\"palegoldenrod\"] = 108] = \"palegoldenrod\";\r\n    x11Colors[x11Colors[\"palegreen\"] = 109] = \"palegreen\";\r\n    x11Colors[x11Colors[\"paleturquoise\"] = 110] = \"paleturquoise\";\r\n    x11Colors[x11Colors[\"palevioletred\"] = 111] = \"palevioletred\";\r\n    x11Colors[x11Colors[\"papayawhip\"] = 112] = \"papayawhip\";\r\n    x11Colors[x11Colors[\"peachpuff\"] = 113] = \"peachpuff\";\r\n    x11Colors[x11Colors[\"peru\"] = 114] = \"peru\";\r\n    x11Colors[x11Colors[\"pink\"] = 115] = \"pink\";\r\n    x11Colors[x11Colors[\"plum\"] = 116] = \"plum\";\r\n    x11Colors[x11Colors[\"powderblue\"] = 117] = \"powderblue\";\r\n    x11Colors[x11Colors[\"purple\"] = 118] = \"purple\";\r\n    x11Colors[x11Colors[\"rebeccapurple\"] = 119] = \"rebeccapurple\";\r\n    x11Colors[x11Colors[\"red\"] = 120] = \"red\";\r\n    x11Colors[x11Colors[\"rosybrown\"] = 121] = \"rosybrown\";\r\n    x11Colors[x11Colors[\"royalblue\"] = 122] = \"royalblue\";\r\n    x11Colors[x11Colors[\"saddlebrown\"] = 123] = \"saddlebrown\";\r\n    x11Colors[x11Colors[\"salmon\"] = 124] = \"salmon\";\r\n    x11Colors[x11Colors[\"sandybrown\"] = 125] = \"sandybrown\";\r\n    x11Colors[x11Colors[\"seagreen\"] = 126] = \"seagreen\";\r\n    x11Colors[x11Colors[\"seashell\"] = 127] = \"seashell\";\r\n    x11Colors[x11Colors[\"sienna\"] = 128] = \"sienna\";\r\n    x11Colors[x11Colors[\"silver\"] = 129] = \"silver\";\r\n    x11Colors[x11Colors[\"skyblue\"] = 130] = \"skyblue\";\r\n    x11Colors[x11Colors[\"slateblue\"] = 131] = \"slateblue\";\r\n    x11Colors[x11Colors[\"slategray\"] = 132] = \"slategray\";\r\n    x11Colors[x11Colors[\"slategrey\"] = 133] = \"slategrey\";\r\n    x11Colors[x11Colors[\"snow\"] = 134] = \"snow\";\r\n    x11Colors[x11Colors[\"springgreen\"] = 135] = \"springgreen\";\r\n    x11Colors[x11Colors[\"steelblue\"] = 136] = \"steelblue\";\r\n    x11Colors[x11Colors[\"tan\"] = 137] = \"tan\";\r\n    x11Colors[x11Colors[\"teal\"] = 138] = \"teal\";\r\n    x11Colors[x11Colors[\"thistle\"] = 139] = \"thistle\";\r\n    x11Colors[x11Colors[\"tomato\"] = 140] = \"tomato\";\r\n    x11Colors[x11Colors[\"turquoise\"] = 141] = \"turquoise\";\r\n    x11Colors[x11Colors[\"violet\"] = 142] = \"violet\";\r\n    x11Colors[x11Colors[\"wheat\"] = 143] = \"wheat\";\r\n    x11Colors[x11Colors[\"white\"] = 144] = \"white\";\r\n    x11Colors[x11Colors[\"whitesmoke\"] = 145] = \"whitesmoke\";\r\n    x11Colors[x11Colors[\"yellow\"] = 146] = \"yellow\";\r\n    x11Colors[x11Colors[\"yellowgreen\"] = 147] = \"yellowgreen\";\r\n})(x11Colors = exports.x11Colors || (exports.x11Colors = {}));\r\nvar systemColor;\r\n(function (systemColor) {\r\n    systemColor[systemColor[\"ActiveBorder\"] = 0] = \"ActiveBorder\";\r\n    systemColor[systemColor[\"ActiveCaption\"] = 1] = \"ActiveCaption\";\r\n    systemColor[systemColor[\"AppWorkspace\"] = 2] = \"AppWorkspace\";\r\n    systemColor[systemColor[\"Background\"] = 3] = \"Background\";\r\n    systemColor[systemColor[\"ButtonFace\"] = 4] = \"ButtonFace\";\r\n    systemColor[systemColor[\"ButtonHighlight\"] = 5] = \"ButtonHighlight\";\r\n    systemColor[systemColor[\"ButtonShadow\"] = 6] = \"ButtonShadow\";\r\n    systemColor[systemColor[\"ButtonText\"] = 7] = \"ButtonText\";\r\n    systemColor[systemColor[\"CaptionText\"] = 8] = \"CaptionText\";\r\n    systemColor[systemColor[\"GrayText\"] = 9] = \"GrayText\";\r\n    systemColor[systemColor[\"Highlight\"] = 10] = \"Highlight\";\r\n    systemColor[systemColor[\"HighlightText\"] = 11] = \"HighlightText\";\r\n    systemColor[systemColor[\"InactiveBorder\"] = 12] = \"InactiveBorder\";\r\n    systemColor[systemColor[\"InactiveCaption\"] = 13] = \"InactiveCaption\";\r\n    systemColor[systemColor[\"InactiveCaptionText\"] = 14] = \"InactiveCaptionText\";\r\n    systemColor[systemColor[\"InfoBackground\"] = 15] = \"InfoBackground\";\r\n    systemColor[systemColor[\"InfoText\"] = 16] = \"InfoText\";\r\n    systemColor[systemColor[\"Menu\"] = 17] = \"Menu\";\r\n    systemColor[systemColor[\"MenuText\"] = 18] = \"MenuText\";\r\n    systemColor[systemColor[\"Scrollbar\"] = 19] = \"Scrollbar\";\r\n    systemColor[systemColor[\"ThreeDDarkShadow\"] = 20] = \"ThreeDDarkShadow\";\r\n    systemColor[systemColor[\"ThreeDFace\"] = 21] = \"ThreeDFace\";\r\n    systemColor[systemColor[\"ThreeDHighlight\"] = 22] = \"ThreeDHighlight\";\r\n    systemColor[systemColor[\"ThreeDLightShadow\"] = 23] = \"ThreeDLightShadow\";\r\n    systemColor[systemColor[\"ThreeDShadow\"] = 24] = \"ThreeDShadow\";\r\n    systemColor[systemColor[\"Window\"] = 25] = \"Window\";\r\n    systemColor[systemColor[\"WindowFrame\"] = 26] = \"WindowFrame\";\r\n    systemColor[systemColor[\"WindowText\"] = 27] = \"WindowText\";\r\n})(systemColor = exports.systemColor || (exports.systemColor = {}));\r\nvar colorInterpolation;\r\n(function (colorInterpolation) {\r\n    colorInterpolation[colorInterpolation[\"auto\"] = 0] = \"auto\";\r\n    colorInterpolation[colorInterpolation[\"sRGB\"] = 1] = \"sRGB\";\r\n    colorInterpolation[colorInterpolation[\"linearRGB\"] = 2] = \"linearRGB\";\r\n})(colorInterpolation = exports.colorInterpolation || (exports.colorInterpolation = {}));\r\nvar colorRendering;\r\n(function (colorRendering) {\r\n    colorRendering[colorRendering[\"auto\"] = 0] = \"auto\";\r\n    colorRendering[colorRendering[\"optimizeSpeed\"] = 1] = \"optimizeSpeed\";\r\n    colorRendering[colorRendering[\"optimizeQuality\"] = 2] = \"optimizeQuality\";\r\n})(colorRendering = exports.colorRendering || (exports.colorRendering = {}));\r\nvar direction;\r\n(function (direction) {\r\n    direction[direction[\"ltr\"] = 0] = \"ltr\";\r\n    direction[direction[\"rtl\"] = 1] = \"rtl\";\r\n})(direction = exports.direction || (exports.direction = {}));\r\nvar display;\r\n(function (display) {\r\n    display[display[\"inline\"] = 0] = \"inline\";\r\n    display[display[\"block\"] = 1] = \"block\";\r\n    display[display[\"list-item\"] = 2] = \"list-item\";\r\n    display[display[\"run-in\"] = 3] = \"run-in\";\r\n    display[display[\"compact\"] = 4] = \"compact\";\r\n    display[display[\"marker\"] = 5] = \"marker\";\r\n    display[display[\"table\"] = 6] = \"table\";\r\n    display[display[\"inline-table\"] = 7] = \"inline-table\";\r\n    display[display[\"table-row-group\"] = 8] = \"table-row-group\";\r\n    display[display[\"table-header-group\"] = 9] = \"table-header-group\";\r\n    display[display[\"table-footer-group\"] = 10] = \"table-footer-group\";\r\n    display[display[\"table-row\"] = 11] = \"table-row\";\r\n    display[display[\"table-column-group\"] = 12] = \"table-column-group\";\r\n    display[display[\"table-column\"] = 13] = \"table-column\";\r\n    display[display[\"table-cell\"] = 14] = \"table-cell\";\r\n    display[display[\"table-caption\"] = 15] = \"table-caption\";\r\n    display[display[\"none\"] = 16] = \"none\";\r\n})(display = exports.display || (exports.display = {}));\r\nvar dominantBaseline;\r\n(function (dominantBaseline) {\r\n    dominantBaseline[dominantBaseline[\"auto\"] = 0] = \"auto\";\r\n    dominantBaseline[dominantBaseline[\"use-script\"] = 1] = \"use-script\";\r\n    dominantBaseline[dominantBaseline[\"no-change\"] = 2] = \"no-change\";\r\n    dominantBaseline[dominantBaseline[\"reset-size\"] = 3] = \"reset-size\";\r\n    dominantBaseline[dominantBaseline[\"ideographic\"] = 4] = \"ideographic\";\r\n    dominantBaseline[dominantBaseline[\"alphabetic\"] = 5] = \"alphabetic\";\r\n    dominantBaseline[dominantBaseline[\"hanging\"] = 6] = \"hanging\";\r\n    dominantBaseline[dominantBaseline[\"mathematical\"] = 7] = \"mathematical\";\r\n    dominantBaseline[dominantBaseline[\"central\"] = 8] = \"central\";\r\n    dominantBaseline[dominantBaseline[\"middle\"] = 9] = \"middle\";\r\n    dominantBaseline[dominantBaseline[\"text-after-edge\"] = 10] = \"text-after-edge\";\r\n    dominantBaseline[dominantBaseline[\"text-before-edge\"] = 11] = \"text-before-edge\";\r\n})(dominantBaseline = exports.dominantBaseline || (exports.dominantBaseline = {}));\r\nvar paintKeywords;\r\n(function (paintKeywords) {\r\n    paintKeywords[paintKeywords[\"none\"] = 0] = \"none\";\r\n    paintKeywords[paintKeywords[\"child\"] = 1] = \"child\";\r\n    paintKeywords[paintKeywords[\"context-fill\"] = 2] = \"context-fill\";\r\n    paintKeywords[paintKeywords[\"context-stroke\"] = 3] = \"context-stroke\";\r\n})(paintKeywords = exports.paintKeywords || (exports.paintKeywords = {}));\r\nvar absoluteSize;\r\n(function (absoluteSize) {\r\n    absoluteSize[absoluteSize[\"xx-small\"] = 0] = \"xx-small\";\r\n    absoluteSize[absoluteSize[\"x-small\"] = 1] = \"x-small\";\r\n    absoluteSize[absoluteSize[\"small\"] = 2] = \"small\";\r\n    absoluteSize[absoluteSize[\"medium\"] = 3] = \"medium\";\r\n    absoluteSize[absoluteSize[\"large\"] = 4] = \"large\";\r\n    absoluteSize[absoluteSize[\"x-large\"] = 5] = \"x-large\";\r\n    absoluteSize[absoluteSize[\"xx-large\"] = 6] = \"xx-large\";\r\n})(absoluteSize = exports.absoluteSize || (exports.absoluteSize = {}));\r\nvar relativeSize;\r\n(function (relativeSize) {\r\n    relativeSize[relativeSize[\"larger\"] = 0] = \"larger\";\r\n    relativeSize[relativeSize[\"smaller\"] = 1] = \"smaller\";\r\n})(relativeSize = exports.relativeSize || (exports.relativeSize = {}));\r\nvar fontStretch;\r\n(function (fontStretch) {\r\n    fontStretch[fontStretch[\"normal\"] = 0] = \"normal\";\r\n    fontStretch[fontStretch[\"ultra-condensed\"] = 1] = \"ultra-condensed\";\r\n    fontStretch[fontStretch[\"extra-condensed\"] = 2] = \"extra-condensed\";\r\n    fontStretch[fontStretch[\"condensed\"] = 3] = \"condensed\";\r\n    fontStretch[fontStretch[\"semi-condensed\"] = 4] = \"semi-condensed\";\r\n    fontStretch[fontStretch[\"semi-expanded\"] = 5] = \"semi-expanded\";\r\n    fontStretch[fontStretch[\"expanded\"] = 6] = \"expanded\";\r\n    fontStretch[fontStretch[\"extra-expanded\"] = 7] = \"extra-expanded\";\r\n    fontStretch[fontStretch[\"ultra-expanded\"] = 8] = \"ultra-expanded\";\r\n})(fontStretch = exports.fontStretch || (exports.fontStretch = {}));\r\nvar fontStyle;\r\n(function (fontStyle) {\r\n    fontStyle[fontStyle[\"normal\"] = 0] = \"normal\";\r\n    fontStyle[fontStyle[\"italic\"] = 1] = \"italic\";\r\n    fontStyle[fontStyle[\"oblique\"] = 2] = \"oblique\";\r\n})(fontStyle = exports.fontStyle || (exports.fontStyle = {}));\r\nvar overflow;\r\n(function (overflow) {\r\n    overflow[overflow[\"visible\"] = 0] = \"visible\";\r\n    overflow[overflow[\"hidden\"] = 1] = \"hidden\";\r\n    overflow[overflow[\"scroll\"] = 2] = \"scroll\";\r\n    overflow[overflow[\"auto\"] = 3] = \"auto\";\r\n})(overflow = exports.overflow || (exports.overflow = {}));\r\nvar paintOrder;\r\n(function (paintOrder) {\r\n    paintOrder[paintOrder[\"normal\"] = 0] = \"normal\";\r\n    paintOrder[paintOrder[\"fill\"] = 1] = \"fill\";\r\n    paintOrder[paintOrder[\"stroke\"] = 2] = \"stroke\";\r\n    paintOrder[paintOrder[\"markers\"] = 3] = \"markers\";\r\n})(paintOrder = exports.paintOrder || (exports.paintOrder = {}));\r\nvar pointerEvents;\r\n(function (pointerEvents) {\r\n    pointerEvents[pointerEvents[\"bounding-box\"] = 0] = \"bounding-box\";\r\n    pointerEvents[pointerEvents[\"visiblePainted\"] = 1] = \"visiblePainted\";\r\n    pointerEvents[pointerEvents[\"visibleFill\"] = 2] = \"visibleFill\";\r\n    pointerEvents[pointerEvents[\"visibleStroke\"] = 3] = \"visibleStroke\";\r\n    pointerEvents[pointerEvents[\"visible\"] = 4] = \"visible\";\r\n    pointerEvents[pointerEvents[\"painted\"] = 5] = \"painted\";\r\n    pointerEvents[pointerEvents[\"fill\"] = 6] = \"fill\";\r\n    pointerEvents[pointerEvents[\"stroke\"] = 7] = \"stroke\";\r\n    pointerEvents[pointerEvents[\"all\"] = 8] = \"all\";\r\n    pointerEvents[pointerEvents[\"none\"] = 9] = \"none\";\r\n})(pointerEvents = exports.pointerEvents || (exports.pointerEvents = {}));\r\nvar shapeRendering;\r\n(function (shapeRendering) {\r\n    shapeRendering[shapeRendering[\"auto\"] = 0] = \"auto\";\r\n    shapeRendering[shapeRendering[\"optimizeSpeed\"] = 1] = \"optimizeSpeed\";\r\n    shapeRendering[shapeRendering[\"crispEdges\"] = 2] = \"crispEdges\";\r\n    shapeRendering[shapeRendering[\"geometricPrecision\"] = 3] = \"geometricPrecision\";\r\n})(shapeRendering = exports.shapeRendering || (exports.shapeRendering = {}));\r\nvar linecap;\r\n(function (linecap) {\r\n    linecap[linecap[\"butt\"] = 0] = \"butt\";\r\n    linecap[linecap[\"round\"] = 1] = \"round\";\r\n    linecap[linecap[\"square\"] = 2] = \"square\";\r\n})(linecap = exports.linecap || (exports.linecap = {}));\r\nvar linejoin;\r\n(function (linejoin) {\r\n    linejoin[linejoin[\"miter\"] = 0] = \"miter\";\r\n    linejoin[linejoin[\"miter-clip\"] = 1] = \"miter-clip\";\r\n    linejoin[linejoin[\"round\"] = 2] = \"round\";\r\n    linejoin[linejoin[\"bevel\"] = 3] = \"bevel\";\r\n    linejoin[linejoin[\"arcs\"] = 4] = \"arcs\";\r\n})(linejoin = exports.linejoin || (exports.linejoin = {}));\r\nvar textAnchor;\r\n(function (textAnchor) {\r\n    textAnchor[textAnchor[\"start\"] = 0] = \"start\";\r\n    textAnchor[textAnchor[\"middle\"] = 1] = \"middle\";\r\n    textAnchor[textAnchor[\"end\"] = 2] = \"end\";\r\n})(textAnchor = exports.textAnchor || (exports.textAnchor = {}));\r\nvar textDecorationStyle;\r\n(function (textDecorationStyle) {\r\n    textDecorationStyle[textDecorationStyle[\"solid\"] = 0] = \"solid\";\r\n    textDecorationStyle[textDecorationStyle[\"double\"] = 1] = \"double\";\r\n    textDecorationStyle[textDecorationStyle[\"dotted\"] = 2] = \"dotted\";\r\n    textDecorationStyle[textDecorationStyle[\"dashed\"] = 3] = \"dashed\";\r\n    textDecorationStyle[textDecorationStyle[\"wavy\"] = 4] = \"wavy\";\r\n})(textDecorationStyle = exports.textDecorationStyle || (exports.textDecorationStyle = {}));\r\nvar textOverflow;\r\n(function (textOverflow) {\r\n    textOverflow[textOverflow[\"clip\"] = 0] = \"clip\";\r\n    textOverflow[textOverflow[\"ellipsis\"] = 1] = \"ellipsis\";\r\n})(textOverflow = exports.textOverflow || (exports.textOverflow = {}));\r\nvar textOrientation;\r\n(function (textOrientation) {\r\n    textOrientation[textOrientation[\"mixed\"] = 0] = \"mixed\";\r\n    textOrientation[textOrientation[\"upright\"] = 1] = \"upright\";\r\n    textOrientation[textOrientation[\"sideways\"] = 2] = \"sideways\";\r\n})(textOrientation = exports.textOrientation || (exports.textOrientation = {}));\r\nvar unicodeBidi;\r\n(function (unicodeBidi) {\r\n    unicodeBidi[unicodeBidi[\"normal\"] = 0] = \"normal\";\r\n    unicodeBidi[unicodeBidi[\"embed\"] = 1] = \"embed\";\r\n    unicodeBidi[unicodeBidi[\"isolate\"] = 2] = \"isolate\";\r\n    unicodeBidi[unicodeBidi[\"bidi-override\"] = 3] = \"bidi-override\";\r\n    unicodeBidi[unicodeBidi[\"isolate-override\"] = 4] = \"isolate-override\";\r\n    unicodeBidi[unicodeBidi[\"plaintext\"] = 5] = \"plaintext\";\r\n})(unicodeBidi = exports.unicodeBidi || (exports.unicodeBidi = {}));\r\nvar visibility;\r\n(function (visibility) {\r\n    visibility[visibility[\"visible\"] = 0] = \"visible\";\r\n    visibility[visibility[\"hidden\"] = 1] = \"hidden\";\r\n    visibility[visibility[\"collapse\"] = 2] = \"collapse\";\r\n    visibility[visibility[\"inherit\"] = 3] = \"inherit\";\r\n})(visibility = exports.visibility || (exports.visibility = {}));\r\nvar whitespace;\r\n(function (whitespace) {\r\n    whitespace[whitespace[\"normal\"] = 0] = \"normal\";\r\n    whitespace[whitespace[\"pre\"] = 1] = \"pre\";\r\n    whitespace[whitespace[\"nowrap\"] = 2] = \"nowrap\";\r\n    whitespace[whitespace[\"pre-wrap\"] = 3] = \"pre-wrap\";\r\n    whitespace[whitespace[\"pre-line\"] = 4] = \"pre-line\";\r\n})(whitespace = exports.whitespace || (exports.whitespace = {}));\r\nvar writingMode;\r\n(function (writingMode) {\r\n    writingMode[writingMode[\"horizontal-tb\"] = 0] = \"horizontal-tb\";\r\n    writingMode[writingMode[\"vertical-rl\"] = 1] = \"vertical-rl\";\r\n    writingMode[writingMode[\"vertical-lr\"] = 2] = \"vertical-lr\";\r\n    writingMode[writingMode[\"lr\"] = 3] = \"lr\";\r\n    writingMode[writingMode[\"lr-tb\"] = 4] = \"lr-tb\";\r\n    writingMode[writingMode[\"rl\"] = 5] = \"rl\";\r\n    writingMode[writingMode[\"rl-tb\"] = 6] = \"rl-tb\";\r\n    writingMode[writingMode[\"tb\"] = 7] = \"tb\";\r\n    writingMode[writingMode[\"tb-rl\"] = 8] = \"tb-rl\";\r\n})(writingMode = exports.writingMode || (exports.writingMode = {}));\r\nvar isolationMode;\r\n(function (isolationMode) {\r\n    isolationMode[isolationMode[\"auto\"] = 0] = \"auto\";\r\n    isolationMode[isolationMode[\"isolate\"] = 1] = \"isolate\";\r\n})(isolationMode = exports.isolationMode || (exports.isolationMode = {}));\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/const/enum.ts?");

/***/ }),

/***/ "./src/slimming/const/index.ts":
/*!*************************************!*\
  !*** ./src/slimming/const/index.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FF = 255;\r\nexports.Hundred = 100;\r\nexports.Hex = 16;\r\nexports.CIRC = 360;\r\nexports.HALF_CIRC = 180;\r\nexports.GRAD = 400;\r\nexports.RAD = Math.PI * 2;\r\nexports.matrixEPos = 4;\r\nexports.HALF = 0.5;\r\nexports.APOS_RX = 0;\r\nexports.APOS_RY = 1;\r\nexports.APOS_ROTATION = 2;\r\nexports.APOS_LARGE = 3;\r\nexports.APOS_SWEEP = 4;\r\nexports.APOS_X = 5;\r\nexports.APOS_Y = 6;\r\nexports.APOS_LEN = 7;\r\nexports.OPACITY_DIGIT = 3; // 浏览器对于颜色的 alpha 值只处理到小数点后第 3 位\r\nexports.DEFAULT_SIZE_DIGIT = 2;\r\nexports.DEFAULT_ACCURATE_DIGIT = 2;\r\nexports.DEFAULT_MATRIX_DIGIT = 3;\r\n// path 直线指令\r\nexports.LineTypes = 'LlHhVv';\r\nexports.CurveTypes = 'AaCcSsQqTt';\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/const/index.ts?");

/***/ }),

/***/ "./src/slimming/const/regs.ts":
/*!************************************!*\
  !*** ./src/slimming/const/regs.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n// 用于验证的正则表达式\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// css 选择器相关字符\r\nexports.idChar = '#[^#\\\\.\\\\[\\\\*:\\\\s]+';\r\nexports.classChar = '\\\\.[^#\\\\.\\\\[\\\\*:\\\\s]+';\r\n// tslint:disable-next-line\r\nexports.attrChar = `\\\\[[a-zA-Z][a-zA-Z0-9\\\\-]*(?:[\\\\|\\\\^\\\\$\\\\*~]?=(?:'[^']*'|\"[^\"]*\"|[^'\"\\\\]]+))?\\\\]`;\r\nexports.pseudoChar = '\\\\:{1,2}[a-zA-Z-]+(?:\\\\((?:[^\\\\)]+|[^\\\\(]+\\\\([^\\\\)]+\\\\))\\\\))?';\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/const/regs.ts?");

/***/ }),

/***/ "./src/slimming/const/regular-attr.ts":
/*!********************************************!*\
  !*** ./src/slimming/const/regular-attr.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst definitions_1 = __webpack_require__(/*! ./definitions */ \"./src/slimming/const/definitions.ts\");\r\nconst enum_1 = __webpack_require__(/*! ./enum */ \"./src/slimming/const/enum.ts\");\r\nconst syntax_1 = __webpack_require__(/*! ./syntax */ \"./src/slimming/const/syntax.ts\");\r\nconst shapeAndText = definitions_1.shapeElements.concat(definitions_1.textContentElements);\r\nconst viewport = ['pattern', 'marker'].concat(definitions_1.newViewportsElements);\r\nconst useContainerGraphics = ['use'].concat(definitions_1.containerElements, definitions_1.graphicsElements);\r\nconst colorApply = ['animate'].concat(useContainerGraphics, definitions_1.gradientElements);\r\n// tslint:disable:max-file-line-count\r\nconst _regularAttr = {\r\n    'accumulate': {\r\n        name: 'accumulate',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.accumulateVal,\r\n            }],\r\n        initValue: 'none',\r\n        applyTo: [],\r\n    },\r\n    'additive': {\r\n        name: 'additive',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.additiveVal,\r\n            }],\r\n        initValue: 'replace',\r\n        applyTo: [],\r\n    },\r\n    'amplitude': {\r\n        name: 'amplitude',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '1',\r\n        applyTo: [],\r\n    },\r\n    'attributeName': {\r\n        name: 'attributeName',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'attr',\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'azimuth': {\r\n        name: 'azimuth',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '0',\r\n        applyTo: [],\r\n    },\r\n    'baseFrequency': {\r\n        name: 'baseFrequency',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberOptionalFullMatch,\r\n            }],\r\n        initValue: '0',\r\n        applyTo: [],\r\n    },\r\n    'begin': {\r\n        name: 'begin',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.timeListFullMatch,\r\n            }],\r\n        initValue: '0s',\r\n        applyTo: [],\r\n    },\r\n    'bias': {\r\n        name: 'bias',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '0',\r\n        applyTo: [],\r\n    },\r\n    'by': {\r\n        name: 'by',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'calcMode': {\r\n        name: 'calcMode',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.calcModelVal,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'class': {\r\n        name: 'class',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.cssNameSpaceSeparatedFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'clipPathUnits': {\r\n        name: 'clipPathUnits',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.unitVal,\r\n            }],\r\n        initValue: 'userSpaceOnUse',\r\n        applyTo: [],\r\n    },\r\n    'crossorigin': {\r\n        name: 'crossorigin',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.crossoriginVal,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'cx': {\r\n        name: 'cx',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }],\r\n        initValue: [{\r\n                val: '50%',\r\n                tag: ['radialGradient'],\r\n            }, {\r\n                val: '0',\r\n                tag: ['circle', 'ellipse'],\r\n            }],\r\n        applyTo: ['radialGradient', 'circle', 'ellipse'],\r\n    },\r\n    'cy': {\r\n        name: 'cy',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }],\r\n        initValue: [{\r\n                val: '50%',\r\n                tag: ['radialGradient'],\r\n            }, {\r\n                val: '0',\r\n                tag: ['circle', 'ellipse'],\r\n            }],\r\n        applyTo: ['radialGradient', 'circle', 'ellipse'],\r\n    },\r\n    'd': {\r\n        name: 'd',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.pathFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'diffuseConstant': {\r\n        name: 'diffuseConstant',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '1',\r\n        applyTo: [],\r\n    },\r\n    'divisor': {\r\n        name: 'divisor',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'download': {\r\n        name: 'download',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'dur': {\r\n        name: 'dur',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.clockFullMatch,\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.durVal,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'dx': {\r\n        name: 'dx',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n                tag: ['feOffset', 'filter'],\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n                tag: ['tspan', 'text'],\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n                tag: ['tspan', 'text'],\r\n            }],\r\n        initValue: [{\r\n                val: '2',\r\n                tag: ['feOffset'],\r\n            }, {\r\n                val: '0',\r\n                tag: ['filter'],\r\n            }, {\r\n                val: '',\r\n                tag: ['tspan', 'text'],\r\n            }],\r\n        applyTo: [],\r\n    },\r\n    'dy': {\r\n        name: 'dy',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n                tag: ['feOffset', 'filter'],\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n                tag: ['tspan', 'text'],\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n                tag: ['tspan', 'text'],\r\n            }],\r\n        initValue: [{\r\n                val: '2',\r\n                tag: ['feOffset'],\r\n            }, {\r\n                val: '0',\r\n                tag: ['filter'],\r\n            }, {\r\n                val: '',\r\n                tag: ['tspan', 'text'],\r\n            }],\r\n        applyTo: [],\r\n    },\r\n    'edgeMode': {\r\n        name: 'edgeMode',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.edgeModeVal,\r\n            }],\r\n        initValue: [{\r\n                val: 'duplicate',\r\n                tag: ['feConvolveMatrix'],\r\n            }, {\r\n                val: 'none',\r\n                tag: ['feGaussianBlur'],\r\n            }],\r\n        applyTo: [],\r\n    },\r\n    'elevation': {\r\n        name: 'elevation',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '0',\r\n        applyTo: [],\r\n    },\r\n    'end': {\r\n        name: 'end',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.timeListFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'exponent': {\r\n        name: 'exponent',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '1',\r\n        applyTo: [],\r\n    },\r\n    'filterUnits': {\r\n        name: 'filterUnits',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.unitVal,\r\n            }],\r\n        initValue: 'objectBoundingBox',\r\n        applyTo: [],\r\n    },\r\n    'fr': {\r\n        name: 'fr',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }],\r\n        initValue: '0%',\r\n        applyTo: [],\r\n    },\r\n    'from': {\r\n        name: 'from',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'fx': {\r\n        name: 'fx',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'fy': {\r\n        name: 'fy',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'gradientTransform': {\r\n        name: 'gradientTransform',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.transformListFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'gradientUnits': {\r\n        name: 'gradientUnits',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.unitVal,\r\n            }],\r\n        initValue: 'objectBoundingBox',\r\n        applyTo: [],\r\n    },\r\n    'height': {\r\n        name: 'height',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }, {\r\n                type: 'string',\r\n                string: 'auto',\r\n            }],\r\n        initValue: [{\r\n                val: '100%',\r\n                tag: definitions_1.filterPrimitiveElements,\r\n            }, {\r\n                val: '120%',\r\n                tag: ['filter', 'mask'],\r\n            }, {\r\n                val: '0',\r\n                tag: ['pattern'],\r\n            }, {\r\n                val: 'auto',\r\n                tag: ['svg', 'image', 'rect', 'foreignObject'],\r\n            }],\r\n        applyTo: definitions_1.filterPrimitiveElements.concat(['filter', 'mask', 'pattern', 'svg', 'image', 'rect', 'foreignObject']),\r\n    },\r\n    'href': {\r\n        name: 'href',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: true,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.URIFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'hreflang': {\r\n        name: 'hreflang',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.langFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'id': {\r\n        name: 'id',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.nameFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'in': {\r\n        name: 'in',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.inVal,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.indentFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'in2': {\r\n        name: 'in2',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.inVal,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.indentFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'intercept': {\r\n        name: 'intercept',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '0',\r\n        applyTo: [],\r\n    },\r\n    'isolation': {\r\n        name: 'isolation',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.isolationMode,\r\n            }],\r\n        initValue: 'auto',\r\n        applyTo: [],\r\n    },\r\n    'k1': {\r\n        name: 'k1',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '0',\r\n        applyTo: [],\r\n    },\r\n    'k2': {\r\n        name: 'k2',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '0',\r\n        applyTo: [],\r\n    },\r\n    'k3': {\r\n        name: 'k3',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '0',\r\n        applyTo: [],\r\n    },\r\n    'k4': {\r\n        name: 'k4',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '0',\r\n        applyTo: [],\r\n    },\r\n    'kernelMatrix': {\r\n        name: 'kernelMatrix',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberListFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'kernelUnitLength': {\r\n        name: 'kernelUnitLength',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberOptionalFullMatch,\r\n            }],\r\n        initValue: '2 2',\r\n        applyTo: [],\r\n    },\r\n    'keyPoints': {\r\n        name: 'keyPoints',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberSemiSepatatedFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'keySplines': {\r\n        name: 'keySplines',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.controlPointsFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'keyTimes': {\r\n        name: 'keyTimes',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberSemiSepatatedFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'lang': {\r\n        name: 'lang',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.langFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'lengthAdjust': {\r\n        name: 'lengthAdjust',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.lengthAdjustVal,\r\n            }],\r\n        initValue: 'spacing',\r\n        applyTo: [],\r\n    },\r\n    'limitingConeAngle': {\r\n        name: 'limitingConeAngle',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'markerHeight': {\r\n        name: 'markerHeight',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }],\r\n        initValue: '3',\r\n        applyTo: [],\r\n    },\r\n    'markerUnits': {\r\n        name: 'markerUnits',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.markerUnitVal,\r\n            }],\r\n        initValue: 'strokeWidth',\r\n        applyTo: [],\r\n    },\r\n    'markerWidth': {\r\n        name: 'markerWidth',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }],\r\n        initValue: '3',\r\n        applyTo: [],\r\n    },\r\n    'maskContentUnits': {\r\n        name: 'maskContentUnits',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.unitVal,\r\n            }],\r\n        initValue: 'userSpaceOnUse',\r\n        applyTo: [],\r\n    },\r\n    'maskUnits': {\r\n        name: 'maskUnits',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.unitVal,\r\n            }],\r\n        initValue: 'objectBoundingBox',\r\n        applyTo: [],\r\n    },\r\n    'max': {\r\n        name: 'max',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.clockFullMatch,\r\n            }, {\r\n                type: 'string',\r\n                string: 'media',\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'media': {\r\n        name: 'media',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'method': {\r\n        name: 'method',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.methodVal,\r\n            }],\r\n        initValue: 'align',\r\n        applyTo: [],\r\n    },\r\n    'min': {\r\n        name: 'min',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.clockFullMatch,\r\n            }, {\r\n                type: 'string',\r\n                string: 'media',\r\n            }],\r\n        initValue: '0',\r\n        applyTo: [],\r\n    },\r\n    'mode': {\r\n        name: 'mode',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.blendModeVal,\r\n            }],\r\n        initValue: 'normal',\r\n        applyTo: [],\r\n    },\r\n    'numOctaves': {\r\n        name: 'numOctaves',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.integerFullMatch,\r\n            }],\r\n        initValue: '1',\r\n        applyTo: [],\r\n    },\r\n    'offset': {\r\n        name: 'offset',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n                tag: ['stop'],\r\n            }],\r\n        initValue: '0',\r\n        applyTo: [],\r\n    },\r\n    'operator': {\r\n        name: 'operator',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.operaterVal,\r\n                tag: ['feComposite'],\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.operaterVal1,\r\n                tag: ['feMorphology'],\r\n            }],\r\n        initValue: [{\r\n                val: 'over',\r\n                tag: ['feComposite'],\r\n            }, {\r\n                val: 'erode',\r\n                tag: ['feMorphology'],\r\n            }],\r\n        applyTo: [],\r\n    },\r\n    'order': {\r\n        name: 'order',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberOptionalFullMatch,\r\n            }],\r\n        initValue: '3',\r\n        applyTo: [],\r\n    },\r\n    'orient': {\r\n        name: 'orient',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.angelFullMatch,\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.orientVal,\r\n            }],\r\n        initValue: '0',\r\n        applyTo: [],\r\n    },\r\n    'origin': {\r\n        name: 'origin',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'string',\r\n                string: 'default',\r\n            }],\r\n        initValue: 'default',\r\n        applyTo: [],\r\n    },\r\n    'path': {\r\n        name: 'path',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.pathFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'pathLength': {\r\n        name: 'pathLength',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'patternContentUnits': {\r\n        name: 'patternContentUnits',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.unitVal,\r\n            }],\r\n        initValue: 'userSpaceOnUse',\r\n        applyTo: [],\r\n    },\r\n    'patternTransform': {\r\n        name: 'patternTransform',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.transformListFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'patternUnits': {\r\n        name: 'patternUnits',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.unitVal,\r\n            }],\r\n        initValue: 'objectBoundingBox',\r\n        applyTo: [],\r\n    },\r\n    'playbackorder': {\r\n        name: 'playbackorder',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.playbackorderVal,\r\n            }],\r\n        initValue: 'all',\r\n        applyTo: [],\r\n    },\r\n    'points': {\r\n        name: 'points',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberListFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'pointsAtX': {\r\n        name: 'pointsAtX',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '0',\r\n        applyTo: [],\r\n    },\r\n    'pointsAtY': {\r\n        name: 'pointsAtY',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '0',\r\n        applyTo: [],\r\n    },\r\n    'pointsAtZ': {\r\n        name: 'pointsAtZ',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '0',\r\n        applyTo: [],\r\n    },\r\n    'preserveAlpha': {\r\n        name: 'preserveAlpha',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.booleanVal,\r\n            }],\r\n        initValue: 'false',\r\n        applyTo: [],\r\n    },\r\n    'preserveAspectRatio': {\r\n        name: 'preserveAspectRatio',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.preservAspectRatioFullMatch,\r\n            }],\r\n        initValue: 'xMidYMid meet',\r\n        applyTo: [],\r\n    },\r\n    'primitiveUnits': {\r\n        name: 'primitiveUnits',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.unitVal,\r\n            }],\r\n        initValue: 'userSpaceOnUse.',\r\n        applyTo: [],\r\n    },\r\n    'r': {\r\n        name: 'r',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }],\r\n        initValue: [{\r\n                val: '50%',\r\n                tag: ['radialGradient'],\r\n            }, {\r\n                val: '0',\r\n                tag: ['circle'],\r\n            }],\r\n        applyTo: ['radialGradient', 'circle'],\r\n    },\r\n    'radius': {\r\n        name: 'radius',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberOptionalFullMatch,\r\n            }],\r\n        initValue: '0',\r\n        applyTo: [],\r\n    },\r\n    'refX': {\r\n        name: 'refX',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.alignXVal,\r\n            }],\r\n        initValue: [{\r\n                val: '0',\r\n                tag: ['marker'],\r\n            }],\r\n        applyTo: [],\r\n    },\r\n    'refY': {\r\n        name: 'refY',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.alignYVal,\r\n            }],\r\n        initValue: [{\r\n                val: '0',\r\n                tag: ['marker'],\r\n            }],\r\n        applyTo: [],\r\n    },\r\n    'rel': {\r\n        name: 'rel',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'repeatCount': {\r\n        name: 'repeatCount',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }, {\r\n                type: 'string',\r\n                string: 'indefinite',\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'repeatDur': {\r\n        name: 'repeatDur',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.clockFullMatch,\r\n            }, {\r\n                type: 'string',\r\n                string: 'indefinite',\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'requiredExtensions': {\r\n        name: 'requiredExtensions',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'restart': {\r\n        name: 'restart',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.restartVal,\r\n            }],\r\n        initValue: 'always',\r\n        applyTo: [],\r\n    },\r\n    'result': {\r\n        name: 'result',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.cssNameFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'rotate': {\r\n        name: 'rotate',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.rotateVal,\r\n                tag: ['animateMotion'],\r\n            }],\r\n        initValue: '0',\r\n        applyTo: [],\r\n    },\r\n    'rx': {\r\n        name: 'rx',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }, {\r\n                type: 'string',\r\n                string: 'auto',\r\n            }],\r\n        initValue: 'auto',\r\n        applyTo: ['ellipse', 'rect'],\r\n    },\r\n    'ry': {\r\n        name: 'ry',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }, {\r\n                type: 'string',\r\n                string: 'auto',\r\n            }],\r\n        initValue: 'auto',\r\n        applyTo: ['ellipse', 'rect'],\r\n    },\r\n    'scale': {\r\n        name: 'scale',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '0',\r\n        applyTo: [],\r\n    },\r\n    'seed': {\r\n        name: 'seed',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '0',\r\n        applyTo: [],\r\n    },\r\n    'side': {\r\n        name: 'side',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.sideVal,\r\n            }],\r\n        initValue: 'left',\r\n        applyTo: [],\r\n    },\r\n    'slope': {\r\n        name: 'slope',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '1',\r\n        applyTo: [],\r\n    },\r\n    'spacing': {\r\n        name: 'spacing',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.spacingVal,\r\n            }],\r\n        initValue: 'exact',\r\n        applyTo: [],\r\n    },\r\n    'specularConstant': {\r\n        name: 'specularConstant',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '1',\r\n        applyTo: [],\r\n    },\r\n    'specularExponent': {\r\n        name: 'specularExponent',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '1',\r\n        applyTo: [],\r\n    },\r\n    'spreadMethod': {\r\n        name: 'spreadMethod',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.spreadMethodVal,\r\n            }],\r\n        initValue: 'pad',\r\n        applyTo: [],\r\n    },\r\n    'startOffset': {\r\n        name: 'startOffset',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }],\r\n        initValue: '0',\r\n        applyTo: [],\r\n    },\r\n    'stdDeviation': {\r\n        name: 'stdDeviation',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberOptionalFullMatch,\r\n            }],\r\n        initValue: [{\r\n                val: '2',\r\n                tag: ['feDropShadow'],\r\n            }, {\r\n                val: '0',\r\n                tag: ['feGaussianBlur'],\r\n            }],\r\n        applyTo: [],\r\n    },\r\n    'stitchTiles': {\r\n        name: 'stitchTiles',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.stitchVal,\r\n            }],\r\n        initValue: 'noStitch',\r\n        applyTo: [],\r\n    },\r\n    'style': {\r\n        name: 'style',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'surfaceScale': {\r\n        name: 'surfaceScale',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '1',\r\n        applyTo: [],\r\n    },\r\n    'systemLanguage': {\r\n        name: 'systemLanguage',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'tabindex': {\r\n        name: 'tabindex',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.integerFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'tableValues': {\r\n        name: 'tableValues',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberListFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'target': {\r\n        name: 'target',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.nameFullMatch,\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.targetVal,\r\n            }],\r\n        initValue: '_self',\r\n        applyTo: [],\r\n    },\r\n    'targetX': {\r\n        name: 'targetX',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.integerFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'targetY': {\r\n        name: 'targetY',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.integerFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'textLength': {\r\n        name: 'textLength',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'timelinebegin': {\r\n        name: 'timelinebegin',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.timelinebeginVal,\r\n            }],\r\n        initValue: 'loadend',\r\n        applyTo: [],\r\n    },\r\n    'title': {\r\n        name: 'title',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'to': {\r\n        name: 'to',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'transform': {\r\n        name: 'transform',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.transformListFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: definitions_1.allElements,\r\n    },\r\n    'transform-origin': {\r\n        name: 'transform-origin',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.transformOriginFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: definitions_1.allElements,\r\n    },\r\n    'type': {\r\n        name: 'type',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.animateTransformType,\r\n                tag: ['animateTransform'],\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.feColorMatrixType,\r\n                tag: ['feColorMatrix'],\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.feFuncType,\r\n                tag: ['feFuncA', 'feFuncB', 'feFuncG', 'feFuncR'],\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.feTurbulenceType,\r\n                tag: ['feTurbulence'],\r\n            }],\r\n        initValue: [{\r\n                val: 'translate',\r\n                tag: ['animateTransform'],\r\n            }, {\r\n                val: 'matrix',\r\n                tag: ['feColorMatrix'],\r\n            }, {\r\n                val: 'identity',\r\n                tag: ['feFuncA', 'feFuncB', 'feFuncG', 'feFuncR'],\r\n            }, {\r\n                val: 'turbulence',\r\n                tag: ['feTurbulence'],\r\n            }],\r\n        applyTo: [],\r\n    },\r\n    'values': {\r\n        name: 'values',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberListFullMatch,\r\n                tag: ['feColorMatrix'],\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'viewBox': {\r\n        name: 'viewBox',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.viewBoxFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'width': {\r\n        name: 'width',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }, {\r\n                type: 'string',\r\n                string: 'auto',\r\n            }],\r\n        initValue: [{\r\n                val: '100%',\r\n                tag: definitions_1.filterPrimitiveElements,\r\n            }, {\r\n                val: '120%',\r\n                tag: ['filter', 'mask'],\r\n            }, {\r\n                val: '0',\r\n                tag: ['pattern'],\r\n            }, {\r\n                val: 'auto',\r\n                tag: ['svg', 'image', 'rect', 'foreignObject'],\r\n            }],\r\n        applyTo: definitions_1.filterPrimitiveElements.concat(['filter', 'mask', 'pattern', 'svg', 'image', 'rect', 'foreignObject']),\r\n    },\r\n    'x': {\r\n        name: 'x',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n                tag: definitions_1.filterPrimitiveElements.concat(['filter', 'mask', 'pattern', 'svg', 'rect', 'image', 'foreignObject', 'text', 'tspan']),\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n                tag: definitions_1.filterPrimitiveElements.concat(['filter', 'mask', 'pattern', 'svg', 'rect', 'image', 'foreignObject', 'text', 'tspan']),\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n                tag: ['fePointLight', 'feSpotLight'],\r\n            }, {\r\n                type: 'string',\r\n                string: 'auto',\r\n            }],\r\n        initValue: [{\r\n                val: '0%',\r\n                tag: definitions_1.filterPrimitiveElements,\r\n            }, {\r\n                val: '0',\r\n                tag: ['fePointLight', 'feSpotLight', 'pattern', 'svg', 'rect', 'image', 'foreignObject', 'text'],\r\n            }, {\r\n                val: '-10%',\r\n                tag: ['filter', 'mask'],\r\n            }, {\r\n                val: '',\r\n                tag: ['tspan'],\r\n            }],\r\n        applyTo: definitions_1.filterPrimitiveElements.concat(['fePointLight', 'feSpotLight', 'filter', 'mask', 'pattern', 'svg', 'rect', 'image', 'foreignObject', 'text', 'tspan']),\r\n    },\r\n    'x1': {\r\n        name: 'x1',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }, {\r\n                type: 'string',\r\n                string: 'auto',\r\n            }],\r\n        initValue: [{\r\n                val: '0',\r\n                tag: ['line'],\r\n            }, {\r\n                val: '0%',\r\n                tag: ['linearGradient'],\r\n            }],\r\n        applyTo: [],\r\n    },\r\n    'x2': {\r\n        name: 'x2',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }, {\r\n                type: 'string',\r\n                string: 'auto',\r\n            }],\r\n        initValue: [{\r\n                val: '0',\r\n                tag: ['line'],\r\n            }, {\r\n                val: '100%',\r\n                tag: ['linearGradient'],\r\n            }],\r\n        applyTo: [],\r\n    },\r\n    'xChannelSelector': {\r\n        name: 'xChannelSelector',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.channelVal,\r\n            }],\r\n        initValue: 'A',\r\n        applyTo: [],\r\n    },\r\n    'xlink:href': {\r\n        name: 'xlink:href',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: true,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.URIFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'xlink:title': {\r\n        name: 'xlink:title',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'xml:space': {\r\n        name: 'xml:space',\r\n        isUndef: true,\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.xmlSpaceVal,\r\n            }],\r\n        initValue: 'default',\r\n        applyTo: [],\r\n    },\r\n    'xmlns': {\r\n        name: 'xmlns',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.URIFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'xmlns:xml': {\r\n        name: 'xmlns:xml',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.URIFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'xmlns:xlink': {\r\n        name: 'xmlns:xlink',\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.URIFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'y': {\r\n        name: 'y',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n                tag: definitions_1.filterPrimitiveElements.concat(['filter', 'mask', 'pattern', 'svg', 'rect', 'image', 'foreignObject', 'text', 'tspan']),\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n                tag: definitions_1.filterPrimitiveElements.concat(['filter', 'mask', 'pattern', 'svg', 'rect', 'image', 'foreignObject', 'text', 'tspan']),\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n                tag: ['fePointLight', 'feSpotLight'],\r\n            }, {\r\n                type: 'string',\r\n                string: 'auto',\r\n            }],\r\n        initValue: [{\r\n                val: '0%',\r\n                tag: definitions_1.filterPrimitiveElements,\r\n            }, {\r\n                val: '0',\r\n                tag: ['fePointLight', 'feSpotLight', 'pattern', 'svg', 'rect', 'image', 'foreignObject', 'text'],\r\n            }, {\r\n                val: '-10%',\r\n                tag: ['filter', 'mask'],\r\n            }, {\r\n                val: '',\r\n                tag: ['tspan'],\r\n            }],\r\n        applyTo: definitions_1.filterPrimitiveElements.concat(['fePointLight', 'feSpotLight', 'filter', 'mask', 'pattern', 'svg', 'rect', 'image', 'foreignObject', 'text', 'tspan']),\r\n    },\r\n    'y1': {\r\n        name: 'y1',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }, {\r\n                type: 'string',\r\n                string: 'auto',\r\n            }],\r\n        initValue: [{\r\n                val: '0',\r\n                tag: ['line'],\r\n            }, {\r\n                val: '0%',\r\n                tag: ['linearGradient'],\r\n            }],\r\n        applyTo: [],\r\n    },\r\n    'y2': {\r\n        name: 'y2',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }, {\r\n                type: 'string',\r\n                string: 'auto',\r\n            }],\r\n        initValue: [{\r\n                val: '0',\r\n                tag: ['line'],\r\n            }, {\r\n                val: '0%',\r\n                tag: ['linearGradient'],\r\n            }],\r\n        applyTo: [],\r\n    },\r\n    'yChannelSelector': {\r\n        name: 'yChannelSelector',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.channelVal,\r\n            }],\r\n        initValue: 'A',\r\n        applyTo: [],\r\n    },\r\n    'z': {\r\n        name: 'z',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '0',\r\n        applyTo: [],\r\n    },\r\n    'zoomAndPan': {\r\n        name: 'zoomAndPan',\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.zoomAndPanVal,\r\n            }],\r\n        initValue: 'disable',\r\n        applyTo: [],\r\n    },\r\n    // 下面是 property\r\n    'alignment-baseline': {\r\n        name: 'alignment-baseline',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.alignmentBaseline,\r\n            }],\r\n        initValue: 'baseline',\r\n        applyTo: ['tspan', 'textPath'],\r\n    },\r\n    'baseline-shift': {\r\n        name: 'baseline-shift',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.baselineShift,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }],\r\n        initValue: '0',\r\n        applyTo: ['tspan', 'textPath'],\r\n    },\r\n    'clip': {\r\n        name: 'clip',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'string',\r\n                string: 'auto',\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.rectFullMatch,\r\n            }],\r\n        initValue: 'auto',\r\n        applyTo: viewport,\r\n    },\r\n    'clip-path': {\r\n        name: 'clip-path',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: true,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [\r\n            {\r\n                type: 'string',\r\n                string: 'none',\r\n            },\r\n            {\r\n                type: 'enum',\r\n                enum: enum_1.clipBox,\r\n            },\r\n            {\r\n                type: 'reg',\r\n                reg: syntax_1.funcIRIFullMatch,\r\n            },\r\n            {\r\n                type: 'reg',\r\n                reg: syntax_1.basicShapeFullMatch,\r\n            },\r\n        ],\r\n        initValue: 'none',\r\n        applyTo: useContainerGraphics,\r\n    },\r\n    'clip-rule': {\r\n        name: 'clip-rule',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.nonzeroEvenodd,\r\n            }],\r\n        initValue: 'nonzero',\r\n        applyTo: ['use'].concat(definitions_1.graphicsElements),\r\n    },\r\n    'color': {\r\n        name: 'color',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: true,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.colorKeywords,\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.systemColor,\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.x11Colors,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.colorFullMatch,\r\n            }],\r\n        initValue: '',\r\n        applyTo: ['feFlood', 'feDiffuseLighting', 'feSpecularLighting', 'stop'].concat(shapeAndText),\r\n    },\r\n    'color-interpolation': {\r\n        name: 'color-interpolation',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.colorInterpolation,\r\n            }],\r\n        initValue: 'sRGB',\r\n        applyTo: colorApply,\r\n    },\r\n    'color-interpolation-filters': {\r\n        name: 'color-interpolation-filters',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.colorInterpolation,\r\n            }],\r\n        initValue: 'auto',\r\n        applyTo: colorApply,\r\n    },\r\n    'color-rendering': {\r\n        name: 'color-rendering',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.colorRendering,\r\n            }],\r\n        initValue: 'auto',\r\n        applyTo: colorApply,\r\n    },\r\n    'cursor': {\r\n        name: 'cursor',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: true,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.cursorFullMatch,\r\n            }],\r\n        initValue: 'auto',\r\n        applyTo: useContainerGraphics,\r\n    },\r\n    'direction': {\r\n        name: 'direction',\r\n        couldBeStyle: true,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.direction,\r\n            }],\r\n        initValue: 'ltr',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'display': {\r\n        name: 'display',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.display,\r\n            }],\r\n        initValue: 'inline',\r\n        applyTo: ['svg', 'g', 'switch', 'a', 'foreignObject', 'use'].concat(definitions_1.graphicsElements),\r\n    },\r\n    'dominant-baseline': {\r\n        name: 'dominant-baseline',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.dominantBaseline,\r\n            }],\r\n        initValue: 'auto',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'fill': {\r\n        name: 'fill',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: true,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: true,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.colorKeywords,\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.systemColor,\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.x11Colors,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.colorFullMatch,\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.paintKeywords,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.funcIRIFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.childFuncFullMatch,\r\n            }],\r\n        initValue: 'black',\r\n        applyTo: shapeAndText,\r\n    },\r\n    'fill-opacity': {\r\n        name: 'fill-opacity',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '1',\r\n        applyTo: shapeAndText,\r\n    },\r\n    'fill-rule': {\r\n        name: 'fill-rule',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.nonzeroEvenodd,\r\n            }],\r\n        initValue: 'nonzero',\r\n        applyTo: shapeAndText,\r\n    },\r\n    'filter': {\r\n        name: 'filter',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: true,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'string',\r\n                string: 'none',\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.filterListFullMatch,\r\n            }],\r\n        initValue: 'none',\r\n        applyTo: useContainerGraphics,\r\n    },\r\n    'flood-color': {\r\n        name: 'flood-color',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: true,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.colorKeywords,\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.systemColor,\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.x11Colors,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.colorFullMatch,\r\n            }],\r\n        initValue: 'black',\r\n        applyTo: ['feFlood'],\r\n    },\r\n    'flood-opacity': {\r\n        name: 'flood-opacity',\r\n        couldBeStyle: true,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }],\r\n        initValue: '1',\r\n        applyTo: ['feFlood'],\r\n    },\r\n    'font': {\r\n        name: 'font',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'font-family': {\r\n        name: 'font-family',\r\n        couldBeStyle: true,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'font-size': {\r\n        name: 'font-size',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.absoluteSize,\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.relativeSize,\r\n            }],\r\n        initValue: 'medium',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'font-size-adjust': {\r\n        name: 'font-size-adjust',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'string',\r\n                string: 'none',\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: 'none',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'font-stretch': {\r\n        name: 'font-stretch',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.fontStretch,\r\n            }],\r\n        initValue: 'normal',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'font-style': {\r\n        name: 'font-style',\r\n        couldBeStyle: true,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.fontStyle,\r\n            }],\r\n        initValue: 'normal',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'font-variant': {\r\n        name: 'font-variant',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'normal',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'font-weight': {\r\n        name: 'font-weight',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.fontWeightFullMatch,\r\n            }],\r\n        initValue: 'normal',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'glyph-orientation-vertical': {\r\n        name: 'glyph-orientation-vertical',\r\n        couldBeStyle: true,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.textOrientationFullMatch,\r\n            }],\r\n        initValue: 'auto',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'image-rendering': {\r\n        name: 'image-rendering',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.colorRendering,\r\n            }],\r\n        initValue: 'auto',\r\n        applyTo: ['image'],\r\n    },\r\n    'letter-spacing': {\r\n        name: 'letter-spacing',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'string',\r\n                string: 'normal',\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }],\r\n        initValue: 'normal',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'lighting-color': {\r\n        name: 'lighting-color',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: true,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.colorKeywords,\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.systemColor,\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.x11Colors,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.colorFullMatch,\r\n            }],\r\n        initValue: 'white',\r\n        applyTo: ['feDiffuseLighting', 'feSpecularLighting'],\r\n    },\r\n    'line-height': {\r\n        name: 'line-height',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: true,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'string',\r\n                string: 'normal',\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }],\r\n        initValue: 'normal',\r\n        applyTo: ['text'],\r\n    },\r\n    'marker': {\r\n        name: 'marker',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: true,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: definitions_1.shapeElements,\r\n    },\r\n    'marker-end': {\r\n        name: 'marker-end',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: true,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'string',\r\n                string: 'none',\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.funcIRIFullMatch,\r\n            }],\r\n        initValue: 'none',\r\n        applyTo: definitions_1.shapeElements,\r\n    },\r\n    'marker-mid': {\r\n        name: 'marker-mid',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: true,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'string',\r\n                string: 'none',\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.funcIRIFullMatch,\r\n            }],\r\n        initValue: 'none',\r\n        applyTo: definitions_1.shapeElements,\r\n    },\r\n    'marker-start': {\r\n        name: 'marker-start',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: true,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'string',\r\n                string: 'none',\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.funcIRIFullMatch,\r\n            }],\r\n        initValue: 'none',\r\n        applyTo: definitions_1.shapeElements,\r\n    },\r\n    'mask': {\r\n        name: 'mask',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: true,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'none',\r\n        applyTo: useContainerGraphics,\r\n    },\r\n    'opacity': {\r\n        name: 'opacity',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }],\r\n        initValue: '1',\r\n        applyTo: ['svg', 'g', 'symbol', 'marker', 'a', 'switch', 'use', 'unknown'].concat(definitions_1.graphicsElements),\r\n    },\r\n    'overflow': {\r\n        name: 'overflow',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.overflow,\r\n            }],\r\n        initValue: 'visible',\r\n        applyTo: viewport,\r\n    },\r\n    'paint-order': {\r\n        name: 'paint-order',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.paintOrder,\r\n            }],\r\n        initValue: 'normal',\r\n        applyTo: shapeAndText,\r\n    },\r\n    'pointer-events': {\r\n        name: 'pointer-events',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.pointerEvents,\r\n            }],\r\n        initValue: 'visiblePainted',\r\n        applyTo: useContainerGraphics,\r\n    },\r\n    'shape-rendering': {\r\n        name: 'shape-rendering',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.shapeRendering,\r\n            }],\r\n        initValue: 'auto',\r\n        applyTo: definitions_1.shapeElements,\r\n    },\r\n    'stop-color': {\r\n        name: 'stop-color',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: true,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.colorKeywords,\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.systemColor,\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.x11Colors,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.colorFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.iccColorFullMatch,\r\n            }],\r\n        initValue: 'black',\r\n        applyTo: ['stop'],\r\n    },\r\n    'stop-opacity': {\r\n        name: 'stop-opacity',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }],\r\n        initValue: '1',\r\n        applyTo: ['stop'],\r\n    },\r\n    'stroke': {\r\n        name: 'stroke',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: true,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: true,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.colorKeywords,\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.systemColor,\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.x11Colors,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.colorFullMatch,\r\n            }, {\r\n                type: 'enum',\r\n                enum: enum_1.paintKeywords,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.funcIRIFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.childFuncFullMatch,\r\n            }],\r\n        initValue: 'none',\r\n        applyTo: shapeAndText,\r\n    },\r\n    'stroke-dasharray': {\r\n        name: 'stroke-dasharray',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'string',\r\n                string: 'none',\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.dasharrayFullMatch,\r\n            }],\r\n        initValue: 'none',\r\n        applyTo: shapeAndText,\r\n    },\r\n    'stroke-dashoffset': {\r\n        name: 'stroke-dashoffset',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }],\r\n        initValue: '0',\r\n        applyTo: shapeAndText,\r\n    },\r\n    'stroke-linecap': {\r\n        name: 'stroke-linecap',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.linecap,\r\n            }],\r\n        initValue: 'butt',\r\n        applyTo: shapeAndText,\r\n    },\r\n    'stroke-linejoin': {\r\n        name: 'stroke-linejoin',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.linejoin,\r\n            }],\r\n        initValue: 'miter',\r\n        applyTo: shapeAndText,\r\n    },\r\n    'stroke-miterlimit': {\r\n        name: 'stroke-miterlimit',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }],\r\n        initValue: '4',\r\n        applyTo: shapeAndText,\r\n    },\r\n    'stroke-opacity': {\r\n        name: 'stroke-opacity',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }],\r\n        initValue: '1',\r\n        applyTo: shapeAndText,\r\n    },\r\n    'stroke-width': {\r\n        name: 'stroke-width',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: syntax_1.numberFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }],\r\n        initValue: '1',\r\n        applyTo: shapeAndText,\r\n    },\r\n    'text-anchor': {\r\n        name: 'text-anchor',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.textAnchor,\r\n            }],\r\n        initValue: 'start',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'text-decoration': {\r\n        name: 'text-decoration',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'none',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'text-orientation': {\r\n        name: 'text-orientation',\r\n        couldBeStyle: true,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.textOrientation,\r\n            }],\r\n        initValue: 'mixed',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'text-overflow': {\r\n        name: 'text-overflow',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.textOverflow,\r\n            }],\r\n        initValue: 'auto',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'text-rendering': {\r\n        name: 'text-rendering',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.shapeRendering,\r\n            }],\r\n        initValue: 'auto',\r\n        applyTo: ['text'],\r\n    },\r\n    'unicode-bidi': {\r\n        name: 'unicode-bidi',\r\n        couldBeStyle: true,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.unicodeBidi,\r\n            }],\r\n        initValue: 'normal',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'vector-effect': {\r\n        name: 'vector-effect',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'string',\r\n                string: 'none',\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.vectorEffectFullMatch,\r\n            }],\r\n        initValue: 'none',\r\n        applyTo: ['use'].concat(definitions_1.graphicsElements),\r\n    },\r\n    'visibility': {\r\n        name: 'visibility',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.visibility,\r\n            }],\r\n        initValue: 'inherit',\r\n        applyTo: ['use', 'a'].concat(definitions_1.graphicsElements),\r\n    },\r\n    'white-space': {\r\n        name: 'white-space',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.whitespace,\r\n            }],\r\n        initValue: 'normal',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'word-spacing': {\r\n        name: 'word-spacing',\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'string',\r\n                string: 'normal',\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.lengthFullMatch,\r\n            }, {\r\n                type: 'reg',\r\n                reg: syntax_1.percentageFullMatch,\r\n            }],\r\n        initValue: 'normal',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'writing-mode': {\r\n        name: 'writing-mode',\r\n        couldBeStyle: true,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.writingMode,\r\n            }],\r\n        initValue: 'lr-tb',\r\n        applyTo: ['text'],\r\n    },\r\n};\r\nconst undefAttr = {\r\n    name: '',\r\n    isUndef: true,\r\n    couldBeStyle: false,\r\n    animatable: false,\r\n    maybeColor: false,\r\n    maybeIRI: false,\r\n    maybeFuncIRI: false,\r\n    maybeSizeNumber: false,\r\n    maybeAccurateNumber: false,\r\n    legalValues: [],\r\n    initValue: '',\r\n    applyTo: [],\r\n};\r\nexports.regularAttr = new Proxy(_regularAttr, {\r\n    get(obj, prop) {\r\n        return prop in obj ? obj[prop] : undefAttr;\r\n    },\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/const/regular-attr.ts?");

/***/ }),

/***/ "./src/slimming/const/regular-tag.ts":
/*!*******************************************!*\
  !*** ./src/slimming/const/regular-tag.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst definitions_1 = __webpack_require__(/*! ./definitions */ \"./src/slimming/const/definitions.ts\");\r\nconst baseChildren = ['script'].concat(definitions_1.descriptiveElements);\r\nconst shapeChildren = ['clipPath', 'marker', 'mask', 'style'].concat(definitions_1.animationElements, baseChildren, definitions_1.paintServerElements);\r\nconst globalChildren = ['a', 'audio', 'canvas', 'clipPath', 'cursor', 'filter', 'foreignObject', 'iframe', 'image', 'marker', 'mask', 'style', 'switch', 'text', 'video', 'view'].concat(definitions_1.animationElements, baseChildren, definitions_1.paintServerElements, definitions_1.shapeElements, definitions_1.structuralElements);\r\nconst gradientChildren = ['animate', 'animateTransform', 'set', 'stop', 'style'].concat(baseChildren);\r\nconst feChildren = ['animate', 'set'].concat(baseChildren);\r\nconst conditionAndCore = definitions_1.conditionalProcessingAttributes.concat(definitions_1.coreAttributes);\r\nconst shapeAttributes = ['pathLength'].concat(conditionAndCore);\r\nconst animateAttributes = conditionAndCore.concat(definitions_1.animationAdditionAttributes, definitions_1.animationTimingAttributes, definitions_1.animationValueAttributes);\r\nconst feAttributes = ['result'].concat(definitions_1.coreAttributes, definitions_1.rectAttributes);\r\nconst feFuncAttributes = definitions_1.transferFunctionElementAttributes.concat(definitions_1.coreAttributes);\r\n// tag define\r\nconst _regularTag = {\r\n    'a': {\r\n        containTextNode: true,\r\n        legalChildElements: { transparent: true, noself: true, childElements: [] },\r\n        ownAttributes: ['href', 'target', 'download', 'rel', 'hreflang', 'type'].concat(conditionAndCore, definitions_1.deprecatedXlinkAttributes),\r\n    },\r\n    'animate': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: baseChildren },\r\n        ownAttributes: ['attributeName'].concat(animateAttributes),\r\n    },\r\n    'animateMotion': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: ['mpath'].concat(baseChildren) },\r\n        ownAttributes: ['path', 'keyPoints', 'rotate', 'origin'].concat(animateAttributes),\r\n    },\r\n    'animateTransform': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: baseChildren },\r\n        ownAttributes: ['attributeName', 'type'].concat(animateAttributes),\r\n    },\r\n    'audio': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: [] },\r\n        ownAttributes: [],\r\n    },\r\n    'canvas': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: [] },\r\n        ownAttributes: [],\r\n    },\r\n    'circle': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: shapeChildren },\r\n        ownAttributes: ['cx', 'cy', 'r'].concat(shapeAttributes),\r\n    },\r\n    'clipPath': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: ['text', 'use'].concat(baseChildren, definitions_1.animationElements, definitions_1.shapeElements) },\r\n        ownAttributes: ['externalResourcesRequired', 'transform', 'clipPathUnits'].concat(conditionAndCore),\r\n    },\r\n    'defs': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: globalChildren },\r\n        ownAttributes: definitions_1.coreAttributes,\r\n    },\r\n    'desc': {\r\n        containTextNode: true,\r\n        legalChildElements: { any: true, childElements: [] },\r\n        ownAttributes: definitions_1.coreAttributes,\r\n    },\r\n    'discard': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: baseChildren },\r\n        ownAttributes: ['begin', 'href'].concat(conditionAndCore),\r\n    },\r\n    'ellipse': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: shapeChildren },\r\n        ownAttributes: ['cx', 'cy', 'rx', 'ry'].concat(shapeAttributes),\r\n    },\r\n    'feBlend': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['in', 'in2', 'mode'].concat(feAttributes),\r\n    },\r\n    'feColorMatrix': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['in', 'type', 'values'].concat(feAttributes),\r\n    },\r\n    'feComponentTransfer': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: ['feFuncR', 'feFuncG', 'feFuncB', 'feFuncA'].concat(baseChildren) },\r\n        ownAttributes: ['in'].concat(feAttributes),\r\n    },\r\n    'feComposite': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['in', 'in2', 'operator', 'k1', 'k2', 'k3', 'k4'].concat(feAttributes),\r\n    },\r\n    'feConvolveMatrix': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['in', 'order', 'kernelMatrix', 'divisor', 'bias', 'targetX', 'targetY', 'edgeMode', 'kernelUnitLength', 'preserveAlpha'].concat(feAttributes),\r\n    },\r\n    'feDiffuseLighting': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: baseChildren.concat(definitions_1.lightSourceElements) },\r\n        ownAttributes: ['in', 'surfaceScale', 'diffuseConstant', 'kernelUnitLength'].concat(feAttributes),\r\n    },\r\n    'feDisplacementMap': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['in', 'in2', 'scale', 'xChannelSelector', 'yChannelSelector'].concat(feAttributes),\r\n    },\r\n    'feDistantLight': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['azimuth', 'elevation'].concat(definitions_1.coreAttributes),\r\n    },\r\n    'feFlood': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: feAttributes,\r\n    },\r\n    'feFuncA': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: feFuncAttributes,\r\n    },\r\n    'feFuncB': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: feFuncAttributes,\r\n    },\r\n    'feFuncG': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: feFuncAttributes,\r\n    },\r\n    'feFuncR': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: feFuncAttributes,\r\n    },\r\n    'feGaussianBlur': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['in', 'stdDeviation', 'edgeMode'].concat(feAttributes),\r\n    },\r\n    'feImage': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: ['animate', 'animateTransform', 'set'].concat(baseChildren) },\r\n        ownAttributes: ['externalResourcesRequired', 'preserveAspectRatio', 'xlink:href', 'href', 'crossorigin'].concat(feAttributes),\r\n    },\r\n    'feMerge': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: ['feMergeNode'].concat(baseChildren) },\r\n        ownAttributes: feAttributes,\r\n    },\r\n    'feMergeNode': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['in'].concat(definitions_1.coreAttributes),\r\n    },\r\n    'feMorphology': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['in', 'operator', 'radius'].concat(feAttributes),\r\n    },\r\n    'feOffset': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['in', 'dx', 'dy'].concat(feAttributes),\r\n    },\r\n    'fePointLight': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['x', 'y', 'z'].concat(definitions_1.coreAttributes),\r\n    },\r\n    'feSpecularLighting': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: baseChildren.concat(definitions_1.lightSourceElements) },\r\n        ownAttributes: ['in', 'surfaceScale', 'specularConstant', 'specularExponent', 'kernelUnitLength'].concat(feAttributes),\r\n    },\r\n    'feSpotLight': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['x', 'y', 'z'].concat(definitions_1.coreAttributes),\r\n    },\r\n    'feTile': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['in'].concat(feAttributes),\r\n    },\r\n    'feTurbulence': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['baseFrequency', 'numOctaves', 'seed', 'stitchTiles', 'type'].concat(feAttributes),\r\n    },\r\n    'filter': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren.concat(definitions_1.filterPrimitiveElements) },\r\n        ownAttributes: ['externalResourcesRequired', 'filterUnits', 'primitiveUnits'].concat(definitions_1.coreAttributes, definitions_1.rectAttributes),\r\n    },\r\n    'foreignObject': {\r\n        containTextNode: false,\r\n        legalChildElements: { any: true, childElements: [] },\r\n        ownAttributes: definitions_1.rectAttributes.concat(conditionAndCore),\r\n    },\r\n    'g': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: globalChildren },\r\n        ownAttributes: conditionAndCore,\r\n    },\r\n    'iframe': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: [] },\r\n        ownAttributes: [],\r\n    },\r\n    'image': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: ['clipPath', 'mask', 'style'].concat(definitions_1.animationElements, baseChildren) },\r\n        ownAttributes: ['preserveAspectRatio', 'href', 'crossorigin'].concat(conditionAndCore, definitions_1.deprecatedXlinkAttributes, definitions_1.rectAttributes),\r\n    },\r\n    'line': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: shapeChildren },\r\n        ownAttributes: ['x1', 'y1', 'x2', 'y2'].concat(shapeAttributes),\r\n    },\r\n    'linearGradient': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: gradientChildren },\r\n        ownAttributes: ['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform', 'spreadMethod', 'href'].concat(definitions_1.coreAttributes, definitions_1.deprecatedXlinkAttributes),\r\n    },\r\n    'marker': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: globalChildren },\r\n        ownAttributes: ['viewBox', 'preserveAspectRatio', 'refX', 'refY', 'markerUnits', 'markerWidth', 'markerHeight', 'orient'].concat(definitions_1.coreAttributes),\r\n    },\r\n    'mask': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: ['a', 'clipPath', 'cursor', 'filter', 'foreignObject', 'image', 'marker', 'mask', 'pattern', 'style', 'switch', 'view', 'text'].concat(definitions_1.animationElements, baseChildren, definitions_1.shapeElements, definitions_1.structuralElements, definitions_1.gradientElements) },\r\n        ownAttributes: ['maskUnits', 'maskContentUnits'].concat(definitions_1.rectAttributes, conditionAndCore),\r\n    },\r\n    'metadata': {\r\n        containTextNode: true,\r\n        legalChildElements: { any: true, childElements: [] },\r\n        ownAttributes: definitions_1.coreAttributes,\r\n    },\r\n    'mpath': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: baseChildren },\r\n        ownAttributes: ['href'].concat(definitions_1.coreAttributes),\r\n    },\r\n    'path': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: shapeChildren },\r\n        ownAttributes: ['d'].concat(shapeAttributes),\r\n    },\r\n    'pattern': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: globalChildren },\r\n        ownAttributes: ['viewBox', 'preserveAspectRatio', 'patternUnits', 'patternContentUnits', 'patternTransform', 'href'].concat(definitions_1.coreAttributes, definitions_1.deprecatedXlinkAttributes, definitions_1.rectAttributes),\r\n    },\r\n    'polygon': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: shapeChildren },\r\n        ownAttributes: ['points'].concat(shapeAttributes),\r\n    },\r\n    'polyline': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: shapeChildren },\r\n        ownAttributes: ['points'].concat(shapeAttributes),\r\n    },\r\n    'radialGradient': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: gradientChildren },\r\n        ownAttributes: ['cx', 'cy', 'r', 'fx', 'fy', 'fr', 'gradientUnits', 'gradientTransform', 'spreadMethod', 'href'].concat(definitions_1.coreAttributes, definitions_1.deprecatedXlinkAttributes),\r\n    },\r\n    'rect': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: shapeChildren },\r\n        ownAttributes: ['rx', 'ry'].concat(definitions_1.rectAttributes, shapeAttributes),\r\n    },\r\n    'script': {\r\n        containTextNode: true,\r\n        legalChildElements: { childElements: [] },\r\n        ownAttributes: ['type', 'href', 'crossorigin'].concat(definitions_1.coreAttributes, definitions_1.deprecatedXlinkAttributes),\r\n    },\r\n    'set': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: baseChildren },\r\n        ownAttributes: ['to', 'attributeName'].concat(conditionAndCore, definitions_1.animationTimingAttributes),\r\n    },\r\n    'stop': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: ['animate', 'script', 'set', 'style'] },\r\n        ownAttributes: ['path', 'offset'].concat(definitions_1.coreAttributes),\r\n    },\r\n    'style': {\r\n        containTextNode: true,\r\n        legalChildElements: { childElements: [] },\r\n        ownAttributes: ['type', 'media', 'title'].concat(definitions_1.coreAttributes),\r\n    },\r\n    'svg': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: globalChildren },\r\n        ownAttributes: ['viewBox', 'preserveAspectRatio', 'zoomAndPan', 'transform'].concat(conditionAndCore, definitions_1.rectAttributes),\r\n    },\r\n    'switch': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: ['a', 'audio', 'canvas', 'foreignObject', 'g', 'iframe', 'image', 'svg', 'switch', 'text', 'use', 'video'].concat(definitions_1.animationElements, definitions_1.shapeElements) },\r\n        ownAttributes: conditionAndCore,\r\n    },\r\n    'symbol': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: globalChildren },\r\n        ownAttributes: ['preserveAspectRatio', 'viewBox', 'refX', 'refY'].concat(definitions_1.coreAttributes, definitions_1.rectAttributes),\r\n    },\r\n    'text': {\r\n        containTextNode: true,\r\n        legalChildElements: { childElements: ['a', 'clipPath', 'marker', 'mask', 'style'].concat(definitions_1.animationElements, baseChildren, definitions_1.paintServerElements, definitions_1.textContentChildElements) },\r\n        ownAttributes: ['lengthAdjust', 'x', 'y', 'dx', 'dy', 'rotate', 'textLength'].concat(conditionAndCore),\r\n    },\r\n    'textPath': {\r\n        containTextNode: true,\r\n        legalChildElements: { childElements: ['a', 'animate', 'clipPath', 'marker', 'mask', 'set', 'style', 'tspan'].concat(baseChildren, definitions_1.paintServerElements) },\r\n        ownAttributes: ['lengthAdjust', 'textLength', 'path', 'href', 'startOffset', 'method', 'spacing', 'side'].concat(conditionAndCore, definitions_1.deprecatedXlinkAttributes),\r\n    },\r\n    'title': {\r\n        containTextNode: true,\r\n        legalChildElements: { any: true, childElements: ['a', 'animate', 'set', 'style', 'tspan'].concat(baseChildren, definitions_1.paintServerElements) },\r\n        ownAttributes: definitions_1.coreAttributes,\r\n    },\r\n    'tspan': {\r\n        containTextNode: true,\r\n        legalChildElements: { childElements: [] },\r\n        ownAttributes: ['lengthAdjust', 'x', 'y', 'dx', 'dy', 'rotate', 'textLength'].concat(conditionAndCore),\r\n    },\r\n    'unknown': {\r\n        containTextNode: false,\r\n        legalChildElements: { any: true, childElements: [] },\r\n        ownAttributes: conditionAndCore,\r\n    },\r\n    'use': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: ['clipPath', 'mask', 'style'].concat(definitions_1.animationElements, baseChildren) },\r\n        ownAttributes: ['href'].concat(definitions_1.rectAttributes, conditionAndCore, definitions_1.deprecatedXlinkAttributes),\r\n    },\r\n    'video': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: [] },\r\n        ownAttributes: [],\r\n    },\r\n    'view': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: ['style'].concat(definitions_1.animationElements, baseChildren) },\r\n        ownAttributes: ['viewBox', 'preserveAspectRatio', 'zoomAndPan'].concat(definitions_1.coreAttributes),\r\n    },\r\n};\r\nconst undefTag = {\r\n    isUndef: true,\r\n    containTextNode: false,\r\n    legalChildElements: {},\r\n    ownAttributes: [],\r\n};\r\nexports.regularTag = new Proxy(_regularTag, {\r\n    get(obj, prop) {\r\n        return prop in obj ? obj[prop] : undefTag;\r\n    },\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/const/regular-tag.ts?");

/***/ }),

/***/ "./src/slimming/const/syntax.ts":
/*!**************************************!*\
  !*** ./src/slimming/const/syntax.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst definitions_1 = __webpack_require__(/*! ./definitions */ \"./src/slimming/const/definitions.ts\");\r\nconst enum_1 = __webpack_require__(/*! ./enum */ \"./src/slimming/const/enum.ts\");\r\n// 符合官方定义的 token\r\n// https://drafts.csswg.org/css-syntax-3\r\n// 是否支持 unicode\r\nlet supportUnicode = true;\r\ntry {\r\n    supportUnicode = /\\u{20BB7}/u.test('𠮷');\r\n}\r\ncatch (e) {\r\n    supportUnicode = false;\r\n}\r\nconst uModifier = supportUnicode ? 'u' : '';\r\n// definition\r\nexports.commaWsp = '(?:\\\\s*,\\\\s*|\\\\s*)';\r\nconst semi = '\\\\s*;\\\\s*';\r\nconst paren = '\\\\s*\\\\(\\\\s*';\r\nconst rParen = '\\\\s*\\\\)';\r\n// name token\r\n// https://www.w3.org/TR/xml/#NT-Name\r\nconst NameStartChar = `:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD${supportUnicode ? '\\\\u{10000}-\\\\u{EFFFF}' : ''}`;\r\nconst NameChar = `${NameStartChar}\\\\-\\\\.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040`;\r\nconst Name = `[${NameStartChar}][${NameChar}]*`;\r\n// css syntax\r\n// https://drafts.csswg.org/css-syntax-3/#non-ascii-code-point\r\nconst cssNameStartChar = `A-Za-z_\\\\u0080-\\\\uFFFF${supportUnicode ? '\\\\u{10000}-\\\\u{EFFFF}' : ''}`;\r\nconst cssNameChar = `${cssNameStartChar}\\\\-0-9`;\r\nconst cssName = `[${cssNameStartChar}][${cssNameChar}]*`;\r\nexports.nameFullMatch = new RegExp(`^${Name}$`, uModifier);\r\nexports.cssNameFullMatch = new RegExp(`^${cssName}$`, uModifier);\r\nexports.cssNameSpaceSeparatedFullMatch = new RegExp(`^${cssName}(?:\\\\s+${cssName})*$`, uModifier);\r\n// number token\r\n// https://www.w3.org/TR/css3-values/#length-value\r\n// https://www.w3.org/TR/css-syntax-3/#number-token-diagram\r\n// https://www.w3.org/TR/css-syntax-3/#percentage-token-diagram\r\nexports.numberPattern = '[+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?';\r\nconst zero = '[+-]?(?:0+\\\\.)?0+(?:[eE][+-]?\\\\d+)?';\r\nexports.numberSequence = `${exports.numberPattern}(?:${exports.commaWsp}${exports.numberPattern})*`;\r\nconst numberPair = `${exports.numberPattern}${exports.commaWsp}${exports.numberPattern}`;\r\nconst numberPairSequence = `${numberPair}(?:${exports.commaWsp}${numberPair})*`;\r\nconst numberPairDouble = `${numberPair}${exports.commaWsp}${numberPair}`;\r\nconst numberPairTriplet = `${numberPair}${exports.commaWsp}${numberPair}${exports.commaWsp}${numberPair}`;\r\nexports.numberGlobal = new RegExp(exports.numberPattern, 'g');\r\nexports.numberFullMatch = new RegExp(`^${exports.numberPattern}$`);\r\nexports.numberOptionalFullMatch = new RegExp(`^${exports.numberPattern}(?:\\\\s*${exports.numberPattern})?$`);\r\nexports.numberListFullMatch = new RegExp(`^${exports.numberSequence}$`);\r\nexports.numberSemiSepatatedFullMatch = new RegExp(`^${exports.numberPattern}(?:${semi}${exports.numberPattern})*(?:${semi})?$`);\r\nexports.integerFullMatch = /^[+-]?(?:\\d+|(?:\\d*\\.)?\\d+[eE][+-]?\\d+)$/;\r\n// https://www.w3.org/TR/css-values-3/#angle-value\r\nexports.angel = 'deg|grad|rad|turn';\r\nexports.angelFullMatch = new RegExp(`^${exports.numberPattern}(?:${exports.angel})?$`);\r\nconst controlPoint = `${exports.numberPattern}${exports.commaWsp}${exports.numberPattern}${exports.commaWsp}${exports.numberPattern}${exports.commaWsp}${exports.numberPattern}`;\r\nexports.controlPointsFullMatch = new RegExp(`^${controlPoint}(?:${semi}${controlPoint})*(?:${semi})?$`);\r\nconst Units = '(?:em|ex|ch|rem|vx|vw|vmin|vmax|cm|mm|Q|in|pt|pc|px)';\r\nexports.percentageFullMatch = new RegExp(`^${exports.numberPattern}%$`);\r\nconst length = `${exports.numberPattern}${Units}?`;\r\nconst percentageLength = `(?:${length}|${exports.numberPattern}%)`;\r\nexports.lengthFullMatch = new RegExp(`^${length}$`);\r\nexports.dasharrayFullMatch = new RegExp(`^(?:${percentageLength}(?:${exports.commaWsp}${percentageLength}))?$`);\r\nexports.viewBoxFullMatch = new RegExp(`^${controlPoint}$`);\r\n// time token\r\n// https://svgwg.org/specs/animations/#BeginValueListSyntax\r\nconst timeCountValue = '\\\\d+(?:\\\\.\\\\d+)?(?:h|min|s|ms)?';\r\nconst timeValue = '(?:\\\\d+:)?[0-5]\\\\d:[0-5]\\\\d(?:\\\\.\\\\d+)?';\r\nconst clockValue = `(?:${timeCountValue}|${timeValue})`;\r\nconst offsetValue = `(?:\\\\s*[+-]\\\\s*)?${clockValue}`;\r\nconst syncbaseValue = `${Name}\\\\.(?:begin|end)(?:${offsetValue})?`;\r\nconst eventValue = `(?:${Name}\\\\.)?(?:${definitions_1.eventAttributes.join('|')})(?:${offsetValue})?`;\r\nconst repeatValue = `(?:${Name}\\\\.)?repeat\\\\(\\\\d+\\\\)(?:${offsetValue})?`;\r\nconst accessKeyValue = `accessKey\\\\(.\\\\)(?:${offsetValue})?`;\r\nconst wallclockSyncValue = 'wallclock\\\\(\\\\d+\\\\)';\r\nconst timePattern = `(?:${offsetValue}|${syncbaseValue}|${eventValue}|${repeatValue}|${accessKeyValue}|${wallclockSyncValue}|indefinite)`;\r\nexports.clockFullMatch = new RegExp(`^${clockValue}$`);\r\nexports.timeListFullMatch = new RegExp(`^${timePattern}(\\\\s*;\\\\s*${timePattern})*$`, uModifier);\r\n// transform token\r\n// https://drafts.csswg.org/css-transforms/#svg-comma\r\nconst translate = `translate${paren}${exports.numberPattern}(?:(?:${exports.commaWsp})?${exports.numberPattern})?${rParen}`;\r\nconst scale = `scale${paren}${exports.numberPattern}(?:(?:${exports.commaWsp})?${exports.numberPattern})?${rParen}`;\r\nconst rotate = `rotate${paren}${exports.numberPattern}(?:(?:${exports.commaWsp})?${exports.numberPattern}(?:${exports.commaWsp})?${exports.numberPattern})?${rParen}`;\r\nconst skewX = `skewX${paren}${exports.numberPattern}${rParen}`;\r\nconst skewY = `skewY${paren}${exports.numberPattern}${rParen}`;\r\nconst matrix = `matrix${paren}${exports.numberPattern}(?:(?:${exports.commaWsp})?${exports.numberPattern}){5}${rParen}`;\r\nexports.transformListFullMatch = new RegExp(`^(?:\\\\s*(?:${translate}|${scale}|${rotate}|${skewX}|${skewY}|${matrix})\\\\s*)*$`);\r\n// uri token\r\n// http://www.ietf.org/rfc/rfc3986.txt\r\nexports.URIFullMatch = /^(?:[^:/?#]+\\:)?(?:\\/\\/[^/?#]*)?(?:[^?#]*)(?:\\?[^#]*)?(?:#.*)?$/;\r\n// https://tools.ietf.org/html/bcp47#section-2.1\r\nexports.langFullMatch = /^[a-zA-Z]{2,}(?:-[a-zA-Z0-9%]+)*$/;\r\n// https://drafts.csswg.org/css-syntax-3/#typedef-ident-token\r\nconst hexDigit = '0-9a-fA-F';\r\nconst newLine = '\\\\r\\\\n';\r\nconst escape = `\\\\\\\\(?:[^${hexDigit}${newLine}]|[${hexDigit}]{1,6}\\\\s?)`;\r\nconst indentToken = `(?:--|-?(?:[${cssNameStartChar}]|${escape}))(?:[${cssNameChar}]|${escape})*`;\r\nexports.indentFullMatch = new RegExp(`^${indentToken}$`, uModifier);\r\n// https://svgwg.org/svg2-draft/paths.html#PathDataBNF\r\nconst pathZ = '[zZ]';\r\nconst pathMToStrict = `[mM]\\\\s*${numberPairSequence}${pathZ}?`;\r\nconst pathMTo = `[mM]\\\\s*${exports.numberSequence}`;\r\nconst pathTo = `[lLhHvVcCsSqQtTaA]\\\\s*${exports.numberSequence}`;\r\nconst pathLToStrict = `[lL]\\\\s*(?:${numberPairSequence}|${pathZ})`;\r\nconst pathHVToStrict = `[hHvV]\\\\s*${exports.numberSequence}`;\r\nconst pathCToStrict = `[cC]\\\\s*(?:${numberPairTriplet}(?:${exports.commaWsp}${numberPairTriplet})*|(?:${numberPairSequence})?${pathZ})`;\r\nconst pathSQToStrict = `[sSqQ]\\\\s*(?:${numberPairDouble}(?:${exports.commaWsp}${numberPairDouble})*|(?:${numberPairSequence})?${pathZ})`;\r\nconst pathTToStrict = `[tT]\\\\s*(?:${numberPairSequence}|${pathZ})`;\r\nconst pathA = `${exports.numberPattern}${exports.commaWsp}${exports.numberPattern}${exports.commaWsp}${exports.numberPattern}${exports.commaWsp}[01]${exports.commaWsp}[01]${exports.commaWsp}${numberPair}`;\r\nconst pathASequence = `${pathA}(?:${exports.commaWsp}${pathA})*`;\r\nconst pathATo = `[aA]\\\\s*(?:${pathASequence}|(?:${pathASequence})?${pathZ})`;\r\nconst pathPatternStrict = `(?:${pathMToStrict}|${pathZ}|${pathLToStrict}|${pathHVToStrict}|${pathCToStrict}|${pathSQToStrict}|${pathTToStrict}|${pathATo})`;\r\nconst pathPattern = `(?:${pathMTo}|${pathZ}|${pathTo})`;\r\nexports.pathFullMatchStrict = new RegExp(`^${pathMToStrict}(?:${exports.commaWsp}${pathPatternStrict})*$`);\r\nexports.pathFullMatch = new RegExp(`^${pathMTo}(?:${exports.commaWsp}${pathPattern})*$`);\r\nexports.preservAspectRatioFullMatch = /^(?:none|xMinYMin|xMidYMin|xMaxYMin|xMinYMid|xMidYMid|xMaxYMid|xMinYMax|xMidYMax|xMaxYMax)(?:\\s+(?:meet|slice))?$/;\r\n// properties syntax\r\n// IRI\r\nexports.funcIRIToID = /^url\\(([\"']?)#(.+)\\1\\)$/;\r\nconst url = 'url\\\\([^\\\\)]+\\\\)';\r\nexports.funcIRIFullMatch = new RegExp(`^${url}$`);\r\nexports.IRIFullMatch = /^#(.+)$/;\r\nconst cursorStr = 'auto|default|none|context-menu|help|pointer|progress|wait|cell|crosshair|text|vertical-text|alias|copy|move|no-drop|not-allowed|grab|grabbing|e-resize|n-resize|ne-resize|nw-resize|s-resize|se-resize|sw-resize|w-resize|ew-resize|ns-resize|nesw-resize|nwse-resize|col-resize|row-resize|all-scroll|zoom-in|zoom-out';\r\nexports.cursorFullMatch = new RegExp(`^(?:${url}\\\\s*(?:${exports.numberPattern}\\\\s+${exports.numberPattern})?${exports.commaWsp})*\\\\s*(?:${cursorStr})$`);\r\n// shapes\r\nexports.rectFullMatch = new RegExp(`rect${paren}${exports.numberPattern}(?:(?:${exports.commaWsp})?${exports.numberPattern}){3}${rParen}`);\r\n// TODO：这个正则不够严谨\r\nexports.basicShapeFullMatch = /^(?:inset|circle|ellipse|polygon)\\([^\\(\\)]+\\)$/;\r\n// color\r\nconst rgb = `rgba?${paren}(?:${exports.numberPattern}${exports.commaWsp}${exports.numberPattern}${exports.commaWsp}${exports.numberPattern}(?:${exports.commaWsp}${exports.numberPattern}%?)?|${exports.numberPattern}%${exports.commaWsp}${exports.numberPattern}%${exports.commaWsp}${exports.numberPattern}%(?:${exports.commaWsp}${exports.numberPattern}%?)?)${rParen}`;\r\nconst hsl = `hsla?${paren}${exports.numberPattern}(?:${exports.angel})?${exports.commaWsp}${exports.numberPattern}%${exports.commaWsp}${exports.numberPattern}%(?:${exports.commaWsp}${exports.numberPattern}%?)?${rParen}`;\r\nconst hexColor = '#(?:[0-9a-fA-F]{3,4}|[0-9a-fA-F]{6}|[0-9a-fA-F]{8})';\r\nexports.colorFullMatch = new RegExp(`^(?:${rgb}|${hsl}|${hexColor})$`);\r\nexports.iccColorFullMatch = new RegExp(`^icc-color${paren}${Name}(?:${exports.commaWsp}${exports.numberPattern})+${rParen}$`, uModifier);\r\nexports.childFuncFullMatch = /^child\\(\\d+\\)$/;\r\n// filter\r\nconst blur = `blur${paren}(?:${length})?${rParen}`;\r\nconst filterFuncNumberPercentage = `(?:brightness|contrast|grayscale|invert|opacity|saturate|sepia)${paren}(?:${exports.numberPattern}%?)?${rParen}`;\r\nconst dropShadow = `drop-shadow${paren}(?:(?:${rgb}|${hsl}|${hexColor}|${Object.keys(enum_1.colorKeywords).join('|')}|${Object.keys(enum_1.systemColor).join('|')}|${Object.keys(enum_1.x11Colors).join('|')})?${exports.commaWsp}(?:${length}|${exports.numberPattern}%){2,3})?${rParen}`;\r\nconst hueRotate = `hue-rotate${paren}(?:${exports.numberPattern}(?:${exports.angel})?|${zero})?${rParen}`;\r\nconst filterFunc = `(?:${blur}|${filterFuncNumberPercentage}|${dropShadow}|${hueRotate})`;\r\nexports.filterListFullMatch = new RegExp(`(?:(?:${filterFunc}|${url})${exports.commaWsp})+`);\r\nexports.fontWeightFullMatch = /^normal|bold|bolder|lighter|[1-9]00$/;\r\nexports.textOrientationFullMatch = /^mixed|upright|sideways|auto|0deg|0|90deg|90$/;\r\nexports.vectorEffectFullMatch = new RegExp(`^(?:(?:non-scaling-stroke|non-scaling-size|non-rotation|fixed-position)${exports.commaWsp})+${exports.commaWsp}(?:viewport|screen)?$`);\r\nexports.transformOriginFullMatch = new RegExp(`^\\\\s*(?:left|center|right|top|bottom|${percentageLength})\\\\s*|\\\\s*(?:left|center|right|${percentageLength})\\\\s+(?:top|center|bottom|${percentageLength})\\\\s+(?:${length})?\\\\s*|\\\\s*(?:top|center|bottom)\\\\s+(?:left|center|right)\\\\s+(?:${length})?\\\\s*$`);\r\nexports.textDecorationLine = /^none|(?:underline|overline|line-through|blink)(?:\\s+(?:underline|overline|line-through|blink))*$/;\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/const/syntax.ts?");

/***/ }),

/***/ "./src/slimming/default-rules/combine-script.ts":
/*!******************************************************!*\
  !*** ./src/slimming/default-rules/combine-script.ts ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst index_1 = __webpack_require__(/*! ../../node/index */ \"./src/node/index.ts\");\r\nconst mix_white_space_1 = __webpack_require__(/*! ../utils/mix-white-space */ \"./src/slimming/utils/mix-white-space.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\n// 合并多个 script 标签，并将内容合并为一个子节点\r\nexports.combineScript = async (dom) => new Promise((resolve, reject) => {\r\n    let firstScript;\r\n    let lastChildNode;\r\n    const checkCNode = (node) => {\r\n        for (let i = 0; i < node.childNodes.length; i++) {\r\n            const cNode = node.childNodes[i];\r\n            if (cNode.nodeType !== index_1.NodeType.Text && cNode.nodeType !== index_1.NodeType.CDATA) {\r\n                rm_node_1.rmNode(cNode);\r\n                i--;\r\n            }\r\n            else {\r\n                cNode.textContent = mix_white_space_1.mixWhiteSpace(cNode.textContent.trim());\r\n                if (cNode.nodeType === index_1.NodeType.Text) {\r\n                    cNode.nodeType = index_1.NodeType.CDATA;\r\n                }\r\n                if (!lastChildNode) {\r\n                    lastChildNode = cNode;\r\n                }\r\n                else {\r\n                    if (lastChildNode.textContent.slice(-1) !== ';') {\r\n                        lastChildNode.textContent += ';';\r\n                    }\r\n                    lastChildNode.textContent += cNode.textContent;\r\n                    rm_node_1.rmNode(cNode);\r\n                    i--;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    traversal_node_1.traversalNode(ramda_1.propEq('nodeName', 'script'), node => {\r\n        if (firstScript) {\r\n            checkCNode(node);\r\n            rm_node_1.rmNode(node);\r\n        }\r\n        else {\r\n            firstScript = node;\r\n            checkCNode(node);\r\n        }\r\n    }, dom);\r\n    if (firstScript) {\r\n        const childNodes = firstScript.childNodes;\r\n        if (childNodes.length === 0 || !childNodes[0].textContent || !childNodes[0].textContent.replace(/\\s/g, '')) {\r\n            // 如果内容为空，则移除 script 节点\r\n            rm_node_1.rmNode(firstScript);\r\n        }\r\n        else {\r\n            const textContent = childNodes[0].textContent;\r\n            if (!textContent.includes('<')) {\r\n                // 如果没有危险代码，则由 CDATA 转为普通文本类型\r\n                childNodes[0].nodeType = index_1.NodeType.Text;\r\n            }\r\n            if (textContent.slice(-1) === ';') {\r\n                // 移除尾分号\r\n                childNodes[0].textContent = childNodes[0].textContent.slice(0, -1);\r\n            }\r\n            // 把 script 标签插入到最后\r\n            traversal_node_1.traversalNode(ramda_1.propEq('nodeName', 'svg'), node => {\r\n                node.appendChild(firstScript);\r\n            }, dom);\r\n        }\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/default-rules/combine-script.ts?");

/***/ }),

/***/ "./src/slimming/default-rules/combine-style.ts":
/*!*****************************************************!*\
  !*** ./src/slimming/default-rules/combine-style.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst css_1 = __webpack_require__(/*! css */ \"css\");\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst index_1 = __webpack_require__(/*! ../../node/index */ \"./src/node/index.ts\");\r\nconst mix_white_space_1 = __webpack_require__(/*! ../utils/mix-white-space */ \"./src/slimming/utils/mix-white-space.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\n// 合并多个 style 标签，并将文本节点合并到一个子节点\r\nexports.combineStyle = async (dom) => new Promise((resolve, reject) => {\r\n    let firstStyle;\r\n    let lastChildNode;\r\n    const checkCNode = (node) => {\r\n        for (let i = 0; i < node.childNodes.length; i++) {\r\n            const cNode = node.childNodes[i];\r\n            if (cNode.nodeType !== index_1.NodeType.Text && cNode.nodeType !== index_1.NodeType.CDATA) {\r\n                rm_node_1.rmNode(cNode);\r\n                i--;\r\n            }\r\n            else {\r\n                cNode.textContent = mix_white_space_1.mixWhiteSpace(cNode.textContent.trim());\r\n                if (cNode.nodeType === index_1.NodeType.Text) {\r\n                    cNode.nodeType = index_1.NodeType.CDATA;\r\n                }\r\n                if (!lastChildNode) {\r\n                    lastChildNode = cNode;\r\n                }\r\n                else {\r\n                    lastChildNode.textContent += cNode.textContent;\r\n                    rm_node_1.rmNode(cNode);\r\n                    i--;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    traversal_node_1.traversalNode(ramda_1.propEq('nodeName', 'style'), node => {\r\n        if (firstStyle) {\r\n            checkCNode(node);\r\n            rm_node_1.rmNode(node);\r\n        }\r\n        else {\r\n            firstStyle = node;\r\n            checkCNode(node);\r\n        }\r\n    }, dom);\r\n    if (firstStyle) {\r\n        const childNodes = firstStyle.childNodes;\r\n        if (childNodes.length === 0 || !childNodes[0].textContent || !childNodes[0].textContent.replace(/\\s/g, '')) { // 如果内容为空，则移除style节点\r\n            rm_node_1.rmNode(firstStyle);\r\n        }\r\n        else {\r\n            if (!childNodes[0].textContent.includes('<')) { // 如果没有危险代码，则由 CDATA 转为普通文本类型\r\n                childNodes[0].nodeType = index_1.NodeType.Text;\r\n            }\r\n            // 解析 stylesheet 并缓存\r\n            try {\r\n                const parsedCss = css_1.parse(childNodes[0].textContent);\r\n                if (parsedCss.stylesheet) {\r\n                    dom.stylesheet = parsedCss;\r\n                    dom.styletag = firstStyle;\r\n                }\r\n                else {\r\n                    rm_node_1.rmNode(firstStyle);\r\n                }\r\n            }\r\n            catch (e) {\r\n                rm_node_1.rmNode(firstStyle);\r\n            }\r\n        }\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/default-rules/combine-style.ts?");

/***/ }),

/***/ "./src/slimming/default-rules/combine-textnode.ts":
/*!********************************************************!*\
  !*** ./src/slimming/default-rules/combine-textnode.ts ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst index_1 = __webpack_require__(/*! ../../node/index */ \"./src/node/index.ts\");\r\nconst regular_tag_1 = __webpack_require__(/*! ../const/regular-tag */ \"./src/slimming/const/regular-tag.ts\");\r\nconst mix_white_space_1 = __webpack_require__(/*! ../utils/mix-white-space */ \"./src/slimming/utils/mix-white-space.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.combineTextNode = async (dom) => new Promise((resolve, reject) => {\r\n    // 首先移除所有可移除的文本节点，并对文本节点进行冗余空格清理\r\n    traversal_node_1.traversalNode(node => node.nodeType === index_1.NodeType.Text || node.nodeType === index_1.NodeType.CDATA, node => {\r\n        const parentName = node.parentNode && node.parentNode.nodeName;\r\n        if (parentName && (regular_tag_1.regularTag[parentName].isUndef || !regular_tag_1.regularTag[parentName].containTextNode)) {\r\n            rm_node_1.rmNode(node);\r\n        }\r\n        else {\r\n            node.textContent = mix_white_space_1.mixWhiteSpace(node.textContent);\r\n        }\r\n    }, dom);\r\n    // 合并相邻的同类型节点\r\n    traversal_node_1.traversalNode(node => !regular_tag_1.regularTag[node.nodeName].isUndef && regular_tag_1.regularTag[node.nodeName].containTextNode, node => {\r\n        let lastNode;\r\n        for (let i = 0; i < node.childNodes.length; i++) {\r\n            const childNode = node.childNodes[i];\r\n            if (childNode.nodeType === index_1.NodeType.Text || childNode.nodeType === index_1.NodeType.CDATA) {\r\n                if (lastNode) {\r\n                    if (lastNode.nodeType === childNode.nodeType) {\r\n                        lastNode.textContent = mix_white_space_1.mixWhiteSpace(`${lastNode.textContent}${childNode.textContent}`);\r\n                        rm_node_1.rmNode(childNode);\r\n                        i--;\r\n                    }\r\n                    else {\r\n                        lastNode = childNode;\r\n                    }\r\n                }\r\n                else {\r\n                    lastNode = childNode;\r\n                }\r\n            }\r\n        }\r\n    }, dom);\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/default-rules/combine-textnode.ts?");

/***/ }),

/***/ "./src/slimming/default-rules/rm-useless.ts":
/*!**************************************************!*\
  !*** ./src/slimming/default-rules/rm-useless.ts ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// 移除其它类型的 xml 定义节点和 xml 片段节点\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst index_1 = __webpack_require__(/*! ../../node/index */ \"./src/node/index.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.rmUseless = async (dom) => new Promise((resolve, reject) => {\r\n    traversal_node_1.traversalNode(ramda_1.anyPass([ramda_1.propEq('nodeType', index_1.NodeType.OtherSect), ramda_1.propEq('nodeType', index_1.NodeType.OtherDecl)]), rm_node_1.rmNode, dom);\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/default-rules/rm-useless.ts?");

/***/ }),

/***/ "./src/slimming/math/decimal.ts":
/*!**************************************!*\
  !*** ./src/slimming/math/decimal.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/*\r\n * 以字符串的形式返回小数部分\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.decimal = (a) => {\r\n    const astr = `${a}`;\r\n    return astr.includes('.') ? astr.slice(astr.indexOf('.') + 1) : '';\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/math/decimal.ts?");

/***/ }),

/***/ "./src/slimming/math/digit.ts":
/*!************************************!*\
  !*** ./src/slimming/math/digit.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/*\r\n * 返回两个小数的最大精度\r\n */\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst decimal_1 = __webpack_require__(/*! ./decimal */ \"./src/slimming/math/decimal.ts\");\r\nexports.digit = ramda_1.curry((a, b) => Math.max(decimal_1.decimal(a).length, decimal_1.decimal(b).length));\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/math/digit.ts?");

/***/ }),

/***/ "./src/slimming/math/minus.ts":
/*!************************************!*\
  !*** ./src/slimming/math/minus.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/*\r\n * 保证精度的减法\r\n * 用于解决 双精度浮点数 导致精度变化的问题\r\n */\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst digit_1 = __webpack_require__(/*! ./digit */ \"./src/slimming/math/digit.ts\");\r\nconst tofixed_1 = __webpack_require__(/*! ./tofixed */ \"./src/slimming/math/tofixed.ts\");\r\nexports.minus = ramda_1.curry((a, b) => tofixed_1.toFixed(digit_1.digit(a, b), a - b));\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/math/minus.ts?");

/***/ }),

/***/ "./src/slimming/math/plus.ts":
/*!***********************************!*\
  !*** ./src/slimming/math/plus.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/*\r\n * 保证精度的加法\r\n * 用于解决 双精度浮点数 导致精度变化的问题\r\n */\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst digit_1 = __webpack_require__(/*! ./digit */ \"./src/slimming/math/digit.ts\");\r\nconst tofixed_1 = __webpack_require__(/*! ./tofixed */ \"./src/slimming/math/tofixed.ts\");\r\nexports.plus = ramda_1.curry((a, b) => tofixed_1.toFixed(digit_1.digit(a, b), a + b));\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/math/plus.ts?");

/***/ }),

/***/ "./src/slimming/math/symmetry.ts":
/*!***************************************!*\
  !*** ./src/slimming/math/symmetry.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst plus_1 = __webpack_require__(/*! ./plus */ \"./src/slimming/math/plus.ts\");\r\nconst minus_1 = __webpack_require__(/*! ./minus */ \"./src/slimming/math/minus.ts\");\r\n// 获取 a 相对于 b 的对称值\r\nexports.symmetry = ramda_1.curry((a, b) => plus_1.plus(b, minus_1.minus(b, a)));\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/math/symmetry.ts?");

/***/ }),

/***/ "./src/slimming/math/to-percent.ts":
/*!*****************************************!*\
  !*** ./src/slimming/math/to-percent.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst const_1 = __webpack_require__(/*! ../const */ \"./src/slimming/const/index.ts\");\r\nconst tofixed_1 = __webpack_require__(/*! ./tofixed */ \"./src/slimming/math/tofixed.ts\");\r\n// 浮点数转百分比\r\nexports.toPercent = (digit, n) => `${tofixed_1.toFixed(Math.max(digit - 2, 0), n * const_1.Hundred)}%`;\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/math/to-percent.ts?");

/***/ }),

/***/ "./src/slimming/math/tofixed.ts":
/*!**************************************!*\
  !*** ./src/slimming/math/tofixed.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nexports.toFixed = ramda_1.curry((digit, a) => (a < 0 ? -1 : 1) * Math.round(Math.abs(a) * Math.pow(10, digit)) / Math.pow(10, digit));\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/math/tofixed.ts?");

/***/ }),

/***/ "./src/slimming/math/vector.ts":
/*!*************************************!*\
  !*** ./src/slimming/math/vector.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n// 2d 向量\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst HALF_CIRC = 180;\r\nconst ACCURACY = 1e6;\r\nclass Vector {\r\n    constructor(x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    // 获取未修正的向量长度\r\n    get _modulo() {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y);\r\n    }\r\n    // 获取向量长度\r\n    get modulo() {\r\n        return Vector.Rounding(Math.sqrt(this.x * this.x + this.y * this.y));\r\n    }\r\n    set modulo(m) {\r\n        this.normalize();\r\n        this.x *= m;\r\n        this.y *= m;\r\n    }\r\n    rotate(arc) {\r\n        const _x = this.x;\r\n        const _y = this.y;\r\n        this.x = _x * Math.cos(arc) - _y * Math.sin(arc);\r\n        this.y = _x * Math.sin(arc) + _y * Math.cos(arc);\r\n        return this;\r\n    }\r\n    // value 直接返回长度\r\n    valueOf() {\r\n        return this.modulo;\r\n    }\r\n    // 返回字符串形式\r\n    toString() {\r\n        return `[${this.x},${this.y}]`;\r\n    }\r\n    // 转为单位向量\r\n    normalize() {\r\n        const modulo = this._modulo;\r\n        if (modulo !== 0) {\r\n            this.x /= modulo;\r\n            this.y /= modulo;\r\n        }\r\n        else {\r\n            throw new Error('零向量无法标准化！');\r\n        }\r\n        return this;\r\n    }\r\n    // 转为零向量\r\n    zero() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        return this;\r\n    }\r\n    // 与另一个向量相加\r\n    add(v) {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        return this;\r\n    }\r\n    // 与另一个向量相减\r\n    substract(v) {\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n        return this;\r\n    }\r\n    multiplied(n) {\r\n        if (typeof n === 'number') {\r\n            this.x *= n;\r\n            this.y *= n;\r\n            return this;\r\n        }\r\n        else {\r\n            return this.x * n.x + this.y * n.y;\r\n        }\r\n    }\r\n    // 计算两个向量的夹角 - 弧度\r\n    radian(v) {\r\n        return Vector.radian(this, v);\r\n    }\r\n    // 计算两个向量的夹角 - 角度\r\n    angel(v) {\r\n        return Vector.angel(this, v);\r\n    }\r\n    // 自己是不是零向量\r\n    get isZero() {\r\n        return this.x === 0 && this.y === 0;\r\n    }\r\n    // 自己是不是单位向量\r\n    get isNormalize() {\r\n        return this.modulo === 1;\r\n    }\r\n    // 两个向量相加\r\n    static add(v1, v2) {\r\n        return new Vector(v1.x + v2.x, v1.y + v2.y);\r\n    }\r\n    // 两个向量相减\r\n    static substract(v1, v2) {\r\n        return new Vector(v1.x - v2.x, v1.y - v2.y);\r\n    }\r\n    // 两个向量相乘\r\n    static multiplied(v1, n) {\r\n        if (typeof n === 'number') {\r\n            return new Vector(v1.x * n, v1.y * n);\r\n        }\r\n        else {\r\n            return v1.x * n.x + v1.y * n.y;\r\n        }\r\n    }\r\n    // 两个向量的夹角 - 弧度\r\n    static radian(v1, v2) {\r\n        if (v1.isZero || v2.isZero) {\r\n            return NaN;\r\n        }\r\n        return Math.acos(Vector.multiplied(v1, v2) / v1._modulo / v2._modulo);\r\n    }\r\n    // 两个向量的夹角 - 角度\r\n    static angel(v1, v2) {\r\n        if (v1.isZero || v2.isZero) {\r\n            return NaN;\r\n        }\r\n        return Vector.Rounding(HALF_CIRC * Vector.radian(v1, v2) / Math.PI);\r\n    }\r\n    // v1 到 v2 的投影分量\r\n    static projected(v1, v2) {\r\n        if (v1.isZero || v2.isZero) {\r\n            return new Vector(0, 0);\r\n        }\r\n        return Vector.multiplied(v2, Vector.multiplied(v1, v2) / Math.pow(v2._modulo, 2));\r\n    }\r\n    // v1 到 v2 的垂直分量\r\n    static plumb(v1, v2) {\r\n        if (v1.isZero) {\r\n            return new Vector(0, 0);\r\n        }\r\n        if (v2.isZero) {\r\n            return new Vector(v1.x, v1.y);\r\n        }\r\n        return Vector.substract(v1, Vector.projected(v1, v2));\r\n    }\r\n    // 取模，对小数点后6位进行取整，修正双精度浮点数导致无法正常标准化的\r\n    static Rounding(n) {\r\n        return Math.round(n * ACCURACY) / ACCURACY;\r\n    }\r\n    // 求距离\r\n    static distance(v1, v2) {\r\n        return Vector.substract(v1, v2).modulo;\r\n    }\r\n}\r\nexports.Vector = Vector;\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/math/vector.ts?");

/***/ }),

/***/ "./src/slimming/matrix/combine.ts":
/*!****************************************!*\
  !*** ./src/slimming/matrix/combine.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst const_1 = __webpack_require__(/*! ../const */ \"./src/slimming/const/index.ts\");\r\nconst matrix_1 = __webpack_require__(/*! ./matrix */ \"./src/slimming/matrix/matrix.ts\");\r\nconst shorten_1 = __webpack_require__(/*! ./shorten */ \"./src/slimming/matrix/shorten.ts\");\r\nexports.combineMatrix = (operate, digit1 = const_1.DEFAULT_MATRIX_DIGIT, digit2 = const_1.DEFAULT_SIZE_DIGIT, digit3 = const_1.DEFAULT_ACCURATE_DIGIT) => {\r\n    let matrix = new matrix_1.Matrix();\r\n    for (const item of operate) {\r\n        switch (item.type) {\r\n            case 'translate':\r\n                matrix = matrix.translate(item.val[0], item.val[1]);\r\n                break;\r\n            case 'rotate':\r\n                if (item.val.length === 3) {\r\n                    matrix = matrix.translate(item.val[1], item.val[2]);\r\n                    matrix = matrix.rotate(item.val[0]);\r\n                    matrix = matrix.translate(-item.val[1], -item.val[2]);\r\n                }\r\n                else {\r\n                    matrix = matrix.rotate(item.val[0]);\r\n                }\r\n                break;\r\n            case 'scale':\r\n                matrix = matrix.scale(item.val[0], ...item.val.slice(1));\r\n                break;\r\n            case 'skewX':\r\n                matrix = matrix.skewX(item.val[0]);\r\n                break;\r\n            case 'skewY':\r\n                matrix = matrix.skewY(item.val[0]);\r\n                break;\r\n            default:\r\n                matrix = matrix.multiply(new matrix_1.Matrix(...item.val));\r\n                break;\r\n        }\r\n    }\r\n    return shorten_1.shorten({\r\n        type: 'matrix',\r\n        val: [matrix.a, matrix.b, matrix.c, matrix.d, matrix.e, matrix.f],\r\n    }, digit1, digit2, digit3);\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/matrix/combine.ts?");

/***/ }),

/***/ "./src/slimming/matrix/exec.ts":
/*!*************************************!*\
  !*** ./src/slimming/matrix/exec.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst exec_numberlist_1 = __webpack_require__(/*! ../utils/exec-numberlist */ \"./src/slimming/utils/exec-numberlist.ts\");\r\nconst syntax_1 = __webpack_require__(/*! ../const/syntax */ \"./src/slimming/const/syntax.ts\");\r\nconst matrixSingle = `(translate|scale|rotate|skewX|skewY|matrix)\\\\s*\\\\(\\\\s*(${syntax_1.numberPattern}(?:${syntax_1.commaWsp}${syntax_1.numberPattern})*)\\\\s*\\\\)`;\r\nconst matrixReg = new RegExp(matrixSingle, 'gm');\r\nconst matrixFullReg = new RegExp(`^${matrixSingle}(?:${syntax_1.commaWsp}${matrixSingle})*$`, 'm');\r\nconst matrixValLen = 6;\r\nexports.execMatrix = (str) => {\r\n    const result = [];\r\n    // 首先全字匹配完整的字符串，不匹配的直接退出\r\n    if (matrixFullReg.test(str.trim())) {\r\n        // 重置正则匹配位置\r\n        matrixReg.lastIndex = 0;\r\n        let match = matrixReg.exec(str);\r\n        while (match !== null) {\r\n            const val = exec_numberlist_1.execNumberList(match[2]);\r\n            // 验证参数的个数是否合法，不合法的直接退出\r\n            if (match[1] === 'translate' || match[1] === 'scale') {\r\n                if (val.length > 2) {\r\n                    return [];\r\n                }\r\n            }\r\n            else if (match[1] === 'matrix') {\r\n                if (val.length !== matrixValLen) {\r\n                    return [];\r\n                }\r\n            }\r\n            else if (match[1] === 'rotate') {\r\n                if (val.length !== 1 && val.length !== 3) {\r\n                    return [];\r\n                }\r\n            }\r\n            else {\r\n                if (val.length !== 1) {\r\n                    return [];\r\n                }\r\n            }\r\n            result.push({\r\n                type: match[1],\r\n                val,\r\n            });\r\n            match = matrixReg.exec(str);\r\n        }\r\n    }\r\n    return result;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/matrix/exec.ts?");

/***/ }),

/***/ "./src/slimming/matrix/matrix.ts":
/*!***************************************!*\
  !*** ./src/slimming/matrix/matrix.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst HALF_CIRC = 180;\r\nclass Matrix {\r\n    constructor(a = 1, b = 0, c = 0, d = 1, e = 0, f = 0) {\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.e = e;\r\n        this.f = f;\r\n    }\r\n    translate(x, y) {\r\n        return this.multiply(new Matrix(1, 0, 0, 1, x, y));\r\n    }\r\n    rotate(corner) {\r\n        const arg = corner * Math.PI / HALF_CIRC;\r\n        return this.multiply(new Matrix(Math.cos(arg), Math.sin(arg), -Math.sin(arg), Math.cos(arg), 0, 0));\r\n    }\r\n    scale(xscale, yscale = null) {\r\n        return this.multiply(new Matrix(xscale, 0, 0, yscale === null ? xscale : yscale, 0, 0));\r\n    }\r\n    skewX(corner) {\r\n        const skew = corner * Math.PI / HALF_CIRC;\r\n        return this.multiply(new Matrix(1, 0, Math.tan(skew), 1, 0, 0));\r\n    }\r\n    skewY(corner) {\r\n        const skew = corner * Math.PI / HALF_CIRC;\r\n        return this.multiply(new Matrix(1, Math.tan(skew), 0, 1, 0, 0));\r\n    }\r\n    multiply(m) {\r\n        const a = this.a * m.a + this.c * m.b;\r\n        const b = this.b * m.a + this.d * m.b;\r\n        const c = this.a * m.c + this.c * m.d;\r\n        const d = this.b * m.c + this.d * m.d;\r\n        const e = this.a * m.e + this.c * m.f + this.e;\r\n        const f = this.b * m.e + this.d * m.f + this.f;\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.e = e;\r\n        this.f = f;\r\n        return this;\r\n    }\r\n}\r\nexports.Matrix = Matrix;\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/matrix/matrix.ts?");

/***/ }),

/***/ "./src/slimming/matrix/merge.ts":
/*!**************************************!*\
  !*** ./src/slimming/matrix/merge.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst const_1 = __webpack_require__(/*! ../const */ \"./src/slimming/const/index.ts\");\r\nconst combine_1 = __webpack_require__(/*! ./combine */ \"./src/slimming/matrix/combine.ts\");\r\nconst shorten_1 = __webpack_require__(/*! ./shorten */ \"./src/slimming/matrix/shorten.ts\");\r\nexports.merge = (func1, func2, digit1 = const_1.DEFAULT_MATRIX_DIGIT, digit2 = const_1.DEFAULT_SIZE_DIGIT, digit3 = const_1.DEFAULT_ACCURATE_DIGIT) => {\r\n    let resFunc = {\r\n        type: func1.type,\r\n        val: [],\r\n    };\r\n    switch (func1.type) {\r\n        case 'translate':\r\n            if (func1.val.length === 1) {\r\n                func1.val[1] = 0;\r\n            }\r\n            if (func2.val.length === 1) {\r\n                func2.val[1] = 0;\r\n            }\r\n            resFunc.val = [func1.val[0] + func2.val[0], func1.val[1] + func2.val[1]];\r\n            break;\r\n        case 'scale':\r\n            if (func1.val.length === 1) {\r\n                func1.val[1] = func1.val[0];\r\n            }\r\n            if (func2.val.length === 1) {\r\n                func2.val[1] = func2.val[0];\r\n            }\r\n            resFunc.val = [func1.val[0] * func2.val[0], func1.val[1] * func2.val[1]];\r\n            break;\r\n        case 'rotate':\r\n            if (func1.val.length === 1 && func2.val.length === 1) {\r\n                resFunc.val[0] = func1.val[0] + func2.val[0];\r\n            }\r\n            else if (func1.val[1] === func2.val[1] && func1.val[2] === func2.val[2]) {\r\n                resFunc.val = [func1.val[0] + func2.val[0], func1.val[1], func1.val[2]];\r\n            }\r\n            else {\r\n                resFunc = combine_1.combineMatrix([func1, func2], digit1, digit2, digit3);\r\n            }\r\n            break;\r\n        case 'skewX':\r\n        case 'skewY':\r\n            resFunc = combine_1.combineMatrix([func1, func2], digit1, digit2, digit3);\r\n            break;\r\n        default:\r\n            return combine_1.combineMatrix([func1, func2], digit1, digit2, digit3);\r\n    }\r\n    return shorten_1.shorten(resFunc, digit1, digit2, digit3);\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/matrix/merge.ts?");

/***/ }),

/***/ "./src/slimming/matrix/shorten.ts":
/*!****************************************!*\
  !*** ./src/slimming/matrix/shorten.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst const_1 = __webpack_require__(/*! ../const */ \"./src/slimming/const/index.ts\");\r\nconst tofixed_1 = __webpack_require__(/*! ../math/tofixed */ \"./src/slimming/math/tofixed.ts\");\r\nconst simplify_1 = __webpack_require__(/*! ./simplify */ \"./src/slimming/matrix/simplify.ts\");\r\n// 降低 transform 函数的参数精度，移除冗余参数，并对无效函数打上标记\r\nexports.shorten = (m, digit1 = const_1.DEFAULT_MATRIX_DIGIT, digit2 = const_1.DEFAULT_SIZE_DIGIT, digit3 = const_1.DEFAULT_ACCURATE_DIGIT) => {\r\n    const res = {\r\n        type: m.type,\r\n        val: [],\r\n    };\r\n    switch (m.type) {\r\n        case 'translate':\r\n            m.val.forEach((v, i) => {\r\n                res.val[i] = tofixed_1.toFixed(digit2, v);\r\n            });\r\n            if (res.val[1] === 0) {\r\n                res.val.length = 1;\r\n            }\r\n            if (res.val[0] === 0) {\r\n                res.val[0] = 0;\r\n                if (res.val.length === 1) {\r\n                    res.noEffect = true;\r\n                }\r\n            }\r\n            break;\r\n        case 'scale':\r\n            m.val.forEach((v, i) => {\r\n                res.val[i] = tofixed_1.toFixed(digit1, v);\r\n            });\r\n            if (res.val[0] === res.val[1]) {\r\n                res.val.length = 1;\r\n            }\r\n            if (res.val[0] === 1 && res.val.length === 1) {\r\n                res.noEffect = true;\r\n            }\r\n            break;\r\n        case 'rotate':\r\n            res.val[0] = tofixed_1.toFixed(digit3, m.val[0]);\r\n            if (res.val[0] === 0) {\r\n                res.val[0] = 0;\r\n                res.noEffect = true;\r\n            }\r\n            if (m.val.length === 3) {\r\n                res.val[1] = tofixed_1.toFixed(digit2, m.val[1]);\r\n                res.val[2] = tofixed_1.toFixed(digit2, m.val[2]);\r\n                if (res.val[1] === 0 && res.val[2] === 0) {\r\n                    res.val.length = 1;\r\n                }\r\n            }\r\n            break;\r\n        case 'skewX':\r\n        case 'skewY':\r\n            res.val[0] = tofixed_1.toFixed(digit3, m.val[0]);\r\n            if (res.val[0] === 0) {\r\n                res.val[0] = 0;\r\n                res.noEffect = true;\r\n            }\r\n            break;\r\n        default:\r\n            const _res = simplify_1.simplify(m, digit1, digit2);\r\n            if (_res.type === 'matrix') {\r\n                _res.val.forEach((v, i) => {\r\n                    res.val[i] = tofixed_1.toFixed((i < const_1.matrixEPos) ? digit1 : digit2, v);\r\n                });\r\n                break;\r\n            }\r\n            else {\r\n                return exports.shorten(_res, digit1, digit2, digit3);\r\n            }\r\n    }\r\n    return res;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/matrix/shorten.ts?");

/***/ }),

/***/ "./src/slimming/matrix/simplify.ts":
/*!*****************************************!*\
  !*** ./src/slimming/matrix/simplify.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tofixed_1 = __webpack_require__(/*! ../math/tofixed */ \"./src/slimming/math/tofixed.ts\");\r\nconst const_1 = __webpack_require__(/*! ../const */ \"./src/slimming/const/index.ts\");\r\nconst aPos = 0;\r\nconst bPos = 1;\r\nconst cPos = 2;\r\nconst dPos = 3;\r\nconst ePos = 4;\r\nconst fPos = 5;\r\n// 把 matrix 函数反转为简单函数\r\nexports.simplify = (matrix, digit1, digit2) => {\r\n    const mVal = matrix.val.map((v, i) => tofixed_1.toFixed((i < const_1.matrixEPos) ? digit1 : digit2, v)).join(',');\r\n    const fixed1 = tofixed_1.toFixed(digit1);\r\n    const fixed2 = tofixed_1.toFixed(digit2);\r\n    if (/^1,0,0,1/.test(mVal)) {\r\n        return {\r\n            type: 'translate',\r\n            val: fixed2(matrix.val[fPos]) === 0 ? [matrix.val[ePos]] : [matrix.val[ePos], matrix.val[fPos]],\r\n        };\r\n    }\r\n    if (/^[^,]+,0,0,[^,]+,0,0/.test(mVal)) {\r\n        return {\r\n            type: 'scale',\r\n            val: fixed1(matrix.val[aPos]) === fixed1(matrix.val[dPos]) ? [matrix.val[aPos]] : [matrix.val[aPos], matrix.val[dPos]],\r\n        };\r\n    }\r\n    if (/^1,0,[^,]+,1,0,0/.test(mVal)) {\r\n        let corner = (Math.atan(matrix.val[cPos]) * const_1.HALF_CIRC / Math.PI + const_1.CIRC) % const_1.CIRC;\r\n        if (corner > const_1.CIRC - 10) {\r\n            corner -= const_1.CIRC;\r\n        }\r\n        return {\r\n            type: 'skewX',\r\n            val: [corner],\r\n        };\r\n    }\r\n    if (/^1,[^,]+,0,1,0,0/.test(mVal)) {\r\n        let corner = (Math.atan(matrix.val[bPos]) * const_1.HALF_CIRC / Math.PI + const_1.CIRC) % const_1.CIRC;\r\n        if (corner > const_1.CIRC - 10) {\r\n            corner -= const_1.CIRC;\r\n        }\r\n        return {\r\n            type: 'skewY',\r\n            val: [corner],\r\n        };\r\n    }\r\n    if (fixed1(matrix.val[aPos]) === fixed1(matrix.val[dPos])\r\n        &&\r\n            fixed1(matrix.val[bPos]) === -fixed1(matrix.val[cPos])\r\n        &&\r\n            fixed1(Math.pow(matrix.val[aPos], 2) + Math.pow(matrix.val[bPos], 2)) === 1) {\r\n        let arc;\r\n        if (matrix.val[aPos] >= 0) {\r\n            arc = Math.asin(matrix.val[bPos]);\r\n        }\r\n        else {\r\n            if (matrix.val[bPos] >= 0) {\r\n                arc = Math.acos(matrix.val[aPos]);\r\n            }\r\n            else {\r\n                arc = -Math.acos(matrix.val[aPos]);\r\n            }\r\n        }\r\n        let corner = (arc * const_1.HALF_CIRC / Math.PI + const_1.CIRC) % const_1.CIRC;\r\n        if (corner > const_1.CIRC - 10) {\r\n            corner -= const_1.CIRC;\r\n        }\r\n        // [1,0,0,1,x,y].[a,b,c,d,0,0].[1,0,0,1,-x,-y] = [a,b,c,d,e,f]，根据该公式反解\r\n        const cx = (matrix.val[ePos] * (1 - matrix.val[aPos]) - matrix.val[bPos] * matrix.val[fPos]) / (2 - matrix.val[aPos] * 2);\r\n        const cy = (cx * matrix.val[bPos] + matrix.val[fPos]) / (1 - matrix.val[dPos]);\r\n        return {\r\n            type: 'rotate',\r\n            val: [corner, cx, cy],\r\n        };\r\n    }\r\n    return matrix;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/matrix/simplify.ts?");

/***/ }),

/***/ "./src/slimming/matrix/stringify.ts":
/*!******************************************!*\
  !*** ./src/slimming/matrix/stringify.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst const_1 = __webpack_require__(/*! ../const */ \"./src/slimming/const/index.ts\");\r\nconst stringify_funcval_1 = __webpack_require__(/*! ../utils/stringify-funcval */ \"./src/slimming/utils/stringify-funcval.ts\");\r\nconst shorten_1 = __webpack_require__(/*! ./shorten */ \"./src/slimming/matrix/shorten.ts\");\r\nexports.stringify = (m, digit1 = const_1.DEFAULT_MATRIX_DIGIT, digit2 = const_1.DEFAULT_SIZE_DIGIT, digit3 = const_1.DEFAULT_ACCURATE_DIGIT) => {\r\n    let result = '';\r\n    m.forEach((v, i) => {\r\n        const _v = shorten_1.shorten(v, digit1, digit2, digit3);\r\n        if (!_v.noEffect) {\r\n            result += `${_v.type}(${stringify_funcval_1.stringifyFuncVal(_v.val)})`;\r\n        }\r\n    });\r\n    return result;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/matrix/stringify.ts?");

/***/ }),

/***/ "./src/slimming/path/check-sub-paths.ts":
/*!**********************************************!*\
  !*** ./src/slimming/path/check-sub-paths.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// tslint:disable:no-require-imports\r\nconst contours = __webpack_require__(/*! svg-path-contours */ \"svg-path-contours\");\r\nconst triangle = __webpack_require__(/*! triangulate-contours */ \"triangulate-contours\");\r\nconst combine_1 = __webpack_require__(/*! ./combine */ \"./src/slimming/path/combine.ts\");\r\nconst complex_1 = __webpack_require__(/*! ./complex */ \"./src/slimming/path/complex.ts\");\r\nconst translate_1 = __webpack_require__(/*! ./translate */ \"./src/slimming/path/translate.ts\");\r\n// 当前子路径中除了起始点和自己之外，还有其它任意指令\r\nconst hasBrother = (subPath, index) => {\r\n    return index > 1 || index < subPath.length - 1;\r\n};\r\n// 移除 0 长度的平移指令，规则是没有 stroke-cap 或具有兄弟，反之可以转为 z 指令\r\nconst checkHV = (subPath, index, hasStrokeCap) => {\r\n    if (!hasStrokeCap || hasBrother(subPath, index)) {\r\n        subPath.splice(index, 1);\r\n    }\r\n    else {\r\n        subPath[index].type = 'z';\r\n    }\r\n};\r\n// 如果控制点位于起始点和终点的连线中间位置，则 q 指令可以转 l 指令\r\nconst checkQ = (pathItem, subPath, index, hasStrokeCap) => {\r\n    // 简单指令转复杂指令\r\n    const complexItem = complex_1.complex(pathItem, subPath[index - 1]);\r\n    const relVal = translate_1.getRel(complexItem);\r\n    const sameLine = (relVal[0] * relVal[3] === relVal[1] * relVal[2]) && (relVal[0] * (relVal[2] - relVal[0]) >= 0);\r\n    if (sameLine) {\r\n        if (relVal.every(s => s === 0)) {\r\n            // 控制点及指令的相对值全部为 0 ，可以视情况移除或转 z 指令\r\n            if (!hasStrokeCap || hasBrother(subPath, index)) {\r\n                subPath.splice(index, 1);\r\n            }\r\n            else {\r\n                pathItem.type = 'z';\r\n            }\r\n            return;\r\n        }\r\n        // 如果前后都不是 q/t 节点，则可以转直线指令\r\n        if (subPath[index - 1].type.toLowerCase() !== 'q' && subPath[index - 1].type.toLowerCase() !== 't' && (index === subPath.length - 1 || subPath[index + 1].type.toLowerCase() !== 't')) {\r\n            pathItem.type = complexItem.type === 'q' ? 'l' : 'L';\r\n            pathItem.val = complexItem.val.slice(2);\r\n        }\r\n    }\r\n};\r\n// 如果控制点位于起始点和终点的连线中间位置，则 c 指令可以转 l 指令\r\nconst checkC = (pathItem, subPath, index, hasStrokeCap) => {\r\n    const complexItem = complex_1.complex(pathItem, subPath[index - 1]);\r\n    const relVal = translate_1.getRel(complexItem);\r\n    const sameLine = (relVal[0] * relVal[5] === relVal[1] * relVal[4])\r\n        && (relVal[0] * (relVal[4] - relVal[0]) >= 0)\r\n        && (relVal[2] * relVal[5] === relVal[3] * relVal[4])\r\n        && (relVal[2] * (relVal[4] - relVal[2]) >= 0);\r\n    if (sameLine) {\r\n        if (relVal.every(s => s === 0)) {\r\n            // 控制点及指令的相对值全部为 0 ，可以视情况移除或转 z 指令\r\n            if (!hasStrokeCap || hasBrother(subPath, index)) {\r\n                subPath.splice(index, 1);\r\n            }\r\n            else {\r\n                pathItem.type = 'z';\r\n            }\r\n            return;\r\n        }\r\n        // 可以直接转直线指令\r\n        pathItem.type = complexItem.type === 'c' ? 'l' : 'L';\r\n        pathItem.val = complexItem.val.slice(4);\r\n    }\r\n};\r\nexports.checkSubPath = (pathResult, hasStroke, hasStrokeCap, sizeDigit, angelDigit) => {\r\n    const result = [];\r\n    // 首先过一遍子路径，移除所有的空节点\r\n    pathResult.forEach(subPath => {\r\n        for (let j = subPath.length; j--;) {\r\n            const pathItem = subPath[j];\r\n            switch (pathItem.type) {\r\n                case 'm':\r\n                    // 所有子路径起始位置改为绝对坐标\r\n                    pathItem.type = 'M';\r\n                    pathItem.val[0] += subPath[0].from[0];\r\n                    pathItem.val[1] += subPath[0].from[1];\r\n                    break;\r\n                case 'z':\r\n                    // 没有 cap，可以移除紧跟 m 指令的 z 指令\r\n                    if (!hasStrokeCap && subPath[j - 1].type.toLowerCase() === 'm') {\r\n                        subPath.splice(j, 1);\r\n                    }\r\n                    break;\r\n                // 移除长度为 0 的直线指令\r\n                case 'h':\r\n                case 'v':\r\n                    if (pathItem.val[0] === 0) {\r\n                        checkHV(subPath, j, hasStrokeCap);\r\n                    }\r\n                    break;\r\n                case 't':\r\n                case 'T':\r\n                    // 移除 0 长度指令，曲线转直线\r\n                    checkQ(pathItem, subPath, j, hasStrokeCap);\r\n                    break;\r\n                case 'q':\r\n                case 'Q':\r\n                    // 移除 0 长度指令，曲线转直线\r\n                    checkQ(pathItem, subPath, j, hasStrokeCap);\r\n                    break;\r\n                case 's':\r\n                case 'S':\r\n                    // 移除 0 长度指令，曲线转直线\r\n                    checkC(pathItem, subPath, j, hasStrokeCap);\r\n                    break;\r\n                case 'c':\r\n                case 'C':\r\n                    // 移除 0 长度指令，曲线转直线\r\n                    checkC(pathItem, subPath, j, hasStrokeCap);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    });\r\n    for (let i = pathResult.length; i--;) {\r\n        const subPath = pathResult[i];\r\n        // 没有 stroke 直接移除空的子路径\r\n        if (!hasStroke) {\r\n            // triangle 存在 badcase，可能导致崩溃，所以必须 try\r\n            try {\r\n                const shapes = triangle(contours(subPath.map(item => [item.type, ...item.val])));\r\n                if (!shapes.cells.length) {\r\n                    continue;\r\n                }\r\n            }\r\n            catch (e) { }\r\n        }\r\n        // 同向路径合并\r\n        for (let j = subPath.length; j--;) {\r\n            const pathItem = subPath[j];\r\n            switch (pathItem.type.toLowerCase()) {\r\n                case 'h':\r\n                case 'v':\r\n                    combine_1.combineHV(subPath, pathItem, j);\r\n                    break;\r\n                case 'l':\r\n                    combine_1.combineL(subPath, pathItem, j, angelDigit);\r\n                    break;\r\n                case 'a':\r\n                    combine_1.combineA(subPath, pathItem, j, angelDigit);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        // 如果没有 marker，则空的 m 指令没有意义 https://www.w3.org/TR/SVG/paths.html#ZeroLengthSegments\r\n        // 直接移除子路径即可，因为所有子路径起始点已经改为绝对地址，所以不会有副作用\r\n        if (subPath.length > 1) {\r\n            result.unshift(subPath);\r\n        }\r\n    }\r\n    return result;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/check-sub-paths.ts?");

/***/ }),

/***/ "./src/slimming/path/combine.ts":
/*!**************************************!*\
  !*** ./src/slimming/path/combine.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst const_1 = __webpack_require__(/*! ../const */ \"./src/slimming/const/index.ts\");\r\nconst plus_1 = __webpack_require__(/*! ../math/plus */ \"./src/slimming/math/plus.ts\");\r\nconst tofixed_1 = __webpack_require__(/*! ../math/tofixed */ \"./src/slimming/math/tofixed.ts\");\r\nconst vector_1 = __webpack_require__(/*! ../math/vector */ \"./src/slimming/math/vector.ts\");\r\nconst translate_1 = __webpack_require__(/*! ./translate */ \"./src/slimming/path/translate.ts\");\r\nexports.combineHV = (subPath, pathItem, index) => {\r\n    const relVal = translate_1.getRelHV(pathItem);\r\n    // 如果前一个函数也是水平/垂直移动，判断是否可以合并\r\n    // 判断的依据是：相对值的积为正数（即同向移动）\r\n    if (subPath[index - 1].type.toLowerCase() === pathItem.type.toLowerCase()) {\r\n        const lastItem = subPath[index - 1];\r\n        if (translate_1.getRelHV(lastItem) * relVal >= 0) {\r\n            // 合并时直接转绝对坐标\r\n            lastItem.val[0] = translate_1.getAbsHV(pathItem);\r\n            lastItem.type = lastItem.type.toUpperCase();\r\n            subPath.splice(index, 1);\r\n        }\r\n    }\r\n};\r\n// 同方向的直线直接合并\r\nexports.combineL = (subPath, pathItem, index, digit) => {\r\n    const fixed = tofixed_1.toFixed(digit);\r\n    if (subPath[index - 1].type.toLowerCase() === 'l') {\r\n        const lastItem = subPath[index - 1];\r\n        const relVal = translate_1.getRel(pathItem);\r\n        const lastRelVal = translate_1.getRel(lastItem);\r\n        if (fixed(Math.atan2(lastRelVal[0], lastRelVal[1])) === fixed(Math.atan2(relVal[0], relVal[1]))) {\r\n            lastItem.val = [plus_1.plus(lastItem.val[0], relVal[0]), plus_1.plus(lastItem.val[1], relVal[1])];\r\n            lastItem.type = 'l';\r\n            subPath.splice(index, 1);\r\n        }\r\n    }\r\n};\r\nconst getCenter = (pathItem, digit) => {\r\n    const rotation = pathItem.val[const_1.APOS_ROTATION];\r\n    const rx = pathItem.val[const_1.APOS_RX];\r\n    const ry = pathItem.val[const_1.APOS_RY];\r\n    const ccw = pathItem.val[const_1.APOS_LARGE] === pathItem.val[const_1.APOS_SWEEP];\r\n    const abs = translate_1.getAbs({\r\n        type: pathItem.type,\r\n        val: pathItem.val.slice(const_1.APOS_X),\r\n        from: pathItem.from,\r\n    });\r\n    const v1 = new vector_1.Vector(pathItem.from[0], pathItem.from[1]);\r\n    const v2 = new vector_1.Vector(abs[0], abs[1]);\r\n    // 先旋转一下\r\n    if (rotation) {\r\n        v1.rotate(-rotation * Math.PI * 2 / const_1.CIRC);\r\n        v2.rotate(-rotation * Math.PI * 2 / const_1.CIRC);\r\n    }\r\n    // 从椭圆变成正圆\r\n    if (rx !== ry) {\r\n        v1.y *= rx / ry;\r\n        v2.y *= rx / ry;\r\n    }\r\n    // 获取起点到终点的向量\r\n    const v = new vector_1.Vector(v2.x - v1.x, v2.y - v1.y);\r\n    // r 不一定是够长，需要扩大到指定的大小 https://www.w3.org/TR/SVG/paths.html#ArcOutOfRangeParameters\r\n    let r = rx;\r\n    if (r < v.modulo / 2) {\r\n        r = v.modulo / 2;\r\n    }\r\n    // 向量长度为另一条直角边\r\n    v.modulo = Math.sqrt(r * r - Math.pow(v.modulo / 2, 2));\r\n    // 根据方向选择 90 度\r\n    const arc = ccw ? -Math.PI / 2 : Math.PI / 2;\r\n    v.rotate(arc);\r\n    // 把起始点挪到线段中心\r\n    v.x += (v1.x + v2.x) / 2;\r\n    v.y += (v1.y + v2.y) / 2;\r\n    if (rx !== ry) {\r\n        v.y *= ry / rx;\r\n    }\r\n    if (rotation) {\r\n        v.rotate(rotation * Math.PI * 2 / const_1.CIRC);\r\n    }\r\n    return [tofixed_1.toFixed(digit, v.x), tofixed_1.toFixed(digit, v.y)];\r\n};\r\nexports.combineA = (subPath, pathItem, index, digit) => {\r\n    const lastItem = subPath[index - 1];\r\n    if (lastItem.type.toLowerCase() === 'a') {\r\n        // rx ry 转角 旋转方向相等，并且圆心重合，才能进行合并\r\n        const _eqProps = (prop) => ramda_1.eqProps(`${prop}`, lastItem.val, pathItem.val);\r\n        if (ramda_1.all(_eqProps, [const_1.APOS_RX, const_1.APOS_RY, const_1.APOS_ROTATION, const_1.APOS_SWEEP])) {\r\n            const center = getCenter(pathItem, digit);\r\n            const lastCenter = getCenter(lastItem, digit);\r\n            // equals 存在 0 !== -0 的问题\r\n            if (center[0] === lastCenter[0] && center[1] === lastCenter[1]) {\r\n                // 前一个指令的起始弧线\r\n                const vbase = new vector_1.Vector(lastItem.from[0] - center[0], lastItem.from[1] - center[1]);\r\n                const lastAbs = translate_1.getAbs({\r\n                    type: lastItem.type,\r\n                    val: lastItem.val.slice(const_1.APOS_X),\r\n                    from: lastItem.from,\r\n                });\r\n                const v1 = new vector_1.Vector(lastAbs[0] - center[0], lastAbs[1] - center[1]);\r\n                const abs = translate_1.getAbs({\r\n                    type: pathItem.type,\r\n                    val: pathItem.val.slice(const_1.APOS_X),\r\n                    from: pathItem.from,\r\n                });\r\n                const v2 = new vector_1.Vector(abs[0] - center[0], abs[1] - center[1]);\r\n                let radian1 = vector_1.Vector.radian(vbase, v1);\r\n                if (lastItem.val[const_1.APOS_LARGE] === 1) {\r\n                    radian1 = Math.PI * 2 - radian1;\r\n                }\r\n                let radian2 = vector_1.Vector.radian(v1, v2);\r\n                if (pathItem.val[const_1.APOS_LARGE] === 1) {\r\n                    radian2 = Math.PI * 2 - radian2;\r\n                }\r\n                // 大于等于 360 度不能合并，等于 360 度会造成 a 指令被忽略\r\n                if (radian1 + radian2 >= Math.PI * 2) {\r\n                    return;\r\n                }\r\n                // 下面是进行合并的算法\r\n                // 首先判断是否要改为大转角\r\n                if (radian1 + radian2 > Math.PI && lastItem.val[const_1.APOS_LARGE] === 0) {\r\n                    lastItem.val[const_1.APOS_LARGE] = 1;\r\n                }\r\n                // 直接强制改为绝对坐标\r\n                lastItem.type = 'A';\r\n                lastItem.val[const_1.APOS_X] = abs[0];\r\n                lastItem.val[const_1.APOS_Y] = abs[1];\r\n                // 移除当前节点\r\n                subPath.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n    return;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/combine.ts?");

/***/ }),

/***/ "./src/slimming/path/complex.ts":
/*!**************************************!*\
  !*** ./src/slimming/path/complex.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst symmetry_1 = __webpack_require__(/*! ../math/symmetry */ \"./src/slimming/math/symmetry.ts\");\r\nconst plus_1 = __webpack_require__(/*! ../math/plus */ \"./src/slimming/math/plus.ts\");\r\nconst minus_1 = __webpack_require__(/*! ../math/minus */ \"./src/slimming/math/minus.ts\");\r\n// 把简单路径指令转回复杂指令\r\nexports.complex = (item, lastItem) => {\r\n    const complexItem = {\r\n        type: item.type,\r\n        from: item.from.slice(),\r\n        val: item.val.slice(),\r\n    };\r\n    if (item.type.toLowerCase() === 's') {\r\n        let [x, y] = item.from;\r\n        if (lastItem.type === 'C') {\r\n            x = symmetry_1.symmetry(lastItem.val[2], item.from[0]);\r\n            y = symmetry_1.symmetry(lastItem.val[3], item.from[1]);\r\n        }\r\n        else if (lastItem.type === 'c') {\r\n            x = symmetry_1.symmetry(plus_1.plus(lastItem.val[2], lastItem.from[0]), item.from[0]);\r\n            y = symmetry_1.symmetry(plus_1.plus(lastItem.val[3], lastItem.from[1]), item.from[1]);\r\n        }\r\n        if (item.type === 'S') {\r\n            complexItem.type = 'C';\r\n            complexItem.val.unshift(x, y);\r\n        }\r\n        else {\r\n            complexItem.type = 'c';\r\n            complexItem.val.unshift(minus_1.minus(x, item.from[0]), minus_1.minus(y, item.from[1]));\r\n        }\r\n    }\r\n    else if (item.type.toLowerCase() === 't') {\r\n        let [x, y] = item.from;\r\n        if (lastItem.type === 'Q') {\r\n            x = symmetry_1.symmetry(lastItem.val[0], item.from[0]);\r\n            y = symmetry_1.symmetry(lastItem.val[1], item.from[1]);\r\n        }\r\n        else if (lastItem.type === 'q') {\r\n            x = symmetry_1.symmetry(plus_1.plus(lastItem.val[0], lastItem.from[0]), item.from[0]);\r\n            y = symmetry_1.symmetry(plus_1.plus(lastItem.val[1], lastItem.from[1]), item.from[1]);\r\n        }\r\n        if (item.type === 'T') {\r\n            complexItem.type = 'Q';\r\n            complexItem.val.unshift(x, y);\r\n        }\r\n        else {\r\n            complexItem.type = 'q';\r\n            complexItem.val.unshift(minus_1.minus(x, item.from[0]), minus_1.minus(y, item.from[1]));\r\n        }\r\n    }\r\n    return complexItem;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/complex.ts?");

/***/ }),

/***/ "./src/slimming/path/compute-a.ts":
/*!****************************************!*\
  !*** ./src/slimming/path/compute-a.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst const_1 = __webpack_require__(/*! ../const */ \"./src/slimming/const/index.ts\");\r\nconst number_length_1 = __webpack_require__(/*! ../utils/number-length */ \"./src/slimming/utils/number-length.ts\");\r\nconst compute_l_1 = __webpack_require__(/*! ./compute-l */ \"./src/slimming/path/compute-l.ts\");\r\nexports.computeA = (absolute, relative, pathResult, pos) => {\r\n    // https://www.w3.org/TR/SVG/paths.html#ArcOutOfRangeParameters\r\n    // 起始点和目标点重合，或者有一个半径为 0，可以转直线指令\r\n    if ((absolute[const_1.APOS_X] === pos[0] && absolute[const_1.APOS_Y] === pos[1]) || absolute[const_1.APOS_RX] === 0 || absolute[const_1.APOS_RY] === 0) {\r\n        return compute_l_1.computeL([absolute[const_1.APOS_X], absolute[const_1.APOS_Y]], [relative[const_1.APOS_X], relative[const_1.APOS_Y]], pathResult, pos);\r\n    }\r\n    // 负数半径取绝对值\r\n    if (absolute[const_1.APOS_RX] < 0) {\r\n        absolute[const_1.APOS_RX] = Math.abs(absolute[const_1.APOS_RX]);\r\n    }\r\n    if (absolute[const_1.APOS_RY] < 0) {\r\n        absolute[const_1.APOS_RY] = Math.abs(absolute[const_1.APOS_RY]);\r\n    }\r\n    const rLen = pathResult.length;\r\n    const relLen = number_length_1.numberLength(relative);\r\n    const absLen = number_length_1.numberLength(absolute);\r\n    if (relLen === absLen) { // 如果相等则参照前一个指令\r\n        if (pathResult[rLen - 1].type === 'A') {\r\n            pathResult.push({\r\n                type: 'A',\r\n                from: pos.slice(),\r\n                val: absolute,\r\n            });\r\n        }\r\n        else {\r\n            pathResult.push({\r\n                type: 'a',\r\n                from: pos.slice(),\r\n                val: relative,\r\n            });\r\n        }\r\n    }\r\n    else if (relLen < absLen) {\r\n        pathResult.push({\r\n            type: 'a',\r\n            from: pos.slice(),\r\n            val: relative,\r\n        });\r\n    }\r\n    else {\r\n        pathResult.push({\r\n            type: 'A',\r\n            from: pos.slice(),\r\n            val: absolute,\r\n        });\r\n    }\r\n    return [absolute[const_1.APOS_X], absolute[const_1.APOS_Y]];\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/compute-a.ts?");

/***/ }),

/***/ "./src/slimming/path/compute-c.ts":
/*!****************************************!*\
  !*** ./src/slimming/path/compute-c.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst plus_1 = __webpack_require__(/*! ../math/plus */ \"./src/slimming/math/plus.ts\");\r\nconst number_length_1 = __webpack_require__(/*! ../utils/number-length */ \"./src/slimming/utils/number-length.ts\");\r\nconst compute_s_1 = __webpack_require__(/*! ./compute-s */ \"./src/slimming/path/compute-s.ts\");\r\nconst match_control_1 = __webpack_require__(/*! ./match-control */ \"./src/slimming/path/match-control.ts\");\r\nconst canTransformS = (pathResult, ctrlX, ctrlY, from) => {\r\n    const lastItem = pathResult[pathResult.length - 1];\r\n    const type = lastItem.type;\r\n    switch (type) {\r\n        case 'C':\r\n            return match_control_1.matchControl(lastItem.val[2], lastItem.val[3], from[0], from[1], ctrlX, ctrlY);\r\n        case 'c':\r\n            return match_control_1.matchControl(plus_1.plus(lastItem.val[2], lastItem.from[0]), plus_1.plus(lastItem.val[3], lastItem.from[1]), from[0], from[1], ctrlX, ctrlY);\r\n        case 'S':\r\n            return match_control_1.matchControl(lastItem.val[0], lastItem.val[1], from[0], from[1], ctrlX, ctrlY);\r\n        case 's':\r\n            return match_control_1.matchControl(plus_1.plus(lastItem.val[0], lastItem.from[0]), plus_1.plus(lastItem.val[1], lastItem.from[1]), from[0], from[1], ctrlX, ctrlY);\r\n        default:\r\n            // 前置不是 c/s 指令，则可以根据控制点和 from 是否重合来决定是否可以转为 s\r\n            return ctrlX === from[0] && ctrlY === from[1];\r\n    }\r\n};\r\nexports.computeC = (absolute, relative, pathResult, pos) => {\r\n    if (canTransformS(pathResult, absolute[0], absolute[1], pos)) {\r\n        return compute_s_1.computeS(absolute.slice(2), relative.slice(2), pathResult, pos);\r\n    }\r\n    else {\r\n        // 普通情况\r\n        const relLen = number_length_1.numberLength(relative);\r\n        const absLen = number_length_1.numberLength(absolute);\r\n        if (relLen === absLen) { // 如果相等则参照前一个指令\r\n            if (pathResult[pathResult.length - 1].type === 'C') {\r\n                pathResult.push({\r\n                    type: 'C',\r\n                    from: pos.slice(),\r\n                    val: absolute.slice(),\r\n                });\r\n            }\r\n            else {\r\n                pathResult.push({\r\n                    type: 'c',\r\n                    from: pos.slice(),\r\n                    val: relative.slice(),\r\n                });\r\n            }\r\n        }\r\n        else if (relLen < absLen) {\r\n            pathResult.push({\r\n                type: 'c',\r\n                from: pos.slice(),\r\n                val: relative.slice(),\r\n            });\r\n        }\r\n        else {\r\n            pathResult.push({\r\n                type: 'C',\r\n                from: pos.slice(),\r\n                val: absolute.slice(),\r\n            });\r\n        }\r\n        return [absolute[4], absolute[5]];\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/compute-c.ts?");

/***/ }),

/***/ "./src/slimming/path/compute-h.ts":
/*!****************************************!*\
  !*** ./src/slimming/path/compute-h.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst number_length_1 = __webpack_require__(/*! ../utils/number-length */ \"./src/slimming/utils/number-length.ts\");\r\nexports.computeH = (absolute, relative, pathResult, pos) => {\r\n    const relLen = number_length_1.numberLength([relative]);\r\n    const absLen = number_length_1.numberLength([absolute]);\r\n    if (relLen === absLen) { // 如果相等则参照前一个指令\r\n        if (pathResult[pathResult.length - 1].type === 'H') {\r\n            pathResult.push({\r\n                type: 'H',\r\n                from: pos.slice(),\r\n                val: [absolute],\r\n            });\r\n        }\r\n        else {\r\n            pathResult.push({\r\n                type: 'h',\r\n                from: pos.slice(),\r\n                val: [relative],\r\n            });\r\n        }\r\n    }\r\n    else if (relLen < absLen) {\r\n        pathResult.push({\r\n            type: 'h',\r\n            from: pos.slice(),\r\n            val: [relative],\r\n        });\r\n    }\r\n    else {\r\n        pathResult.push({\r\n            type: 'H',\r\n            from: pos.slice(),\r\n            val: [absolute],\r\n        });\r\n    }\r\n    return [absolute, pos[1]];\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/compute-h.ts?");

/***/ }),

/***/ "./src/slimming/path/compute-l.ts":
/*!****************************************!*\
  !*** ./src/slimming/path/compute-l.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst number_length_1 = __webpack_require__(/*! ../utils/number-length */ \"./src/slimming/utils/number-length.ts\");\r\nconst compute_h_1 = __webpack_require__(/*! ./compute-h */ \"./src/slimming/path/compute-h.ts\");\r\nconst compute_v_1 = __webpack_require__(/*! ./compute-v */ \"./src/slimming/path/compute-v.ts\");\r\nexports.computeL = (absolute, relative, pathResult, pos) => {\r\n    // 需要转为水平或垂直的情况\r\n    // 注意，0 长度的线段不能省略，它可能也是有意义的 @by wangfeng-pd @v1.5.0\r\n    // https://www.w3.org/TR/SVG/paths.html#ZeroLengthSegments\r\n    if (relative[1] === 0) {\r\n        return compute_h_1.computeH(absolute[0], relative[0], pathResult, pos);\r\n    }\r\n    else if (relative[0] === 0) {\r\n        return compute_v_1.computeV(absolute[1], relative[1], pathResult, pos);\r\n    }\r\n    // 普通情况\r\n    const relLen = number_length_1.numberLength(relative);\r\n    const absLen = number_length_1.numberLength(absolute);\r\n    if (relLen === absLen) { // 如果相等则参照前一个指令\r\n        if (pathResult[pathResult.length - 1].type === 'L') {\r\n            pathResult.push({\r\n                type: 'L',\r\n                from: pos.slice(),\r\n                val: absolute.slice(),\r\n            });\r\n        }\r\n        else {\r\n            pathResult.push({\r\n                type: 'l',\r\n                from: pos.slice(),\r\n                val: relative.slice(),\r\n            });\r\n        }\r\n    }\r\n    else if (relLen < absLen) {\r\n        pathResult.push({\r\n            type: 'l',\r\n            from: pos.slice(),\r\n            val: relative.slice(),\r\n        });\r\n    }\r\n    else {\r\n        pathResult.push({\r\n            type: 'L',\r\n            from: pos.slice(),\r\n            val: absolute.slice(),\r\n        });\r\n    }\r\n    return absolute.slice();\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/compute-l.ts?");

/***/ }),

/***/ "./src/slimming/path/compute-m.ts":
/*!****************************************!*\
  !*** ./src/slimming/path/compute-m.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst number_length_1 = __webpack_require__(/*! ../utils/number-length */ \"./src/slimming/utils/number-length.ts\");\r\nexports.computeM = (absolute, relative, pathResult, pos) => {\r\n    if (ramda_1.lt(number_length_1.numberLength(absolute), number_length_1.numberLength(relative))) {\r\n        pathResult.push({\r\n            type: 'M',\r\n            from: pos.slice(),\r\n            val: absolute.slice(),\r\n        });\r\n    }\r\n    else {\r\n        pathResult.push({\r\n            type: 'm',\r\n            from: pos.slice(),\r\n            val: relative.slice(),\r\n        });\r\n    }\r\n    return absolute.slice();\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/compute-m.ts?");

/***/ }),

/***/ "./src/slimming/path/compute-q.ts":
/*!****************************************!*\
  !*** ./src/slimming/path/compute-q.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst plus_1 = __webpack_require__(/*! ../math/plus */ \"./src/slimming/math/plus.ts\");\r\nconst number_length_1 = __webpack_require__(/*! ../utils/number-length */ \"./src/slimming/utils/number-length.ts\");\r\nconst compute_t_1 = __webpack_require__(/*! ./compute-t */ \"./src/slimming/path/compute-t.ts\");\r\nconst match_control_1 = __webpack_require__(/*! ./match-control */ \"./src/slimming/path/match-control.ts\");\r\nconst canTransformT = (pathResult, ctrlX, ctrlY, from) => {\r\n    const lastItem = pathResult[pathResult.length - 1];\r\n    const type = lastItem.type;\r\n    switch (type) {\r\n        case 'Q':\r\n            return match_control_1.matchControl(lastItem.val[0], lastItem.val[1], from[0], from[1], ctrlX, ctrlY);\r\n        case 'q':\r\n            return match_control_1.matchControl(plus_1.plus(lastItem.val[0], lastItem.from[0]), plus_1.plus(lastItem.val[1], lastItem.from[1]), from[0], from[1], ctrlX, ctrlY);\r\n        case 'T':\r\n        case 't':\r\n            return match_control_1.matchControl(lastItem.from[2], lastItem.from[3], from[0], from[1], ctrlX, ctrlY);\r\n        default:\r\n            // 前置不是 q/t 指令，则可以根据控制点和 from 是否重合来决定是否可以转为 t\r\n            return ramda_1.equals([ctrlX, ctrlY], from);\r\n    }\r\n};\r\nexports.computeQ = (absolute, relative, pathResult, pos) => {\r\n    if (canTransformT(pathResult, absolute[0], absolute[1], pos)) {\r\n        return compute_t_1.computeT(absolute.slice(2), relative.slice(2), pathResult, pos);\r\n    }\r\n    else {\r\n        // 普通情况\r\n        const relLen = number_length_1.numberLength(relative);\r\n        const absLen = number_length_1.numberLength(absolute);\r\n        if (relLen === absLen) { // 如果相等则参照前一个指令\r\n            if (pathResult[pathResult.length - 1].type === 'Q') {\r\n                pathResult.push({\r\n                    type: 'Q',\r\n                    from: pos.slice(),\r\n                    val: absolute.slice(),\r\n                });\r\n            }\r\n            else {\r\n                pathResult.push({\r\n                    type: 'q',\r\n                    from: pos.slice(),\r\n                    val: relative.slice(),\r\n                });\r\n            }\r\n        }\r\n        else if (relLen < absLen) {\r\n            pathResult.push({\r\n                type: 'q',\r\n                from: pos.slice(),\r\n                val: relative.slice(),\r\n            });\r\n        }\r\n        else {\r\n            pathResult.push({\r\n                type: 'Q',\r\n                from: pos.slice(),\r\n                val: absolute.slice(),\r\n            });\r\n        }\r\n        return [absolute[2], absolute[3]];\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/compute-q.ts?");

/***/ }),

/***/ "./src/slimming/path/compute-s.ts":
/*!****************************************!*\
  !*** ./src/slimming/path/compute-s.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst number_length_1 = __webpack_require__(/*! ../utils/number-length */ \"./src/slimming/utils/number-length.ts\");\r\nexports.SPOS_X2 = 0;\r\nexports.SPOS_Y2 = 1;\r\nexports.SPOS_X = 2;\r\nexports.SPOS_Y = 3;\r\nexports.computeS = (absolute, relative, pathResult, pos) => {\r\n    const relLen = number_length_1.numberLength(relative);\r\n    const absLen = number_length_1.numberLength(absolute);\r\n    if (relLen === absLen) { // 如果相等则参照前一个指令\r\n        if (pathResult[pathResult.length - 1].type === 'S') {\r\n            pathResult.push({\r\n                type: 'S',\r\n                from: pos.slice(),\r\n                val: absolute.slice(),\r\n            });\r\n        }\r\n        else {\r\n            pathResult.push({\r\n                type: 's',\r\n                from: pos.slice(),\r\n                val: relative.slice(),\r\n            });\r\n        }\r\n    }\r\n    else if (relLen < absLen) {\r\n        pathResult.push({\r\n            type: 's',\r\n            from: pos.slice(),\r\n            val: relative.slice(),\r\n        });\r\n    }\r\n    else {\r\n        pathResult.push({\r\n            type: 'S',\r\n            from: pos.slice(),\r\n            val: absolute.slice(),\r\n        });\r\n    }\r\n    return [absolute[exports.SPOS_X], absolute[exports.SPOS_Y]];\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/compute-s.ts?");

/***/ }),

/***/ "./src/slimming/path/compute-t.ts":
/*!****************************************!*\
  !*** ./src/slimming/path/compute-t.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst plus_1 = __webpack_require__(/*! ../math/plus */ \"./src/slimming/math/plus.ts\");\r\nconst symmetry_1 = __webpack_require__(/*! ../math/symmetry */ \"./src/slimming/math/symmetry.ts\");\r\nconst number_length_1 = __webpack_require__(/*! ../utils/number-length */ \"./src/slimming/utils/number-length.ts\");\r\nexports.computeT = (absolute, relative, pathResult, pos) => {\r\n    // t 类型的 from 会存储 4 个值，前 2 个为前一个指令的 absolute，后 2 个存储本指令未记录的控制点的绝对坐标\r\n    const from = pos.slice();\r\n    const lastItem = pathResult[pathResult.length - 1];\r\n    switch (lastItem.type) {\r\n        case 'T':\r\n        case 't':\r\n            from.push(symmetry_1.symmetry(lastItem.from[2], from[0]), symmetry_1.symmetry(lastItem.from[3], from[1]));\r\n            break;\r\n        case 'Q':\r\n            from.push(symmetry_1.symmetry(lastItem.val[0], from[0]), symmetry_1.symmetry(lastItem.val[1], from[1]));\r\n            break;\r\n        case 'q':\r\n            from.push(symmetry_1.symmetry(plus_1.plus(lastItem.val[0], lastItem.from[0]), from[0]), symmetry_1.symmetry(plus_1.plus(lastItem.val[1], lastItem.from[1]), from[1]));\r\n            break;\r\n        default:\r\n            // 前置不是 q/t 指令，则控制点与 from 相同\r\n            from.push(from[0], from[1]);\r\n            break;\r\n    }\r\n    const relLen = number_length_1.numberLength(relative);\r\n    const absLen = number_length_1.numberLength(absolute);\r\n    if (relLen === absLen) { // 如果相等则参照前一个指令\r\n        if (pathResult[pathResult.length - 1].type === 'T') {\r\n            pathResult.push({\r\n                type: 'T',\r\n                from,\r\n                val: absolute.slice(),\r\n            });\r\n        }\r\n        else {\r\n            pathResult.push({\r\n                type: 't',\r\n                from,\r\n                val: relative.slice(),\r\n            });\r\n        }\r\n    }\r\n    else if (relLen < absLen) {\r\n        pathResult.push({\r\n            type: 't',\r\n            from,\r\n            val: relative.slice(),\r\n        });\r\n    }\r\n    else {\r\n        pathResult.push({\r\n            type: 'T',\r\n            from,\r\n            val: absolute.slice(),\r\n        });\r\n    }\r\n    return absolute.slice();\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/compute-t.ts?");

/***/ }),

/***/ "./src/slimming/path/compute-v.ts":
/*!****************************************!*\
  !*** ./src/slimming/path/compute-v.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst number_length_1 = __webpack_require__(/*! ../utils/number-length */ \"./src/slimming/utils/number-length.ts\");\r\nexports.computeV = (absolute, relative, pathResult, pos) => {\r\n    const relLen = number_length_1.numberLength([relative]);\r\n    const absLen = number_length_1.numberLength([absolute]);\r\n    if (relLen === absLen) { // 如果相等则参照前一个指令\r\n        if (pathResult[pathResult.length - 1].type === 'V') {\r\n            pathResult.push({\r\n                type: 'V',\r\n                from: pos.slice(),\r\n                val: [absolute],\r\n            });\r\n        }\r\n        else {\r\n            pathResult.push({\r\n                type: 'v',\r\n                from: pos.slice(),\r\n                val: [relative],\r\n            });\r\n        }\r\n    }\r\n    else if (relLen < absLen) {\r\n        pathResult.push({\r\n            type: 'v',\r\n            from: pos.slice(),\r\n            val: [relative],\r\n        });\r\n    }\r\n    else {\r\n        pathResult.push({\r\n            type: 'V',\r\n            from: pos.slice(),\r\n            val: [absolute],\r\n        });\r\n    }\r\n    return [pos[0], absolute];\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/compute-v.ts?");

/***/ }),

/***/ "./src/slimming/path/compute-z.ts":
/*!****************************************!*\
  !*** ./src/slimming/path/compute-z.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst plus_1 = __webpack_require__(/*! ../math/plus */ \"./src/slimming/math/plus.ts\");\r\nexports.computeZ = (pathResult, pos) => {\r\n    const rLen = pathResult.length;\r\n    const lastItem = pathResult[rLen - 1];\r\n    // 如果 z 指令紧跟着 z 指令，直接抛弃\r\n    if (lastItem.type.toLowerCase() === 'z') {\r\n        return pos;\r\n    }\r\n    const zpos = (pathResult[0].type === 'm') ? [plus_1.plus(pathResult[0].val[0], pathResult[0].from[0]), plus_1.plus(pathResult[0].val[1], pathResult[0].from[1])] : [pathResult[0].val[0], pathResult[0].val[1]];\r\n    pathResult.push({\r\n        type: 'z',\r\n        from: pos.slice(),\r\n        val: [],\r\n    });\r\n    return zpos;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/compute-z.ts?");

/***/ }),

/***/ "./src/slimming/path/do-compute.ts":
/*!*****************************************!*\
  !*** ./src/slimming/path/do-compute.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst const_1 = __webpack_require__(/*! ../const */ \"./src/slimming/const/index.ts\");\r\nconst minus_1 = __webpack_require__(/*! ../math/minus */ \"./src/slimming/math/minus.ts\");\r\nconst plus_1 = __webpack_require__(/*! ../math/plus */ \"./src/slimming/math/plus.ts\");\r\nconst compute_a_1 = __webpack_require__(/*! ./compute-a */ \"./src/slimming/path/compute-a.ts\");\r\nconst compute_c_1 = __webpack_require__(/*! ./compute-c */ \"./src/slimming/path/compute-c.ts\");\r\nconst compute_h_1 = __webpack_require__(/*! ./compute-h */ \"./src/slimming/path/compute-h.ts\");\r\nconst compute_l_1 = __webpack_require__(/*! ./compute-l */ \"./src/slimming/path/compute-l.ts\");\r\nconst compute_m_1 = __webpack_require__(/*! ./compute-m */ \"./src/slimming/path/compute-m.ts\");\r\nconst compute_q_1 = __webpack_require__(/*! ./compute-q */ \"./src/slimming/path/compute-q.ts\");\r\nconst compute_s_1 = __webpack_require__(/*! ./compute-s */ \"./src/slimming/path/compute-s.ts\");\r\nconst compute_t_1 = __webpack_require__(/*! ./compute-t */ \"./src/slimming/path/compute-t.ts\");\r\nconst compute_v_1 = __webpack_require__(/*! ./compute-v */ \"./src/slimming/path/compute-v.ts\");\r\nconst compute_z_1 = __webpack_require__(/*! ./compute-z */ \"./src/slimming/path/compute-z.ts\");\r\nconst translate_1 = __webpack_require__(/*! ./translate */ \"./src/slimming/path/translate.ts\");\r\nconst cArgLen = 6;\r\nconst sArgLen = 4;\r\nconst qArgLen = 4;\r\nexports.doCompute = (pathArr) => {\r\n    const result = [];\r\n    let pos = [0, 0];\r\n    // tslint:disable-next-line:cyclomatic-complexity\r\n    for (const subPath of pathArr) {\r\n        const pathResult = [];\r\n        for (const pathItem of subPath) {\r\n            switch (pathItem.type) {\r\n                // 平移 - 绝对\r\n                case 'M':\r\n                    // 当移动指令超过 2 个时，后续指令按平移处理 - fixed@v1.4.2\r\n                    for (let i = 0, l = pathItem.val.length; i < l; i += 2) {\r\n                        const handler = (i === 0) ? compute_m_1.computeM : compute_l_1.computeL;\r\n                        pos = handler([pathItem.val[i], pathItem.val[i + 1]], translate_1.abs2rel([pathItem.val[i], pathItem.val[i + 1]], pos), pathResult, pos);\r\n                    }\r\n                    break;\r\n                // 平移 - 相对\r\n                case 'm':\r\n                    // 当移动指令超过 2 个时，后续指令按平移处理 - fixed@v1.4.2\r\n                    for (let i = 0, l = pathItem.val.length; i < l; i += 2) {\r\n                        const handler = (i === 0) ? compute_m_1.computeM : compute_l_1.computeL;\r\n                        pos = handler(translate_1.rel2abs([pathItem.val[i], pathItem.val[i + 1]], pos), [pathItem.val[i], pathItem.val[i + 1]], pathResult, pos);\r\n                    }\r\n                    break;\r\n                // 水平直线 - 绝对\r\n                case 'H':\r\n                    for (let i = 0, l = pathItem.val.length; i < l; i++) {\r\n                        pos = compute_h_1.computeH(pathItem.val[i], minus_1.minus(pathItem.val[i], pos[0]), pathResult, pos);\r\n                    }\r\n                    break;\r\n                // 水平直线 - 相对\r\n                case 'h':\r\n                    for (let i = 0, l = pathItem.val.length; i < l; i++) {\r\n                        pos = compute_h_1.computeH(plus_1.plus(pathItem.val[i], pos[0]), pathItem.val[i], pathResult, pos);\r\n                    }\r\n                    break;\r\n                // 垂直直线 - 绝对\r\n                case 'V':\r\n                    for (let i = 0, l = pathItem.val.length; i < l; i++) {\r\n                        pos = compute_v_1.computeV(pathItem.val[i], minus_1.minus(pathItem.val[i], pos[1]), pathResult, pos);\r\n                    }\r\n                    break;\r\n                // 垂直直线 - 相对\r\n                case 'v':\r\n                    for (let i = 0, l = pathItem.val.length; i < l; i++) {\r\n                        pos = compute_v_1.computeV(plus_1.plus(pathItem.val[i], pos[1]), pathItem.val[i], pathResult, pos);\r\n                    }\r\n                    break;\r\n                // 直线 - 绝对\r\n                case 'L':\r\n                    for (let i = 0, l = pathItem.val.length; i < l; i += 2) {\r\n                        pos = compute_l_1.computeL([pathItem.val[i], pathItem.val[i + 1]], translate_1.abs2rel([pathItem.val[i], pathItem.val[i + 1]], pos), pathResult, pos);\r\n                    }\r\n                    break;\r\n                // 直线 - 相对\r\n                case 'l':\r\n                    for (let i = 0, l = pathItem.val.length; i < l; i += 2) {\r\n                        pos = compute_l_1.computeL(translate_1.rel2abs([pathItem.val[i], pathItem.val[i + 1]], pos), [pathItem.val[i], pathItem.val[i + 1]], pathResult, pos);\r\n                    }\r\n                    break;\r\n                // 三次贝塞尔曲线 - 绝对\r\n                case 'C':\r\n                    for (let i = 0, l = pathItem.val.length; i < l; i += cArgLen) {\r\n                        const CArgs = pathItem.val.slice(i, i + cArgLen);\r\n                        pos = compute_c_1.computeC(CArgs, translate_1.abs2rel(CArgs, pos), pathResult, pos);\r\n                    }\r\n                    break;\r\n                // 三次贝塞尔曲线 - 相对\r\n                case 'c':\r\n                    for (let i = 0, l = pathItem.val.length; i < l; i += cArgLen) {\r\n                        const cArgs = pathItem.val.slice(i, i + cArgLen);\r\n                        pos = compute_c_1.computeC(translate_1.rel2abs(cArgs, pos), cArgs, pathResult, pos);\r\n                    }\r\n                    break;\r\n                // 三次连续贝塞尔曲线 - 绝对\r\n                case 'S':\r\n                    for (let i = 0, l = pathItem.val.length; i < l; i += sArgLen) {\r\n                        const SArgs = pathItem.val.slice(i, i + sArgLen);\r\n                        pos = compute_s_1.computeS(SArgs, translate_1.abs2rel(SArgs, pos), pathResult, pos);\r\n                    }\r\n                    break;\r\n                // 三次连续贝塞尔曲线 - 相对\r\n                case 's':\r\n                    for (let i = 0, l = pathItem.val.length; i < l; i += sArgLen) {\r\n                        const sArgs = pathItem.val.slice(i, i + sArgLen);\r\n                        pos = compute_s_1.computeS(translate_1.rel2abs(sArgs, pos), sArgs, pathResult, pos);\r\n                    }\r\n                    break;\r\n                // 二次贝塞尔曲线 - 绝对\r\n                case 'Q':\r\n                    for (let i = 0, l = pathItem.val.length; i < l; i += qArgLen) {\r\n                        const QArgs = pathItem.val.slice(i, i + qArgLen);\r\n                        pos = compute_q_1.computeQ(QArgs, translate_1.abs2rel(QArgs, pos), pathResult, pos);\r\n                    }\r\n                    break;\r\n                // 二次贝塞尔曲线 - 相对\r\n                case 'q':\r\n                    for (let i = 0, l = pathItem.val.length; i < l; i += qArgLen) {\r\n                        const qArgs = pathItem.val.slice(i, i + qArgLen);\r\n                        pos = compute_q_1.computeQ(translate_1.rel2abs(qArgs, pos), qArgs, pathResult, pos);\r\n                    }\r\n                    break;\r\n                // 二次连续贝塞尔曲线 - 绝对\r\n                case 'T':\r\n                    for (let i = 0, l = pathItem.val.length; i < l; i += 2) {\r\n                        const TArgs = pathItem.val.slice(i, i + 2);\r\n                        pos = compute_t_1.computeT(TArgs, translate_1.abs2rel(TArgs, pos), pathResult, pos);\r\n                    }\r\n                    break;\r\n                // 二次连续贝塞尔曲线 - 相对\r\n                case 't':\r\n                    for (let i = 0, l = pathItem.val.length; i < l; i += 2) {\r\n                        const tArgs = pathItem.val.slice(i, i + 2);\r\n                        pos = compute_t_1.computeT(translate_1.rel2abs(tArgs, pos), tArgs, pathResult, pos);\r\n                    }\r\n                    break;\r\n                // 圆弧 - 绝对\r\n                case 'A':\r\n                    for (let i = 0, l = pathItem.val.length; i < l; i += const_1.APOS_LEN) {\r\n                        const AArgs = pathItem.val.slice(i, i + const_1.APOS_LEN);\r\n                        pos = compute_a_1.computeA(AArgs, AArgs.slice(0, const_1.APOS_X).concat(translate_1.abs2rel(AArgs.slice(const_1.APOS_X), pos)), pathResult, pos);\r\n                    }\r\n                    break;\r\n                // 圆弧 - 相对\r\n                case 'a':\r\n                    for (let i = 0, l = pathItem.val.length; i < l; i += const_1.APOS_LEN) {\r\n                        const aArgs = pathItem.val.slice(i, i + const_1.APOS_LEN);\r\n                        pos = compute_a_1.computeA(aArgs.slice(0, const_1.APOS_X).concat(translate_1.rel2abs(aArgs.slice(const_1.APOS_X), pos)), aArgs, pathResult, pos);\r\n                    }\r\n                    break;\r\n                default:\r\n                    pos = compute_z_1.computeZ(pathResult, pos);\r\n                    break;\r\n            }\r\n        }\r\n        if (pathResult.length) {\r\n            result.push(pathResult);\r\n        }\r\n    }\r\n    return result;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/do-compute.ts?");

/***/ }),

/***/ "./src/slimming/path/exec-arc.ts":
/*!***************************************!*\
  !*** ./src/slimming/path/exec-arc.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst syntax_1 = __webpack_require__(/*! ../const/syntax */ \"./src/slimming/const/syntax.ts\");\r\nconst FLAG_POS1 = 3;\r\nconst FLAG_POS2 = 4;\r\nconst LOOP_LEN = 7;\r\nexports.execArc = (s) => {\r\n    const result = [];\r\n    // 重要！含有 g 修饰符的正则表达式 exec 时要先重置！\r\n    syntax_1.numberGlobal.lastIndex = 0;\r\n    let matches = syntax_1.numberGlobal.exec(s);\r\n    let pos = 0;\r\n    while (matches) {\r\n        if (pos % LOOP_LEN === FLAG_POS1 || pos % LOOP_LEN === FLAG_POS2) {\r\n            if (matches[0][0] === '0' || matches[0][0] === '1') {\r\n                result.push(+matches[0][0]);\r\n                matches[0] = matches[0].slice(1);\r\n                if (matches[0].length) {\r\n                    pos++;\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            result.push(+matches[0]);\r\n        }\r\n        pos++;\r\n        matches = syntax_1.numberGlobal.exec(s);\r\n    }\r\n    return result;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/exec-arc.ts?");

/***/ }),

/***/ "./src/slimming/path/exec.ts":
/*!***********************************!*\
  !*** ./src/slimming/path/exec.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst const_1 = __webpack_require__(/*! ../const */ \"./src/slimming/const/index.ts\");\r\nconst syntax_1 = __webpack_require__(/*! ../const/syntax */ \"./src/slimming/const/syntax.ts\");\r\nconst exec_numberlist_1 = __webpack_require__(/*! ../utils/exec-numberlist */ \"./src/slimming/utils/exec-numberlist.ts\");\r\nconst exec_arc_1 = __webpack_require__(/*! ./exec-arc */ \"./src/slimming/path/exec-arc.ts\");\r\nconst pathReg = new RegExp(`([mzlhvcsqta])\\\\s*((?:${syntax_1.numberSequence})?)(.*?)(?=[mzlhvcsqta]|$)`, 'gim');\r\nexports.execPath = (str) => {\r\n    const result = [];\r\n    let temp = [];\r\n    // 重置正则匹配位置\r\n    pathReg.lastIndex = 0;\r\n    let match = pathReg.exec(str);\r\n    outer: while (match !== null) {\r\n        // 所有路径必须从 mM 开始\r\n        const type = match[1].toLowerCase();\r\n        if (!temp.length && type !== 'm') {\r\n            return result;\r\n        }\r\n        let val = [];\r\n        if (match[2]) {\r\n            val = type === 'a' ? exec_arc_1.execArc(match[2]) : exec_numberlist_1.execNumberList(match[2]);\r\n        }\r\n        switch (type) {\r\n            // 平移的参数必须为偶数\r\n            case 'm':\r\n                result.push(temp);\r\n                temp = [];\r\n                if (val.length % 2 !== 0) {\r\n                    if (val.length > 2) {\r\n                        temp.push({\r\n                            type: match[1],\r\n                            val: val.slice(0, val.length - 1),\r\n                        });\r\n                    }\r\n                    break outer;\r\n                }\r\n                break;\r\n            case 'l':\r\n            case 't':\r\n                // l 和 t 的参数必须为偶数\r\n                if (val.length % 2 !== 0) {\r\n                    if (val.length > 2) {\r\n                        temp.push({\r\n                            type: match[1],\r\n                            val: val.slice(0, val.length - 1),\r\n                        });\r\n                    }\r\n                    break outer;\r\n                }\r\n                break;\r\n            case 'z':\r\n                // z 不允许有参数\r\n                if (val.length) {\r\n                    temp.push({\r\n                        type: match[1],\r\n                        val: [],\r\n                    });\r\n                    break outer;\r\n                }\r\n                break;\r\n            case 's':\r\n            case 'q':\r\n                // s 和 q 的参数必须是 4 的整倍数\r\n                if (val.length % 4 !== 0) {\r\n                    if (val.length > 4) {\r\n                        temp.push({\r\n                            type: match[1],\r\n                            val: val.slice(0, val.length - val.length % 4),\r\n                        });\r\n                    }\r\n                    break outer;\r\n                }\r\n                break;\r\n            case 'c':\r\n                // c 的参数必须是 6 的整倍数\r\n                if (val.length % 6 !== 0) {\r\n                    if (val.length > 6) {\r\n                        temp.push({\r\n                            type: match[1],\r\n                            val: val.slice(0, val.length - val.length % 6),\r\n                        });\r\n                    }\r\n                    break outer;\r\n                }\r\n                break;\r\n            case 'a':\r\n                // a 的参数第 3、4 位必须是 0 或 1\r\n                const _val = [];\r\n                val.every((v, i) => {\r\n                    if ((i % const_1.APOS_LEN === const_1.APOS_LARGE || i % const_1.APOS_LEN === const_1.APOS_SWEEP) && v !== 0 && v !== 1) {\r\n                        return false;\r\n                    }\r\n                    _val.push(v);\r\n                    return true;\r\n                });\r\n                // a 的参数必须是 7 的整倍数\r\n                if (_val.length % const_1.APOS_LEN !== 0) {\r\n                    if (_val.length > const_1.APOS_LEN) {\r\n                        temp.push({\r\n                            type: match[1],\r\n                            val: _val.slice(0, _val.length - _val.length % const_1.APOS_LEN),\r\n                        });\r\n                    }\r\n                    break outer;\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        // 只有 z 指令不能没有参数\r\n        if (type !== 'z' && !val.length) {\r\n            break outer;\r\n        }\r\n        temp.push({\r\n            type: match[1],\r\n            val,\r\n        });\r\n        if (match[3] && !/^\\s*,?\\s*$/.test(match[3])) {\r\n            break;\r\n        }\r\n        match = pathReg.exec(str);\r\n    }\r\n    result.push(temp);\r\n    return result;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/exec.ts?");

/***/ }),

/***/ "./src/slimming/path/match-control.ts":
/*!********************************************!*\
  !*** ./src/slimming/path/match-control.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n// 匹配贝塞尔曲线的控制点\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst symmetry_1 = __webpack_require__(/*! ../math/symmetry */ \"./src/slimming/math/symmetry.ts\");\r\nexports.matchControl = (ctrl1X, ctrl1Y, centerX, centerY, ctrl2X, ctrl2Y) => symmetry_1.symmetry(ctrl1X, centerX) === ctrl2X && symmetry_1.symmetry(ctrl1Y, centerY) === ctrl2Y;\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/match-control.ts?");

/***/ }),

/***/ "./src/slimming/path/shorten-digit.ts":
/*!********************************************!*\
  !*** ./src/slimming/path/shorten-digit.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tofixed_1 = __webpack_require__(/*! ../math/tofixed */ \"./src/slimming/math/tofixed.ts\");\r\nconst const_1 = __webpack_require__(/*! ../const */ \"./src/slimming/const/index.ts\");\r\nexports.shortenDigit = (pathItem, digit1, digit2) => {\r\n    if (pathItem.type.toLowerCase() === 'a') {\r\n        return pathItem.val.map((val, index) => {\r\n            const i = index % const_1.APOS_LEN;\r\n            switch (i) {\r\n                case const_1.APOS_RX:\r\n                case const_1.APOS_RY:\r\n                case const_1.APOS_X:\r\n                case const_1.APOS_Y:\r\n                    return tofixed_1.toFixed(digit1, val);\r\n                case const_1.APOS_ROTATION:\r\n                    return tofixed_1.toFixed(digit2, val);\r\n                default:\r\n                    return val;\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        return pathItem.val.map(val => tofixed_1.toFixed(digit1, val));\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/shorten-digit.ts?");

/***/ }),

/***/ "./src/slimming/path/straighten.ts":
/*!*****************************************!*\
  !*** ./src/slimming/path/straighten.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vector_1 = __webpack_require__(/*! ../math/vector */ \"./src/slimming/math/vector.ts\");\r\nconst complex_1 = __webpack_require__(/*! ./complex */ \"./src/slimming/path/complex.ts\");\r\nconst minus_1 = __webpack_require__(/*! ../math/minus */ \"./src/slimming/math/minus.ts\");\r\n// 曲线指令转直线指令\r\nexports.straighten = (threshold, pathArr) => {\r\n    // 必须逆序执行\r\n    outer: for (let pi = pathArr.length; pi--;) {\r\n        const pathItem = pathArr[pi];\r\n        if (pathItem.type.toLowerCase() === 'a') {\r\n            let [x, y] = [pathItem.val[5], pathItem.val[6]];\r\n            if (pathItem.type === 'A') {\r\n                x = minus_1.minus(x, pathItem.from[0]);\r\n                y = minus_1.minus(y, pathItem.from[1]);\r\n            }\r\n            const v = new vector_1.Vector(x, y);\r\n            if (pathItem.val[0] * 2 < threshold && pathItem.val[1] * 2 < threshold && v.modulo < threshold) {\r\n                pathItem.type = 'l';\r\n                pathItem.val = [x, y];\r\n            }\r\n        }\r\n        else if (\r\n        // c/s 指令可以直接直线化\r\n        pathItem.type.toLowerCase() === 'c' || pathItem.type.toLowerCase() === 's'\r\n            ||\r\n                // q 指令必须保证后续指令不是 t 指令\r\n                (pathItem.type.toLowerCase() === 'q' && (pi === pathArr.length - 1 || pathArr[pi + 1].type.toLowerCase() !== 't'))) {\r\n            const complexItem = complex_1.complex(pathItem, pathArr[pi - 1]);\r\n            if (complexItem.type.toLowerCase() === complexItem.type) {\r\n                for (let i = 0; i < complexItem.val.length; i += 2) {\r\n                    const v = new vector_1.Vector(complexItem.val[i], complexItem.val[i + 1]);\r\n                    if (v.modulo >= threshold) {\r\n                        continue outer;\r\n                    }\r\n                }\r\n                pathItem.type = 'l';\r\n                // 忽略所有的控制点，直接移动到目标点\r\n                pathItem.val = pathItem.val.slice(pathItem.val.length - 2);\r\n            }\r\n            else {\r\n                for (let i = 0; i < complexItem.val.length; i += 2) {\r\n                    const v = new vector_1.Vector(minus_1.minus(complexItem.val[i], complexItem.from[0]), minus_1.minus(complexItem.val[i + 1], complexItem.from[1]));\r\n                    if (v.modulo >= threshold) {\r\n                        continue outer;\r\n                    }\r\n                }\r\n                pathItem.type = 'L';\r\n                // 忽略所有的控制点，直接移动到目标点\r\n                pathItem.val = pathItem.val.slice(pathItem.val.length - 2);\r\n            }\r\n        }\r\n    }\r\n    return pathArr;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/straighten.ts?");

/***/ }),

/***/ "./src/slimming/path/stringify-arc.ts":
/*!********************************************!*\
  !*** ./src/slimming/path/stringify-arc.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst shorten_number_1 = __webpack_require__(/*! ../utils/shorten-number */ \"./src/slimming/utils/shorten-number.ts\");\r\nconst shorten_number_list_1 = __webpack_require__(/*! ../utils/shorten-number-list */ \"./src/slimming/utils/shorten-number-list.ts\");\r\nconst FLAG_POS1 = 3;\r\nconst FLAG_POS2 = 4;\r\nconst LOOP_LEN = 7;\r\n// 将函数类参数转为字符串，并优化（转科学计数法，移除掉正、负号前面的逗号，移除掉0.前面的0，移除掉.1,.1或e1,.1这种case中间的逗号）\r\n// 特殊，针对 arc 类 path 指令，flag 位后面不需要跟逗号\r\nexports.stringifyArc = (s) => shorten_number_list_1.shortenNumberList(s.reduce((prev, curr, index) => {\r\n    if (index % LOOP_LEN === FLAG_POS1 || index % LOOP_LEN === FLAG_POS2 || index === s.length - 1) {\r\n        return `${prev}${shorten_number_1.shortenNumber(curr)}`;\r\n    }\r\n    else {\r\n        return `${prev}${shorten_number_1.shortenNumber(curr)},`;\r\n    }\r\n}, ''));\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/stringify-arc.ts?");

/***/ }),

/***/ "./src/slimming/path/stringify.ts":
/*!****************************************!*\
  !*** ./src/slimming/path/stringify.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst const_1 = __webpack_require__(/*! ../const */ \"./src/slimming/const/index.ts\");\r\nconst shorten_number_list_1 = __webpack_require__(/*! ../utils/shorten-number-list */ \"./src/slimming/utils/shorten-number-list.ts\");\r\nconst stringify_funcval_1 = __webpack_require__(/*! ../utils/stringify-funcval */ \"./src/slimming/utils/stringify-funcval.ts\");\r\nconst shorten_digit_1 = __webpack_require__(/*! ./shorten-digit */ \"./src/slimming/path/shorten-digit.ts\");\r\nconst stringify_arc_1 = __webpack_require__(/*! ./stringify-arc */ \"./src/slimming/path/stringify-arc.ts\");\r\n// 路径字符串化\r\nexports.stringifyPath = (pathResult, digit1 = const_1.DEFAULT_SIZE_DIGIT, digit2 = const_1.DEFAULT_ACCURATE_DIGIT) => {\r\n    let d = '';\r\n    let lastType = '';\r\n    for (const subPath of pathResult) {\r\n        for (const pathItem of subPath) {\r\n            const stringifyFunc = pathItem.type === 'a' || pathItem.type === 'A' ? stringify_arc_1.stringifyArc : stringify_funcval_1.stringifyFuncVal;\r\n            if (\r\n            // 注意：连续的 m 指令不能进行合并\r\n            (pathItem.type === lastType && lastType.toLowerCase() !== 'm')\r\n                ||\r\n                    // 字符串化的时候，紧跟 m 指令的 l 指令，且大小写一致，可以直接向前合并\r\n                    (pathItem.type === 'l' && lastType === 'm')\r\n                ||\r\n                    (pathItem.type === 'L' && lastType === 'M')) {\r\n                d = shorten_number_list_1.shortenNumberList(`${d},${stringifyFunc(shorten_digit_1.shortenDigit(pathItem, digit1, digit2))}`);\r\n            }\r\n            else {\r\n                lastType = pathItem.type;\r\n                d += `${pathItem.type}${stringifyFunc(shorten_digit_1.shortenDigit(pathItem, digit1, digit2))}`;\r\n            }\r\n        }\r\n    }\r\n    return d;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/stringify.ts?");

/***/ }),

/***/ "./src/slimming/path/translate.ts":
/*!****************************************!*\
  !*** ./src/slimming/path/translate.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst minus_1 = __webpack_require__(/*! ../math/minus */ \"./src/slimming/math/minus.ts\");\r\nconst plus_1 = __webpack_require__(/*! ../math/plus */ \"./src/slimming/math/plus.ts\");\r\nexports.rel2abs = (val, pos) => val.map((s, index) => plus_1.plus(s, pos[index % 2]));\r\nexports.abs2rel = (val, pos) => val.map((s, index) => minus_1.minus(s, pos[index % 2]));\r\nexports.getRelHV = (pathItem) => {\r\n    const isRel = pathItem.type === pathItem.type.toLowerCase();\r\n    if (isRel)\r\n        return pathItem.val[0];\r\n    const isH = pathItem.type.toLowerCase() === 'h';\r\n    return minus_1.minus(pathItem.val[0], pathItem.from[isH ? 0 : 1]);\r\n};\r\nexports.getAbsHV = (pathItem) => {\r\n    const isAbs = pathItem.type === pathItem.type.toUpperCase();\r\n    if (isAbs)\r\n        return pathItem.val[0];\r\n    const isH = pathItem.type.toLowerCase() === 'h';\r\n    return plus_1.plus(pathItem.val[0], pathItem.from[isH ? 0 : 1]);\r\n};\r\nexports.getRel = (pathItem) => pathItem.type === pathItem.type.toLowerCase() ? pathItem.val.slice() : exports.abs2rel(pathItem.val, pathItem.from);\r\nexports.getAbs = (pathItem) => pathItem.type === pathItem.type.toUpperCase() ? pathItem.val.slice() : exports.rel2abs(pathItem.val, pathItem.from);\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/translate.ts?");

/***/ }),

/***/ "./src/slimming/rules/collapse-g.ts":
/*!******************************************!*\
  !*** ./src/slimming/rules/collapse-g.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst definitions_1 = __webpack_require__(/*! ../const/definitions */ \"./src/slimming/const/definitions.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst collapseAttributes = (node1, node2) => {\r\n    const attrObj = {};\r\n    const attributes1 = node1.attributes;\r\n    const attributes2 = node2.attributes;\r\n    attributes1.forEach(attr => {\r\n        attrObj[attr.fullname] = attr;\r\n    });\r\n    attributes2.forEach(attr => {\r\n        if (attrObj.hasOwnProperty(attr.fullname)) {\r\n            if (definitions_1.transformAttributes.includes(attr.fullname)) {\r\n                attrObj[attr.fullname].value = `${attr.value} ${attrObj[attr.fullname].value}`;\r\n            }\r\n        }\r\n        else {\r\n            node1.setAttribute(attr.name, attr.value, attr.namespace);\r\n            attrObj[attr.fullname] = attr;\r\n        }\r\n    });\r\n};\r\n// 包含某些特定属性，不允许进行合并\r\nconst cantCollapse = (node) => node.attributes.filter(attr => definitions_1.cantCollapseAttributes.includes(attr.fullname)).length;\r\nconst doCollapse = (dom) => {\r\n    traversal_node_1.traversalNode(ramda_1.propEq('nodeName', 'g'), node => {\r\n        const childNodes = node.childNodes;\r\n        const childTags = childNodes.filter(is_tag_1.isTag);\r\n        if (!childTags.length) {\r\n            rm_node_1.rmNode(node);\r\n        }\r\n        else if (!cantCollapse(node)) {\r\n            if (childTags.length === 1) { // 只有一个子节点\r\n                const childNode = childTags[0];\r\n                collapseAttributes(childNode, node);\r\n                node.parentNode.replaceChild(node, ...childNodes);\r\n            }\r\n            else if (!node.attributes.length) { // 没有属性\r\n                node.parentNode.replaceChild(node, ...childNodes);\r\n            }\r\n        }\r\n    }, dom);\r\n};\r\nexports.collapseG = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        doCollapse(dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/collapse-g.ts?");

/***/ }),

/***/ "./src/slimming/rules/collapse-textwrap.ts":
/*!*************************************************!*\
  !*** ./src/slimming/rules/collapse-textwrap.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst regular_tag_1 = __webpack_require__(/*! ../const/regular-tag */ \"./src/slimming/const/regular-tag.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.collapseTextwrap = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, node => {\r\n            const tagDefine = regular_tag_1.regularTag[node.nodeName];\r\n            // 规则执行的前提：文本容器嵌套关系\r\n            if (tagDefine.containTextNode && node.parentNode && regular_tag_1.regularTag[node.parentNode.nodeName].containTextNode) {\r\n                const attributes = node.attributes;\r\n                for (let i = attributes.length; i--;) {\r\n                    // 只要有一个非空属性，就不执行塌陷\r\n                    if (attributes[i].value.trim()) {\r\n                        return;\r\n                    }\r\n                }\r\n                node.parentNode.replaceChild(node, ...node.childNodes);\r\n            }\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/collapse-textwrap.ts?");

/***/ }),

/***/ "./src/slimming/rules/combine-path.ts":
/*!********************************************!*\
  !*** ./src/slimming/rules/combine-path.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// 合并属性和样式完全相同的路径\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst exec_1 = __webpack_require__(/*! ../color/exec */ \"./src/slimming/color/exec.ts\");\r\nconst valid_1 = __webpack_require__(/*! ../color/valid */ \"./src/slimming/color/valid.ts\");\r\n// import { doCompute } from '../path/do-compute';\r\n// import { execPath } from '../path/exec';\r\nconst exec_style_tree_1 = __webpack_require__(/*! ../xml/exec-style-tree */ \"./src/slimming/xml/exec-style-tree.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst get_attr_1 = __webpack_require__(/*! ../xml/get-attr */ \"./src/slimming/xml/get-attr.ts\");\r\n// // TODO 验证路径是否相交\r\n// const checkPath = (str: string) => {\r\n// \tconst paths: number[][] = [];\r\n// \tconst pathItems = doCompute(execPath(str));\r\n// \tlet verify = true;\r\n// \tlet currentPath: number[] = [];\r\n// \tpathItems.every(item => {\r\n// \t\tswitch (item.type) {\r\n// \t\t\t// 平移 - 绝对\r\n// \t\t\tcase 'M':\r\n// \t\t\t\tcurrentPath = [item.val[0], item.val[1]];\r\n// \t\t\t\tpaths.push(currentPath);\r\n// \t\t\t\treturn true;\r\n// \t\t\tcase 'm':\r\n// \t\t\t\tcurrentPath = [plus(item.from[0], item.val[0]), plus(item.from[1], item.val[1])];\r\n// \t\t\t\tpaths.push(currentPath);\r\n// \t\t\t\treturn true;\r\n// \t\t\tcase 'Z':\r\n// \t\t\tcase 'z':\r\n// \t\t\t\tcurrentPath.push(currentPath[0], currentPath[1]);\r\n// \t\t\t\treturn true;\r\n// \t\t\t// 水平直线 - 绝对\r\n// \t\t\tcase 'H':\r\n// \t\t\t\titem.val.forEach(val => {\r\n// \t\t\t\t\tcurrentPath.push(val, item.from[1]);\r\n// \t\t\t\t});\r\n// \t\t\t\treturn true;\r\n// \t\t\t// 水平直线 - 相对\r\n// \t\t\tcase 'h':\r\n// \t\t\t\titem.val.reduce((accumulator, val) => {\r\n// \t\t\t\t\tcurrentPath.push(plus(val, accumulator), item.from[1]);\r\n// \t\t\t\t\treturn plus(val, accumulator);\r\n// \t\t\t\t}, item.from[0]);\r\n// \t\t\t\treturn true;\r\n// \t\t\t// 垂直直线 - 绝对\r\n// \t\t\tcase 'V':\r\n// \t\t\t\titem.val.forEach(val => {\r\n// \t\t\t\t\tcurrentPath.push(item.from[0], val);\r\n// \t\t\t\t});\r\n// \t\t\t\treturn true;\r\n// \t\t\t// 垂直直线 - 相对\r\n// \t\t\tcase 'v':\r\n// \t\t\t\titem.val.reduce((accumulator, val) => {\r\n// \t\t\t\t\tcurrentPath.push(item.from[0], plus(val, accumulator));\r\n// \t\t\t\t\treturn plus(val, accumulator);\r\n// \t\t\t\t}, item.from[1]);\r\n// \t\t\t\treturn true;\r\n// \t\t\t// 直线 - 绝对\r\n// \t\t\tcase 'L':\r\n// \t\t\t\tcurrentPath.push(...item.val);\r\n// \t\t\t\treturn true;\r\n// \t\t\t// 直线 - 相对\r\n// \t\t\tcase 'l':\r\n// \t\t\t\tcurrentPath.reduce((accumulator, val, index) => {\r\n// \t\t\t\t\tcurrentPath.push(plus(accumulator[index % 2], val));\r\n// \t\t\t\t\treturn [plus(accumulator[0], val * (1 - (index % 2))), plus(accumulator[1], val * (index % 2))];\r\n// \t\t\t\t}, item.from);\r\n// \t\t\t\treturn true;\r\n// \t\t\tdefault:\r\n// \t\t\t\tverify = false;\r\n// \t\t\t\treturn false;\r\n// \t\t}\r\n// \t});\r\n// \treturn {\r\n// \t\tverify,\r\n// \t\tpaths\r\n// \t};\r\n// }\r\n// const noJoin = (attr1: string, attr2: string): boolean => {\r\n// \tconst checkResult1 = checkPath(attr1);\r\n// \tconst checkResult2 = checkPath(attr2);\r\n// \tif (checkResult1.verify && checkResult2.verify) {\r\n// \t\t// TODO： 验证碰撞\r\n// \t}\r\n// \treturn true;\r\n// }\r\nconst execOpacity = (opacity) => {\r\n    if (opacity[opacity.length - 1] === '%') {\r\n        return valid_1.validOpacity(opacity.length, '%', opacity.slice(0, opacity.length - 1));\r\n    }\r\n    else {\r\n        return valid_1.validOpacity(opacity.length, '', opacity);\r\n    }\r\n};\r\nconst canbeCombine = (node1, node2, attr, combineFill, combineOpacity) => {\r\n    // 是否存在 marker 引用，有 marker 引用不能进行合并\r\n    const hasMarker = get_attr_1.getAttr(node1, 'marker-start', 'none') !== 'none' || get_attr_1.getAttr(node1, 'marker-mid', 'none') !== 'none' || get_attr_1.getAttr(node1, 'marker-end', 'none') !== 'none';\r\n    if (hasMarker) {\r\n        return false;\r\n    }\r\n    const styles = node1.styles;\r\n    const noOpacity = !styles.hasOwnProperty('opacity') || execOpacity(styles.opacity.value) === 1;\r\n    const noStrokeOpacity = exec_1.exec(styles.hasOwnProperty('stroke') ? styles.stroke.value : '').a === 1 && (!styles.hasOwnProperty('stroke-opacity') || execOpacity(styles['stroke-opacity'].value) === 1);\r\n    const noFillOpacity = exec_1.exec(styles.hasOwnProperty('fill') ? styles.fill.value : '').a === 1 && (!styles.hasOwnProperty('fill-opacity') || execOpacity(styles['fill-opacity'].value) === 1);\r\n    // fill 为空\r\n    const noFill = styles.hasOwnProperty('fill') && styles.fill.value === 'none' && (combineOpacity || (noOpacity && noStrokeOpacity));\r\n    // 填充规则不能是 evenodd 必须是 nonzero\r\n    const noEvenOdd = !styles.hasOwnProperty('fill-rule') || styles['fill-rule'].value !== 'evenodd';\r\n    // stroke 为空\r\n    const noStroke = (!styles.hasOwnProperty('stroke') || styles.stroke.value === 'none') && (combineOpacity || (noOpacity && noFillOpacity));\r\n    return noFill || (combineFill && noStroke && noEvenOdd) /* || noJoin(attr.value, node2.getAttribute('d'))*/;\r\n};\r\nconst getKey = (node) => {\r\n    const keyObj = {\r\n        attr: '',\r\n        inline: '',\r\n        styletag: '',\r\n        inherit: '',\r\n    };\r\n    const styles = node.styles;\r\n    Object.keys(styles).forEach(key => {\r\n        const define = styles[key];\r\n        keyObj[define.from] += `${key}=${define.value}&`;\r\n    });\r\n    return `attr:${keyObj.attr}|inline:${keyObj.inline}|styletag:${keyObj.styletag}|inherit:${keyObj.inherit}`;\r\n};\r\nexports.combinePath = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        const { disregardFill, disregardOpacity, } = rule[1];\r\n        exec_style_tree_1.execStyleTree(dom);\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, node => {\r\n            const pathChildren = {};\r\n            let tagIndex = 0;\r\n            for (let i = 0; i < node.childNodes.length; i++) {\r\n                const childNode = node.childNodes[i];\r\n                if (childNode.nodeName === 'path') {\r\n                    let d;\r\n                    let k = '';\r\n                    childNode.attributes.forEach(attr => {\r\n                        if (attr.fullname === 'd') {\r\n                            d = attr;\r\n                        }\r\n                        else if (attr.fullname !== 'style') {\r\n                            k += `${attr.fullname}=${attr.value}&`;\r\n                        }\r\n                    });\r\n                    if (d) {\r\n                        const key = `${k}|${getKey(childNode)}`;\r\n                        if (ramda_1.has(key, pathChildren)) {\r\n                            // 允许路径合并的条件：\r\n                            // 1、所有属性和样式（包括继承样式）相同\r\n                            // 2、相邻\r\n                            // 3、没有 fill 或 stroke\r\n                            // 4、所有可见透明度 ≥ 1\r\n                            // TODO 路径没有相交或包含\r\n                            if (pathChildren[key].index === tagIndex - 1 && canbeCombine(childNode, pathChildren[key].node, d, disregardFill, disregardOpacity)) {\r\n                                // 路径拼合时，第一个 m 要转为绝对，否则会有 bug\r\n                                pathChildren[key].attr.value += d.value.replace(/^m/, 'M');\r\n                                rm_node_1.rmNode(childNode);\r\n                                tagIndex--;\r\n                                i--;\r\n                            }\r\n                            else {\r\n                                pathChildren[key] = {\r\n                                    attr: d,\r\n                                    index: tagIndex,\r\n                                    node: childNode,\r\n                                };\r\n                            }\r\n                        }\r\n                        else {\r\n                            pathChildren[key] = {\r\n                                attr: d,\r\n                                index: tagIndex,\r\n                                node: childNode,\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n                if (is_tag_1.isTag(childNode)) {\r\n                    tagIndex++;\r\n                }\r\n            }\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/combine-path.ts?");

/***/ }),

/***/ "./src/slimming/rules/combine-transform.ts":
/*!*************************************************!*\
  !*** ./src/slimming/rules/combine-transform.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst definitions_1 = __webpack_require__(/*! ../const/definitions */ \"./src/slimming/const/definitions.ts\");\r\nconst combine_1 = __webpack_require__(/*! ../matrix/combine */ \"./src/slimming/matrix/combine.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst exec_1 = __webpack_require__(/*! ../matrix/exec */ \"./src/slimming/matrix/exec.ts\");\r\nconst stringify_1 = __webpack_require__(/*! ../matrix/stringify */ \"./src/slimming/matrix/stringify.ts\");\r\nconst merge_1 = __webpack_require__(/*! ../matrix/merge */ \"./src/slimming/matrix/merge.ts\");\r\nexports.combineTransform = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        // digit1 = 矩阵前 4 位的精度，digit2 = 矩阵后 2 位的精度\r\n        const { trigDigit, sizeDigit, angelDigit, } = rule[1];\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, node => {\r\n            const attributes = node.attributes;\r\n            for (let i = attributes.length; i--;) {\r\n                const attr = attributes[i];\r\n                if (definitions_1.transformAttributes.includes(attr.name)) {\r\n                    const transform = [];\r\n                    exec_1.execMatrix(attr.value.trim()).forEach(mFunc => {\r\n                        const lastFunc = transform[transform.length - 1];\r\n                        if (transform.length && lastFunc.type === mFunc.type) {\r\n                            const mergeFunc = merge_1.merge(lastFunc, mFunc, trigDigit, sizeDigit, angelDigit);\r\n                            // 如果合并后为无效变化，则出栈，否则更新合并后的函数\r\n                            if (mergeFunc.noEffect) {\r\n                                transform.pop();\r\n                            }\r\n                            else {\r\n                                transform[transform.length - 1] = mergeFunc;\r\n                            }\r\n                        }\r\n                        else {\r\n                            transform.push(mFunc);\r\n                        }\r\n                    });\r\n                    if (transform.length) {\r\n                        const matrix = combine_1.combineMatrix(transform, trigDigit, sizeDigit, angelDigit);\r\n                        const transformStr = stringify_1.stringify(transform, trigDigit, sizeDigit, angelDigit);\r\n                        const matrixStr = stringify_1.stringify([matrix], trigDigit, sizeDigit, angelDigit);\r\n                        // TODO：把 transform 应用到元素\r\n                        if (matrix.noEffect) {\r\n                            node.removeAttribute(attr.fullname);\r\n                        }\r\n                        else {\r\n                            attr.value = (matrixStr.length < transformStr.length) ? matrixStr : transformStr;\r\n                        }\r\n                    }\r\n                    else {\r\n                        node.removeAttribute(attr.fullname);\r\n                    }\r\n                }\r\n            }\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/combine-transform.ts?");

/***/ }),

/***/ "./src/slimming/rules/compute-path.ts":
/*!********************************************!*\
  !*** ./src/slimming/rules/compute-path.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst douglas_peucker_1 = __webpack_require__(/*! ../algorithm/douglas-peucker */ \"./src/slimming/algorithm/douglas-peucker.ts\");\r\nconst const_1 = __webpack_require__(/*! ../const */ \"./src/slimming/const/index.ts\");\r\nconst plus_1 = __webpack_require__(/*! ../math/plus */ \"./src/slimming/math/plus.ts\");\r\nconst check_sub_paths_1 = __webpack_require__(/*! ../path/check-sub-paths */ \"./src/slimming/path/check-sub-paths.ts\");\r\nconst do_compute_1 = __webpack_require__(/*! ../path/do-compute */ \"./src/slimming/path/do-compute.ts\");\r\nconst exec_1 = __webpack_require__(/*! ../path/exec */ \"./src/slimming/path/exec.ts\");\r\nconst straighten_1 = __webpack_require__(/*! ../path/straighten */ \"./src/slimming/path/straighten.ts\");\r\nconst stringify_1 = __webpack_require__(/*! ../path/stringify */ \"./src/slimming/path/stringify.ts\");\r\nconst exec_style_tree_1 = __webpack_require__(/*! ../xml/exec-style-tree */ \"./src/slimming/xml/exec-style-tree.ts\");\r\nconst get_attr_1 = __webpack_require__(/*! ../xml/get-attr */ \"./src/slimming/xml/get-attr.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst DPItemNormalize = (pathItem) => {\r\n    switch (pathItem.type) {\r\n        case 'l':\r\n            pathItem.val[0] = plus_1.plus(pathItem.val[0], pathItem.from[0]);\r\n            pathItem.val[1] = plus_1.plus(pathItem.val[1], pathItem.from[1]);\r\n            break;\r\n        case 'H':\r\n            pathItem.val.push(pathItem.from[1]);\r\n            break;\r\n        case 'h':\r\n            pathItem.val[0] = plus_1.plus(pathItem.val[0], pathItem.from[0]);\r\n            pathItem.val.push(pathItem.from[1]);\r\n            break;\r\n        case 'V':\r\n            pathItem.val.unshift(pathItem.from[0]);\r\n            break;\r\n        case 'v':\r\n            pathItem.val.unshift(pathItem.from[0]);\r\n            pathItem.val[1] = plus_1.plus(pathItem.val[1], pathItem.from[1]);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    pathItem.type = 'L';\r\n    return pathItem;\r\n};\r\nconst DPItemMerge = (lastItem, pathItem) => {\r\n    lastItem.val = lastItem.val.concat(DPItemNormalize(pathItem).val);\r\n};\r\nconst DPInit = (threshold, pathArr) => {\r\n    const pathResult = [];\r\n    let len = 0;\r\n    for (const pathItem of pathArr) {\r\n        if (const_1.LineTypes.includes(pathItem.type)) {\r\n            const lastItem = pathResult[len - 1];\r\n            if (lastItem.type === 'L') {\r\n                DPItemMerge(lastItem, pathItem);\r\n            }\r\n            else {\r\n                pathResult.push(DPItemNormalize(pathItem));\r\n                len++;\r\n            }\r\n        }\r\n        else {\r\n            const lastItem = pathResult[len - 1];\r\n            if (len > 0 && lastItem.type === 'L') {\r\n                lastItem.val = douglas_peucker_1.douglasPeucker(threshold, lastItem.from.concat(lastItem.val)).slice(2);\r\n            }\r\n            pathResult.push(pathItem);\r\n            len++;\r\n        }\r\n    }\r\n    if (pathResult[len - 1].type === 'L') {\r\n        const lastItem = pathResult[len - 1];\r\n        lastItem.val = douglas_peucker_1.douglasPeucker(threshold, lastItem.from.concat(lastItem.val)).slice(2);\r\n    }\r\n    return pathResult;\r\n};\r\nexports.computePath = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        const { thinning, sizeDigit, angelDigit, straighten, } = rule[1];\r\n        exec_style_tree_1.execStyleTree(dom);\r\n        traversal_node_1.traversalNode(ramda_1.propEq('nodeName', 'path'), node => {\r\n            const attrD = node.getAttribute('d');\r\n            if (attrD) {\r\n                // 先运算一次 doCompute，拿到每条指令的 from 坐标\r\n                let pathResult = do_compute_1.doCompute(exec_1.execPath(attrD));\r\n                // 是否存在 marker 引用，没有 marker 可以移除所有空移动指令\r\n                const hasMarker = get_attr_1.getAttr(node, 'marker-start', 'none') !== 'none' || get_attr_1.getAttr(node, 'marker-mid', 'none') !== 'none' || get_attr_1.getAttr(node, 'marker-end', 'none') !== 'none';\r\n                // 是否存在 stroke，没有 stroke 可以移除面积为 0 的子路径\r\n                const hasStroke = get_attr_1.getAttr(node, 'stroke', 'none') !== 'none' && get_attr_1.getAttr(node, 'stroke-width', '1') !== '0';\r\n                // 是否存在 stroke-linecap，没有 stroke-linecap 可以移除长度为 0 的指令\r\n                const hasStrokeCap = get_attr_1.getAttr(node, 'stroke-linecap', 'butt') !== 'butt';\r\n                // 如果存在 marker 引用，多余的优化都不能做\r\n                if (!hasMarker) {\r\n                    // 存在小尺寸曲线转直线的规则\r\n                    if (straighten) {\r\n                        // doCompute 必须执行\r\n                        pathResult = do_compute_1.doCompute(pathResult.map(p => straighten_1.straighten(straighten, p)));\r\n                    }\r\n                    // 存在路径抽稀规则\r\n                    if (thinning) {\r\n                        // doCompute 必须执行\r\n                        pathResult = do_compute_1.doCompute(pathResult.map(p => DPInit(thinning, p)));\r\n                    }\r\n                    // 进行合并、指令转换等运算\r\n                    pathResult = do_compute_1.doCompute(check_sub_paths_1.checkSubPath(pathResult, hasStroke, hasStrokeCap, sizeDigit, angelDigit));\r\n                }\r\n                if (!pathResult.length) {\r\n                    rm_node_1.rmNode(node);\r\n                    return;\r\n                }\r\n                node.setAttribute('d', stringify_1.stringifyPath(pathResult, sizeDigit, angelDigit));\r\n            }\r\n            else {\r\n                rm_node_1.rmNode(node);\r\n            }\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/compute-path.ts?");

/***/ }),

/***/ "./src/slimming/rules/index.ts":
/*!*************************************!*\
  !*** ./src/slimming/rules/index.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// default rules\r\nconst combine_script_1 = __webpack_require__(/*! ../default-rules/combine-script */ \"./src/slimming/default-rules/combine-script.ts\");\r\nconst combine_style_1 = __webpack_require__(/*! ../default-rules/combine-style */ \"./src/slimming/default-rules/combine-style.ts\");\r\nconst combine_textnode_1 = __webpack_require__(/*! ../default-rules/combine-textnode */ \"./src/slimming/default-rules/combine-textnode.ts\");\r\nconst rm_useless_1 = __webpack_require__(/*! ../default-rules/rm-useless */ \"./src/slimming/default-rules/rm-useless.ts\");\r\n// rules\r\nconst collapse_g_1 = __webpack_require__(/*! ./collapse-g */ \"./src/slimming/rules/collapse-g.ts\");\r\nconst collapse_textwrap_1 = __webpack_require__(/*! ./collapse-textwrap */ \"./src/slimming/rules/collapse-textwrap.ts\");\r\nconst combine_path_1 = __webpack_require__(/*! ./combine-path */ \"./src/slimming/rules/combine-path.ts\");\r\nconst combine_transform_1 = __webpack_require__(/*! ./combine-transform */ \"./src/slimming/rules/combine-transform.ts\");\r\nconst compute_path_1 = __webpack_require__(/*! ./compute-path */ \"./src/slimming/rules/compute-path.ts\");\r\nconst rm_attribute_1 = __webpack_require__(/*! ./rm-attribute */ \"./src/slimming/rules/rm-attribute.ts\");\r\nconst rm_comments_1 = __webpack_require__(/*! ./rm-comments */ \"./src/slimming/rules/rm-comments.ts\");\r\nconst rm_doctype_1 = __webpack_require__(/*! ./rm-doctype */ \"./src/slimming/rules/rm-doctype.ts\");\r\nconst rm_hidden_1 = __webpack_require__(/*! ./rm-hidden */ \"./src/slimming/rules/rm-hidden.ts\");\r\nconst rm_irregular_nesting_1 = __webpack_require__(/*! ./rm-irregular-nesting */ \"./src/slimming/rules/rm-irregular-nesting.ts\");\r\nconst rm_irregular_tag_1 = __webpack_require__(/*! ./rm-irregular-tag */ \"./src/slimming/rules/rm-irregular-tag.ts\");\r\nconst rm_px_1 = __webpack_require__(/*! ./rm-px */ \"./src/slimming/rules/rm-px.ts\");\r\nconst rm_unnecessary_1 = __webpack_require__(/*! ./rm-unnecessary */ \"./src/slimming/rules/rm-unnecessary.ts\");\r\nconst rm_version_1 = __webpack_require__(/*! ./rm-version */ \"./src/slimming/rules/rm-version.ts\");\r\nconst rm_viewbox_1 = __webpack_require__(/*! ./rm-viewbox */ \"./src/slimming/rules/rm-viewbox.ts\");\r\nconst rm_xml_decl_1 = __webpack_require__(/*! ./rm-xml-decl */ \"./src/slimming/rules/rm-xml-decl.ts\");\r\nconst rm_xmlns_1 = __webpack_require__(/*! ./rm-xmlns */ \"./src/slimming/rules/rm-xmlns.ts\");\r\nconst shorten_class_1 = __webpack_require__(/*! ./shorten-class */ \"./src/slimming/rules/shorten-class.ts\");\r\nconst shorten_color_1 = __webpack_require__(/*! ./shorten-color */ \"./src/slimming/rules/shorten-color.ts\");\r\nconst shorten_decimal_digits_1 = __webpack_require__(/*! ./shorten-decimal-digits */ \"./src/slimming/rules/shorten-decimal-digits.ts\");\r\nconst shorten_defs_1 = __webpack_require__(/*! ./shorten-defs */ \"./src/slimming/rules/shorten-defs.ts\");\r\nconst shorten_id_1 = __webpack_require__(/*! ./shorten-id */ \"./src/slimming/rules/shorten-id.ts\");\r\nconst shorten_shape_1 = __webpack_require__(/*! ./shorten-shape */ \"./src/slimming/rules/shorten-shape.ts\");\r\nconst shorten_style_attr_1 = __webpack_require__(/*! ./shorten-style-attr */ \"./src/slimming/rules/shorten-style-attr.ts\");\r\nconst shorten_style_tag_1 = __webpack_require__(/*! ./shorten-style-tag */ \"./src/slimming/rules/shorten-style-tag.ts\");\r\nexports.rules = [\r\n    [true, rm_useless_1.rmUseless],\r\n    [true, combine_style_1.combineStyle],\r\n    [true, combine_script_1.combineScript],\r\n    [false, rm_xml_decl_1.rmXMLDecl, 'rm-xml-decl'],\r\n    [false, rm_version_1.rmVersion, 'rm-version'],\r\n    [false, rm_doctype_1.rmDocType, 'rm-doctype'],\r\n    [false, rm_comments_1.rmComments, 'rm-comments'],\r\n    [false, rm_irregular_tag_1.rmIrregularTag, 'rm-irregular-tag'],\r\n    [false, rm_irregular_nesting_1.rmIrregularNesting, 'rm-irregular-nesting'],\r\n    [false, rm_unnecessary_1.rmUnnecessary, 'rm-unnecessary'],\r\n    [false, rm_viewbox_1.rmViewBox, 'rm-viewbox'],\r\n    [false, shorten_id_1.shortenID, 'shorten-id'],\r\n    [false, shorten_class_1.shortenClass, 'shorten-class'],\r\n    [false, shorten_defs_1.shortenDefs, 'shorten-defs'],\r\n    [false, rm_px_1.rmPx, 'rm-px'],\r\n    [false, rm_attribute_1.rmAttribute, 'rm-attribute'],\r\n    [false, shorten_style_attr_1.shortenStyleAttr, 'shorten-style-attr'],\r\n    [false, combine_transform_1.combineTransform, 'combine-transform'],\r\n    [false, shorten_shape_1.shortenShape, 'shorten-shape'],\r\n    [false, combine_path_1.combinePath, 'combine-path'],\r\n    [false, compute_path_1.computePath, 'compute-path'],\r\n    [false, collapse_g_1.collapseG, 'collapse-g'],\r\n    [false, shorten_decimal_digits_1.shortenDecimalDigits, 'shorten-decimal-digits'],\r\n    [false, shorten_color_1.shortenColor, 'shorten-color'],\r\n    [false, shorten_style_tag_1.shortenStyleTag, 'shorten-style-tag'],\r\n    [false, collapse_textwrap_1.collapseTextwrap, 'collapse-textwrap'],\r\n    [true, combine_textnode_1.combineTextNode],\r\n    [false, rm_xmlns_1.rmXMLNS, 'rm-xmlns'],\r\n    [false, rm_hidden_1.rmHidden, 'rm-hidden'],\r\n];\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/index.ts?");

/***/ }),

/***/ "./src/slimming/rules/rm-attribute.ts":
/*!********************************************!*\
  !*** ./src/slimming/rules/rm-attribute.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst definitions_1 = __webpack_require__(/*! ../const/definitions */ \"./src/slimming/const/definitions.ts\");\r\nconst regular_attr_1 = __webpack_require__(/*! ../const/regular-attr */ \"./src/slimming/const/regular-attr.ts\");\r\nconst regular_tag_1 = __webpack_require__(/*! ../const/regular-tag */ \"./src/slimming/const/regular-tag.ts\");\r\nconst legal_value_1 = __webpack_require__(/*! ../validate/legal-value */ \"./src/slimming/validate/legal-value.ts\");\r\nconst exec_style_tree_1 = __webpack_require__(/*! ../xml/exec-style-tree */ \"./src/slimming/xml/exec-style-tree.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst exec_1 = __webpack_require__(/*! ../color/exec */ \"./src/slimming/color/exec.ts\");\r\nconst exec_numberlist_1 = __webpack_require__(/*! ../utils/exec-numberlist */ \"./src/slimming/utils/exec-numberlist.ts\");\r\nconst valueIsEqual = (attrDefine, value1, value2) => {\r\n    if (value1 === value2) {\r\n        return true;\r\n    }\r\n    if (attrDefine.maybeColor) {\r\n        const color1 = exec_1.exec(value1);\r\n        color1.origin = '';\r\n        const color2 = exec_1.exec(value2);\r\n        color2.origin = '';\r\n        if (ramda_1.equals(color1, color2)) {\r\n            return true;\r\n        }\r\n    }\r\n    if (attrDefine.maybeSizeNumber || attrDefine.maybeAccurateNumber) {\r\n        const nums2 = exec_numberlist_1.execNumberList(value2);\r\n        if (nums2.length > 0 && ramda_1.equals(exec_numberlist_1.execNumberList(value1), nums2)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\nconst attrIsEqual = (attrDefine, value, nodeName) => {\r\n    if (typeof attrDefine.initValue === 'string') {\r\n        return valueIsEqual(attrDefine, value, attrDefine.initValue);\r\n    }\r\n    else {\r\n        const initValue = attrDefine.initValue;\r\n        for (let ii = 0, il = initValue.length; ii < il; ii++) {\r\n            if (initValue[ii].tag.includes(nodeName) && valueIsEqual(attrDefine, value, initValue[ii].val)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n};\r\nexports.rmAttribute = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        const { rmDefault, keepEvent, keepAria, } = rule[1];\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, node => {\r\n            if (rmDefault) {\r\n                exec_style_tree_1.execStyleTree(dom);\r\n            }\r\n            const tagDefine = regular_tag_1.regularTag[node.nodeName];\r\n            // 先取出来 attributeName 属性\r\n            const attributeName = node.getAttribute('attributeName');\r\n            const attributes = node.attributes;\r\n            const parentStyle = node.parentNode.styles;\r\n            for (let i = attributes.length; i--;) {\r\n                const attr = attributes[i];\r\n                const attrDefine = regular_attr_1.regularAttr[attr.fullname];\r\n                const value = attr.value.trim();\r\n                if (attrDefine.isUndef) { // 非标准属性\r\n                    let isUndef = true;\r\n                    if ((keepEvent && definitions_1.eventAttributes.includes(attr.fullname)) // 事件属性是否保留\r\n                        ||\r\n                            (keepAria && definitions_1.ariaAttributes.includes(attr.fullname)) // aria 属性是否保留\r\n                    ) {\r\n                        isUndef = false;\r\n                    }\r\n                    if (isUndef) {\r\n                        node.removeAttribute(attr.fullname);\r\n                        continue;\r\n                    }\r\n                }\r\n                else {\r\n                    if (!value // 空属性\r\n                        ||\r\n                            (!attrDefine.couldBeStyle && !attr.fullname.includes('xmlns') && !tagDefine.ownAttributes.includes(attr.fullname)) // 属性和元素不匹配\r\n                        ||\r\n                            !legal_value_1.legalValue(attrDefine, attr, node.nodeName) // 不合法的值\r\n                    ) {\r\n                        node.removeAttribute(attr.fullname);\r\n                        continue;\r\n                    }\r\n                    // 不能实现动画的属性被动画属性引用)\r\n                    if (definitions_1.animationAttributes.includes(attr.fullname) && definitions_1.animationElements.includes(node.nodeName) && (!attributeName || !regular_attr_1.regularAttr[attributeName].animatable)) {\r\n                        node.removeAttribute(attr.fullname);\r\n                        // 同时移除 attributeName 属性\r\n                        node.removeAttribute('attributeName');\r\n                        continue;\r\n                    }\r\n                }\r\n                // href 和 xlink:href 不能并存，如果并存，应该移除后者\r\n                if (node.hasAttribute('href') && node.hasAttribute('xlink:href')) {\r\n                    node.removeAttribute('xlink:href');\r\n                }\r\n                if (rmDefault) {\r\n                    // 如果父元素上有同名的样式类属性，则不能移除和默认值相同的属性\r\n                    if (attrDefine.couldBeStyle && parentStyle && parentStyle.hasOwnProperty(attr.fullname)) {\r\n                        continue;\r\n                    }\r\n                    if (attrIsEqual(attrDefine, value, node.nodeName)) {\r\n                        node.removeAttribute(attr.fullname);\r\n                    }\r\n                }\r\n            }\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/rm-attribute.ts?");

/***/ }),

/***/ "./src/slimming/rules/rm-comments.ts":
/*!*******************************************!*\
  !*** ./src/slimming/rules/rm-comments.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst index_1 = __webpack_require__(/*! ../../node/index */ \"./src/node/index.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.rmComments = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        traversal_node_1.traversalNode(ramda_1.propEq('nodeType', index_1.NodeType.Comments), rm_node_1.rmNode, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/rm-comments.ts?");

/***/ }),

/***/ "./src/slimming/rules/rm-doctype.ts":
/*!******************************************!*\
  !*** ./src/slimming/rules/rm-doctype.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst index_1 = __webpack_require__(/*! ../../node/index */ \"./src/node/index.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.rmDocType = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        traversal_node_1.traversalNode(ramda_1.propEq('nodeType', index_1.NodeType.DocType), rm_node_1.rmNode, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/rm-doctype.ts?");

/***/ }),

/***/ "./src/slimming/rules/rm-hidden.ts":
/*!*****************************************!*\
  !*** ./src/slimming/rules/rm-hidden.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst definitions_1 = __webpack_require__(/*! ../const/definitions */ \"./src/slimming/const/definitions.ts\");\r\nconst regular_tag_1 = __webpack_require__(/*! ../const/regular-tag */ \"./src/slimming/const/regular-tag.ts\");\r\nconst syntax_1 = __webpack_require__(/*! ../const/syntax */ \"./src/slimming/const/syntax.ts\");\r\nconst exec_style_tree_1 = __webpack_require__(/*! ../xml/exec-style-tree */ \"./src/slimming/xml/exec-style-tree.ts\");\r\nconst get_ancestor_1 = __webpack_require__(/*! ../xml/get-ancestor */ \"./src/slimming/xml/get-ancestor.ts\");\r\nconst get_attr_1 = __webpack_require__(/*! ../xml/get-attr */ \"./src/slimming/xml/get-attr.ts\");\r\nconst get_by_id_1 = __webpack_require__(/*! ../xml/get-by-id */ \"./src/slimming/xml/get-by-id.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\n// 检测数值类属性\r\nconst checkNumberAttr = (node, key, allowEmpty, allowAuto, allowZero) => {\r\n    const val = get_attr_1.getAttr(node, key, '');\r\n    // 是否允许为空\r\n    if (!val)\r\n        return allowEmpty;\r\n    // 是否允许 auto\r\n    if (val === 'auto')\r\n        return allowAuto;\r\n    // 是否必须大于 0\r\n    const compare = allowZero ? ramda_1.gte : ramda_1.gt;\r\n    if (compare(parseFloat(val), 0)) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\nconst checkUse = (node, dom) => {\r\n    if (!node.hasAttribute('href') && !node.hasAttribute('xlink:href')) {\r\n        rm_node_1.rmNode(node);\r\n    }\r\n    else {\r\n        const value = (node.getAttribute('href') || node.getAttribute('xlink:href'));\r\n        const iri = syntax_1.IRIFullMatch.exec(value);\r\n        if (iri) {\r\n            const id = iri[1];\r\n            // 不允许引用自身或祖先元素\r\n            if (get_ancestor_1.getAncestor(node, (n) => n.getAttribute('id') === id)) {\r\n                rm_node_1.rmNode(node);\r\n                return;\r\n            }\r\n            // 引用了不存在的元素\r\n            if (!get_by_id_1.getById(value, dom)) {\r\n                rm_node_1.rmNode(node);\r\n            }\r\n        }\r\n        else {\r\n            rm_node_1.rmNode(node);\r\n        }\r\n    }\r\n};\r\nconst numberMap = {\r\n    pattern: {\r\n        attrs: ['width', 'height'],\r\n        allowEmpty: false,\r\n        allowAuto: false,\r\n        allowZero: false,\r\n    },\r\n    mask: {\r\n        attrs: ['width', 'height'],\r\n        allowEmpty: true,\r\n        allowAuto: true,\r\n        allowZero: false,\r\n    },\r\n    marker: {\r\n        attrs: ['markerWidth', 'markerHeight'],\r\n        allowEmpty: true,\r\n        allowAuto: true,\r\n        allowZero: false,\r\n    },\r\n    feBlend: {\r\n        attrs: ['width', 'height'],\r\n        allowEmpty: false,\r\n        allowAuto: false,\r\n        allowZero: false,\r\n    },\r\n    feColorMatrix: {\r\n        attrs: ['width', 'height'],\r\n        allowEmpty: false,\r\n        allowAuto: false,\r\n        allowZero: false,\r\n    },\r\n    feComponentTransfer: {\r\n        attrs: ['width', 'height'],\r\n        allowEmpty: false,\r\n        allowAuto: false,\r\n        allowZero: false,\r\n    },\r\n    feComposite: {\r\n        attrs: ['width', 'height'],\r\n        allowEmpty: false,\r\n        allowAuto: false,\r\n        allowZero: false,\r\n    },\r\n    feConvolveMatrix: {\r\n        attrs: ['width', 'height'],\r\n        allowEmpty: false,\r\n        allowAuto: false,\r\n        allowZero: false,\r\n    },\r\n    feDiffuseLighting: {\r\n        attrs: ['width', 'height'],\r\n        allowEmpty: false,\r\n        allowAuto: false,\r\n        allowZero: false,\r\n    },\r\n    feDisplacementMap: {\r\n        attrs: ['width', 'height'],\r\n        allowEmpty: false,\r\n        allowAuto: false,\r\n        allowZero: false,\r\n    },\r\n    feDropShadow: {\r\n        attrs: ['width', 'height'],\r\n        allowEmpty: false,\r\n        allowAuto: false,\r\n        allowZero: false,\r\n    },\r\n    feFlood: {\r\n        attrs: ['width', 'height'],\r\n        allowEmpty: false,\r\n        allowAuto: false,\r\n        allowZero: false,\r\n    },\r\n    feGaussianBlur: {\r\n        attrs: ['width', 'height'],\r\n        allowEmpty: false,\r\n        allowAuto: false,\r\n        allowZero: false,\r\n    },\r\n    feImage: {\r\n        attrs: ['width', 'height'],\r\n        allowEmpty: false,\r\n        allowAuto: false,\r\n        allowZero: false,\r\n    },\r\n    feMerge: {\r\n        attrs: ['width', 'height'],\r\n        allowEmpty: false,\r\n        allowAuto: false,\r\n        allowZero: false,\r\n    },\r\n    feMorphology: {\r\n        attrs: ['width', 'height'],\r\n        allowEmpty: false,\r\n        allowAuto: false,\r\n        allowZero: false,\r\n    },\r\n    feOffset: {\r\n        attrs: ['width', 'height'],\r\n        allowEmpty: false,\r\n        allowAuto: false,\r\n        allowZero: false,\r\n    },\r\n    feSpecularLighting: {\r\n        attrs: ['width', 'height'],\r\n        allowEmpty: false,\r\n        allowAuto: false,\r\n        allowZero: false,\r\n    },\r\n    feTile: {\r\n        attrs: ['width', 'height'],\r\n        allowEmpty: false,\r\n        allowAuto: false,\r\n        allowZero: false,\r\n    },\r\n    feTurbulence: {\r\n        attrs: ['width', 'height'],\r\n        allowEmpty: false,\r\n        allowAuto: false,\r\n        allowZero: false,\r\n    },\r\n};\r\nexports.rmHidden = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        exec_style_tree_1.execStyleTree(dom);\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, node => {\r\n            // 未包含子节点的文本容器视为隐藏节点\r\n            if (!node.childNodes.length && regular_tag_1.regularTag[node.nodeName].containTextNode) {\r\n                rm_node_1.rmNode(node);\r\n                return;\r\n            }\r\n            const styles = node.styles;\r\n            if (styles.hasOwnProperty('display') && styles.display.value === 'none') {\r\n                rm_node_1.rmNode(node);\r\n                return;\r\n            }\r\n            // 没有填充和描边的形状，不一定可以被移除，要再判断一下自身或父元素是否有 id\r\n            if (definitions_1.shapeElements.includes(node.nodeName)) {\r\n                const noFill = styles.hasOwnProperty('fill') && styles.fill.value === 'none';\r\n                const noStroke = !styles.hasOwnProperty('stroke') || styles.stroke.value === 'none';\r\n                if (noFill && noStroke && !get_ancestor_1.getAncestor(node, (n) => n.hasAttribute('id'))) {\r\n                    rm_node_1.rmNode(node);\r\n                    return;\r\n                }\r\n            }\r\n            if (numberMap.hasOwnProperty(node.nodeName)) {\r\n                const nubmerItem = numberMap[node.nodeName];\r\n                for (let i = nubmerItem.attrs.length; i--;) {\r\n                    if (!checkNumberAttr(node, nubmerItem.attrs[i], nubmerItem.allowEmpty, nubmerItem.allowAuto, nubmerItem.allowZero)) {\r\n                        rm_node_1.rmNode(node);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            if (node.nodeName === 'use') {\r\n                checkUse(node, dom);\r\n            }\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/rm-hidden.ts?");

/***/ }),

/***/ "./src/slimming/rules/rm-irregular-nesting.ts":
/*!****************************************************!*\
  !*** ./src/slimming/rules/rm-irregular-nesting.ts ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst regular_tag_1 = __webpack_require__(/*! ../const/regular-tag */ \"./src/slimming/const/regular-tag.ts\");\r\nconst get_ancestor_1 = __webpack_require__(/*! ../xml/get-ancestor */ \"./src/slimming/xml/get-ancestor.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.rmIrregularNesting = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        const { ignore } = rule[1];\r\n        const notIgnore = (node) => ramda_1.not(ramda_1.any(ramda_1.equals(ramda_1.prop('nodeName', node)), ignore));\r\n        traversal_node_1.traversalNode(ramda_1.both(is_tag_1.isTag, notIgnore), node => {\r\n            let legalRule = regular_tag_1.regularTag[node.nodeName].legalChildElements;\r\n            // noself 表示不允许嵌套自身\r\n            const noself = legalRule.noself;\r\n            // transparent 表示参照最近的非 switch 上级元素的规则\r\n            if (legalRule.transparent) {\r\n                const parent = get_ancestor_1.getAncestor(node.parentNode, (n) => n.nodeName !== 'switch');\r\n                legalRule = regular_tag_1.regularTag[parent.nodeName].legalChildElements;\r\n            }\r\n            for (let i = node.childNodes.length; i--;) {\r\n                const childNode = node.childNodes[i];\r\n                // 只针对 tag 类的子节点作处理\r\n                if (!is_tag_1.isTag(childNode)) {\r\n                    continue;\r\n                }\r\n                if (noself && childNode.nodeName === node.nodeName) { // 不允许嵌套自身\r\n                    rm_node_1.rmNode(childNode);\r\n                }\r\n                else if (legalRule.any) {\r\n                    // any 表示可以任意嵌套\r\n                    continue;\r\n                }\r\n                else if (legalRule.childElements && !legalRule.childElements.includes(childNode.nodeName)) { // 不在嵌套列表中的情况\r\n                    rm_node_1.rmNode(childNode);\r\n                }\r\n            }\r\n        }, dom, true);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/rm-irregular-nesting.ts?");

/***/ }),

/***/ "./src/slimming/rules/rm-irregular-tag.ts":
/*!************************************************!*\
  !*** ./src/slimming/rules/rm-irregular-tag.ts ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst regular_tag_1 = __webpack_require__(/*! ../const/regular-tag */ \"./src/slimming/const/regular-tag.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.rmIrregularTag = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        const { ignore } = rule[1];\r\n        const notIgnore = (node) => ramda_1.not(ramda_1.any(ramda_1.equals(ramda_1.prop('nodeName', node)), ignore));\r\n        traversal_node_1.traversalNode(ramda_1.both(is_tag_1.isTag, notIgnore), node => {\r\n            if (regular_tag_1.regularTag[node.nodeName].isUndef) {\r\n                rm_node_1.rmNode(node);\r\n            }\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/rm-irregular-tag.ts?");

/***/ }),

/***/ "./src/slimming/rules/rm-px.ts":
/*!*************************************!*\
  !*** ./src/slimming/rules/rm-px.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst syntax_1 = __webpack_require__(/*! ../const/syntax */ \"./src/slimming/const/syntax.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst regular_attr_1 = __webpack_require__(/*! ../const/regular-attr */ \"./src/slimming/const/regular-attr.ts\");\r\nconst exec_1 = __webpack_require__(/*! ../style/exec */ \"./src/slimming/style/exec.ts\");\r\nconst stringify_1 = __webpack_require__(/*! ../style/stringify */ \"./src/slimming/style/stringify.ts\");\r\nconst pxReg = new RegExp(`(^|\\\\(|\\\\s|,|{|;|:)(${syntax_1.numberPattern})px(?=$|\\\\)|\\\\s|,|;|})`, 'gi');\r\nexports.rmPx = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, node => {\r\n            node.attributes.forEach(attr => {\r\n                if (attr.fullname === 'style') {\r\n                    const style = exec_1.execStyle(attr.value);\r\n                    style.forEach(s => {\r\n                        if (regular_attr_1.regularAttr[s.fullname].maybeSizeNumber || regular_attr_1.regularAttr[s.fullname].maybeAccurateNumber) {\r\n                            pxReg.lastIndex = 0;\r\n                            // 移除 px ，同时移除 0 值的单位\r\n                            s.value = s.value.replace(pxReg, '$1$2').replace(/(^|\\D)0[a-z]+/gi, '$10');\r\n                        }\r\n                    });\r\n                    attr.value = stringify_1.stringifyStyle(style);\r\n                }\r\n                else {\r\n                    if (regular_attr_1.regularAttr[attr.fullname].maybeSizeNumber || regular_attr_1.regularAttr[attr.fullname].maybeAccurateNumber) {\r\n                        pxReg.lastIndex = 0;\r\n                        // 移除 px ，同时移除 0 值的单位\r\n                        attr.value = attr.value.replace(pxReg, '$1$2').replace(/(^|\\D)0[a-z]+/gi, '$10');\r\n                    }\r\n                }\r\n            });\r\n            if (node.nodeName === 'style') {\r\n                node.childNodes[0].textContent = node.childNodes[0].textContent.replace(pxReg, '$1$2');\r\n            }\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/rm-px.ts?");

/***/ }),

/***/ "./src/slimming/rules/rm-unnecessary.ts":
/*!**********************************************!*\
  !*** ./src/slimming/rules/rm-unnecessary.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst definitions_1 = __webpack_require__(/*! ../const/definitions */ \"./src/slimming/const/definitions.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.rmUnnecessary = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        const { tags } = rule[1];\r\n        if (tags.length) {\r\n            traversal_node_1.traversalNode(node => tags.includes(node.nodeName) && definitions_1.unnecessaryElements.includes(node.nodeName), rm_node_1.rmNode, dom);\r\n        }\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/rm-unnecessary.ts?");

/***/ }),

/***/ "./src/slimming/rules/rm-version.ts":
/*!******************************************!*\
  !*** ./src/slimming/rules/rm-version.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.rmVersion = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        traversal_node_1.traversalNode(ramda_1.propEq('nodeName', 'svg'), node => {\r\n            node.removeAttribute('version');\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/rm-version.ts?");

/***/ }),

/***/ "./src/slimming/rules/rm-viewbox.ts":
/*!******************************************!*\
  !*** ./src/slimming/rules/rm-viewbox.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst exec_numberlist_1 = __webpack_require__(/*! ../utils/exec-numberlist */ \"./src/slimming/utils/exec-numberlist.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.rmViewBox = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        traversal_node_1.traversalNode(node => node.hasAttribute('viewBox'), node => {\r\n            const size = ['0', '0', '0', '0'];\r\n            const viewBox = exec_numberlist_1.execNumberList(node.getAttribute('viewBox'));\r\n            // viewBox 属性的长度必须为 4，且 width 和 height 不能为负\r\n            if (viewBox.length !== 4 || viewBox[2] < 0 || viewBox[3] < 0) {\r\n                node.removeAttribute('viewBox');\r\n                return;\r\n            }\r\n            node.attributes.forEach(attr => {\r\n                if (node.nodeName === 'marker') {\r\n                    if (attr.fullname === 'markerWidth') {\r\n                        size[2] = attr.value.replace(/px$/, '');\r\n                    }\r\n                    else if (attr.fullname === 'markerHeight') {\r\n                        size[3] = attr.value.replace(/px$/, '');\r\n                    }\r\n                }\r\n                else {\r\n                    switch (attr.fullname) {\r\n                        case 'x':\r\n                            size[0] = attr.value.replace(/px$/, '');\r\n                            break;\r\n                        case 'y':\r\n                            size[1] = attr.value.replace(/px$/, '');\r\n                            break;\r\n                        case 'width':\r\n                            size[2] = attr.value.replace(/px$/, '');\r\n                            break;\r\n                        case 'height':\r\n                            size[3] = attr.value.replace(/px$/, '');\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n            // x、y、width、height 可以是不同的单位，只有当单位是 px 且和 viewBox 各个位置相等时，才可以移除 viewBox\r\n            if (ramda_1.equals(size, viewBox.map(s => `${s}`))) {\r\n                node.removeAttribute('viewBox');\r\n            }\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/rm-viewbox.ts?");

/***/ }),

/***/ "./src/slimming/rules/rm-xml-decl.ts":
/*!*******************************************!*\
  !*** ./src/slimming/rules/rm-xml-decl.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst index_1 = __webpack_require__(/*! ../../node/index */ \"./src/node/index.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.rmXMLDecl = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        traversal_node_1.traversalNode(ramda_1.propEq('nodeType', index_1.NodeType.XMLDecl), rm_node_1.rmNode, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/rm-xml-decl.ts?");

/***/ }),

/***/ "./src/slimming/rules/rm-xmlns.ts":
/*!****************************************!*\
  !*** ./src/slimming/rules/rm-xmlns.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nexports.rmXMLNS = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        const traversalNode = (node, nsStack) => {\r\n            if (is_tag_1.isTag(node)) {\r\n                const _node = node;\r\n                const xmlnsObj = {};\r\n                Object.assign(xmlnsObj, nsStack[nsStack.length - 1]);\r\n                // 首先判断节点是否存在命名空间\r\n                if (node.namespace) {\r\n                    if (xmlnsObj.hasOwnProperty(node.namespace)) {\r\n                        xmlnsObj[node.namespace].count++;\r\n                    }\r\n                    else {\r\n                        rm_node_1.rmNode(node);\r\n                        return;\r\n                    }\r\n                }\r\n                // 遍历节点属性的命名空间\r\n                for (let i = _node.attributes.length; i--;) {\r\n                    const attr = _node.attributes[i];\r\n                    if (attr.namespace === 'xmlns') {\r\n                        xmlnsObj[attr.name] = {\r\n                            target: node,\r\n                            count: 0,\r\n                        };\r\n                    }\r\n                    else if (attr.namespace) {\r\n                        if (xmlnsObj.hasOwnProperty(attr.namespace)) {\r\n                            xmlnsObj[attr.namespace].count++;\r\n                        }\r\n                        else {\r\n                            node.removeAttribute(attr.fullname);\r\n                        }\r\n                    }\r\n                }\r\n                // 压栈，并遍历子节点\r\n                nsStack.push(xmlnsObj);\r\n                _node.childNodes.forEach(childNode => {\r\n                    traversalNode(childNode, nsStack);\r\n                });\r\n                Object.keys(xmlnsObj).forEach(ns => {\r\n                    if (xmlnsObj[ns].count === 0 && xmlnsObj[ns].target === node) {\r\n                        node.removeAttribute(`xmlns:${ns}`);\r\n                    }\r\n                });\r\n                nsStack.pop();\r\n            }\r\n        };\r\n        dom.childNodes.forEach(node => {\r\n            traversalNode(node, [{}]);\r\n        });\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/rm-xmlns.ts?");

/***/ }),

/***/ "./src/slimming/rules/shorten-class.ts":
/*!*********************************************!*\
  !*** ./src/slimming/rules/shorten-class.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst create_shorten_id_1 = __webpack_require__(/*! ../algorithm/create-shorten-id */ \"./src/slimming/algorithm/create-shorten-id.ts\");\r\nconst mix_white_space_1 = __webpack_require__(/*! ../utils/mix-white-space */ \"./src/slimming/utils/mix-white-space.ts\");\r\nconst traversal_obj_1 = __webpack_require__(/*! ../utils/traversal-obj */ \"./src/slimming/utils/traversal-obj.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst classSelectorReg = /\\.([^,\\*#>+~:{\\s\\[\\.]+)/gi;\r\nexports.shortenClass = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        const parsedCss = dom.stylesheet;\r\n        if (parsedCss) {\r\n            let si = 0;\r\n            const classList = {};\r\n            const shorten = (key) => {\r\n                if (classList.hasOwnProperty(key)) {\r\n                    return classList[key][0];\r\n                }\r\n                const sid = create_shorten_id_1.createShortenID(si++);\r\n                classList[key] = [sid, false];\r\n                return sid;\r\n            };\r\n            // 取出所有被引用的 class ，并缩短\r\n            const cssRules = parsedCss.stylesheet;\r\n            traversal_obj_1.traversalObj(ramda_1.has('selectors'), (ruleItem) => {\r\n                const selectors = ruleItem.selectors;\r\n                if (selectors) {\r\n                    selectors.forEach((selector, selectorIndex) => {\r\n                        selectors[selectorIndex] = selector.replace(classSelectorReg, (m, p) => `.${shorten(p)}`);\r\n                    });\r\n                }\r\n            }, cssRules.rules);\r\n            // 查找 dom 树，找到被引用的 class ，替换为缩短后的值\r\n            traversal_node_1.traversalNode(is_tag_1.isTag, node => {\r\n                const classAttr = node.getAttribute('class');\r\n                if (classAttr !== null) {\r\n                    const className = mix_white_space_1.mixWhiteSpace(classAttr.trim()).split(/\\s+/);\r\n                    for (let ci = className.length; ci--;) {\r\n                        if (classList.hasOwnProperty(className[ci])) {\r\n                            const cName = classList[className[ci]][0];\r\n                            classList[className[ci]][1] = true;\r\n                            className[ci] = cName;\r\n                        }\r\n                        else {\r\n                            className.splice(ci, 1);\r\n                        }\r\n                    }\r\n                    if (className.length) {\r\n                        node.setAttribute('class', className.join(' '));\r\n                    }\r\n                    else {\r\n                        node.removeAttribute('class');\r\n                    }\r\n                }\r\n            }, dom);\r\n            // 最后移除不存在的 class 引用\r\n            Object.values(classList).forEach(item => {\r\n                if (item[1]) {\r\n                    return;\r\n                }\r\n                const reg = new RegExp(`\\\\.${item[0]}(?=[,\\\\*#>+~:{\\\\s\\\\[\\\\.]|$)`);\r\n                traversal_obj_1.traversalObj(ramda_1.has('selectors'), (ruleItem, path) => {\r\n                    const selectors = ruleItem.selectors;\r\n                    if (selectors) {\r\n                        for (let i = selectors.length; i--;) {\r\n                            if (reg.test(selectors[i])) {\r\n                                selectors.splice(i, 1);\r\n                            }\r\n                        }\r\n                        if (!selectors.length) {\r\n                            const parent = path[path.length - 1];\r\n                            parent.splice(parent.indexOf(ruleItem), 1);\r\n                        }\r\n                    }\r\n                }, cssRules.rules);\r\n            });\r\n        }\r\n        else {\r\n            // 如果不存在样式表，则直接移除所有的 class 属性\r\n            traversal_node_1.traversalNode(is_tag_1.isTag, node => {\r\n                node.removeAttribute('class');\r\n            }, dom);\r\n        }\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/shorten-class.ts?");

/***/ }),

/***/ "./src/slimming/rules/shorten-color.ts":
/*!*********************************************!*\
  !*** ./src/slimming/rules/shorten-color.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst exec_1 = __webpack_require__(/*! ../color/exec */ \"./src/slimming/color/exec.ts\");\r\nconst rgb2hsl_1 = __webpack_require__(/*! ../color/rgb2hsl */ \"./src/slimming/color/rgb2hsl.ts\");\r\nconst const_1 = __webpack_require__(/*! ../const */ \"./src/slimming/const/index.ts\");\r\nconst regular_attr_1 = __webpack_require__(/*! ../const/regular-attr */ \"./src/slimming/const/regular-attr.ts\");\r\nconst exec_2 = __webpack_require__(/*! ../style/exec */ \"./src/slimming/style/exec.ts\");\r\nconst stringify_1 = __webpack_require__(/*! ../style/stringify */ \"./src/slimming/style/stringify.ts\");\r\nconst fillin_1 = __webpack_require__(/*! ../utils/fillin */ \"./src/slimming/utils/fillin.ts\");\r\nconst shorten_percent_1 = __webpack_require__(/*! ../utils/shorten-percent */ \"./src/slimming/utils/shorten-percent.ts\");\r\nconst tohex_1 = __webpack_require__(/*! ../utils/tohex */ \"./src/slimming/utils/tohex.ts\");\r\nconst traversal_obj_1 = __webpack_require__(/*! ../utils/traversal-obj */ \"./src/slimming/utils/traversal-obj.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst operateHex = ramda_1.pipe(tohex_1.toHex, ramda_1.toLower, fillin_1.fillIn(2));\r\nconst alphaMap = {\r\n    '100': 255,\r\n    '99': 252,\r\n    '98': 250,\r\n    '97': 247,\r\n    '96': 245,\r\n    '95': 242,\r\n    '94': 240,\r\n    '93': 237,\r\n    '92': 235,\r\n    '91': 232,\r\n    '90': 230,\r\n    '89': 227,\r\n    '88': 224,\r\n    '87': 222,\r\n    '86': 219,\r\n    '85': 217,\r\n    '84': 214,\r\n    '83': 212,\r\n    '82': 209,\r\n    '81': 207,\r\n    '80': 204,\r\n    '79': 201,\r\n    '78': 199,\r\n    '77': 196,\r\n    '76': 194,\r\n    '75': 191,\r\n    '74': 189,\r\n    '73': 186,\r\n    '72': 184,\r\n    '71': 181,\r\n    '70': 179,\r\n    '69': 176,\r\n    '68': 173,\r\n    '67': 171,\r\n    '66': 168,\r\n    '65': 166,\r\n    '64': 163,\r\n    '63': 161,\r\n    '62': 158,\r\n    '61': 156,\r\n    '60': 153,\r\n    '59': 150,\r\n    '58': 148,\r\n    '57': 145,\r\n    '56': 143,\r\n    '55': 140,\r\n    '54': 138,\r\n    '53': 135,\r\n    '52': 133,\r\n    '51': 130,\r\n    '50': 128,\r\n    '49': 125,\r\n    '48': 122,\r\n    '47': 120,\r\n    '46': 117,\r\n    '45': 115,\r\n    '44': 112,\r\n    '43': 110,\r\n    '42': 107,\r\n    '41': 105,\r\n    '40': 102,\r\n    '39': 99,\r\n    '38': 97,\r\n    '37': 94,\r\n    '36': 92,\r\n    '35': 89,\r\n    '34': 87,\r\n    '33': 84,\r\n    '32': 82,\r\n    '31': 79,\r\n    '30': 77,\r\n    '29': 74,\r\n    '28': 71,\r\n    '27': 69,\r\n    '26': 66,\r\n    '25': 64,\r\n    '24': 61,\r\n    '23': 59,\r\n    '22': 56,\r\n    '21': 54,\r\n    '20': 51,\r\n    '19': 48,\r\n    '18': 46,\r\n    '17': 43,\r\n    '16': 41,\r\n    '15': 38,\r\n    '14': 36,\r\n    '13': 33,\r\n    '12': 31,\r\n    '11': 28,\r\n    '10': 26,\r\n    '9': 23,\r\n    '8': 20,\r\n    '7': 18,\r\n    '6': 15,\r\n    '5': 13,\r\n    '4': 10,\r\n    '3': 8,\r\n    '2': 5,\r\n    '1': 3,\r\n    '0': 0,\r\n};\r\nconst shortenMap = {\r\n    '#f0ffff': 'azure',\r\n    '#f5f5dc': 'beige',\r\n    '#ffe4c4': 'bisque',\r\n    '#a52a2a': 'brown',\r\n    '#ff7f50': 'coral',\r\n    '#ffd700': 'gold',\r\n    '#808080': 'gray',\r\n    '#008000': 'green',\r\n    '#4b0082': 'indigo',\r\n    '#fffff0': 'ivory',\r\n    '#f0e68c': 'khaki',\r\n    '#faf0e6': 'linen',\r\n    '#800000': 'maroon',\r\n    '#000080': 'navy',\r\n    '#808000': 'olive',\r\n    '#ffa500': 'orange',\r\n    '#da70d6': 'orchid',\r\n    '#cd853f': 'peru',\r\n    '#ffc0cb': 'pink',\r\n    '#dda0dd': 'plum',\r\n    '#800080': 'purple',\r\n    '#f00': 'red',\r\n    '#fa8072': 'salmon',\r\n    '#a0522d': 'sienna',\r\n    '#c0c0c0': 'silver',\r\n    '#fffafa': 'snow',\r\n    '#d2b48c': 'tan',\r\n    '#008080': 'teal',\r\n    '#ff6347': 'tomato',\r\n    '#ee82ee': 'violet',\r\n    '#f5deb3': 'wheat',\r\n};\r\nconst shortenReg = new RegExp(`(?:${Object.keys(shortenMap).join('|')})(?=[^0-9a-f]|$)`, 'gi');\r\nconst formatColor = (rgba, str, digit) => {\r\n    const color = exec_1.exec(str, digit);\r\n    let s = color.origin;\r\n    if (color.valid) {\r\n        if (color.a < 1) {\r\n            // tslint:disable:prefer-conditional-expression\r\n            if (rgba) {\r\n                s = `#${operateHex(color.r)}${operateHex(color.g)}${operateHex(color.b)}${ramda_1.has(`${color.a * const_1.Hundred}`, alphaMap) ? operateHex(alphaMap[`${color.a * const_1.Hundred}`]) : operateHex(Math.round(color.a * const_1.FF))}`;\r\n            }\r\n            else {\r\n                if (color.r === 0 && color.g === 0 && color.b === 0 && color.a === 0) {\r\n                    s = 'transparent';\r\n                }\r\n                else {\r\n                    const hslColor = rgb2hsl_1.rgb2hsl(color);\r\n                    const alpha = shorten_percent_1.shortenPercent(digit, color.a);\r\n                    const rgb = `rgb(${color.r},${color.g},${color.b},${alpha})`;\r\n                    const hsl = `hsl(${hslColor.h},${hslColor.s}%,${hslColor.l}%,${alpha})`;\r\n                    s = hsl.length < rgb.length ? hsl : rgb;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            s = `#${operateHex(color.r)}${operateHex(color.g)}${operateHex(color.b)}`;\r\n        }\r\n        s = s.replace(/#([0-9a-f])\\1([0-9a-f])\\2([0-9a-f])\\3(?=[^0-9a-f]|$)/gi, '#$1$2$3');\r\n        s = s.replace(shortenReg, $0 => `${shortenMap[$0]}`);\r\n        if (rgba) {\r\n            s = s.replace(/#([0-9a-f])\\1([0-9a-f])\\2([0-9a-f])\\3([0-9a-f])\\4(?=[^0-9a-f]|$)/gi, '#$1$2$3$4');\r\n            s = s.replace(/^transparent$/i, '#0000');\r\n        }\r\n    }\r\n    // 如果处理后结果不理想，还返回原始字符串\r\n    if (s.length > color.origin.length) {\r\n        return color.origin;\r\n    }\r\n    return s;\r\n};\r\nexports.shortenColor = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        const { rrggbbaa, opacityDigit } = rule[1];\r\n        const digit = Math.min(opacityDigit, const_1.OPACITY_DIGIT);\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, node => {\r\n            node.attributes.forEach(attr => {\r\n                if (regular_attr_1.regularAttr[attr.fullname].maybeColor) {\r\n                    attr.value = formatColor(rrggbbaa, attr.value, digit);\r\n                }\r\n                else if (attr.fullname === 'style') {\r\n                    const style = exec_2.execStyle(attr.value);\r\n                    style.forEach(s => {\r\n                        if (regular_attr_1.regularAttr[s.fullname].maybeColor) {\r\n                            s.value = formatColor(rrggbbaa, s.value, digit);\r\n                        }\r\n                    });\r\n                    attr.value = stringify_1.stringifyStyle(style);\r\n                }\r\n            });\r\n        }, dom);\r\n        if (dom.stylesheet) {\r\n            // 缩短 style 标签内的颜色\r\n            const parsedCss = dom.stylesheet.stylesheet;\r\n            traversal_obj_1.traversalObj(ramda_1.both(ramda_1.has('property'), ramda_1.has('value')), (cssRule) => {\r\n                if (regular_attr_1.regularAttr[cssRule.property].maybeColor) { // 可能为颜色的属性\r\n                    cssRule.value = formatColor(rrggbbaa, cssRule.value, digit);\r\n                }\r\n            }, parsedCss.rules);\r\n        }\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/shorten-color.ts?");

/***/ }),

/***/ "./src/slimming/rules/shorten-decimal-digits.ts":
/*!******************************************************!*\
  !*** ./src/slimming/rules/shorten-decimal-digits.ts ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst definitions_1 = __webpack_require__(/*! ../const/definitions */ \"./src/slimming/const/definitions.ts\");\r\nconst regular_attr_1 = __webpack_require__(/*! ../const/regular-attr */ \"./src/slimming/const/regular-attr.ts\");\r\nconst syntax_1 = __webpack_require__(/*! ../const/syntax */ \"./src/slimming/const/syntax.ts\");\r\nconst tofixed_1 = __webpack_require__(/*! ../math/tofixed */ \"./src/slimming/math/tofixed.ts\");\r\nconst exec_1 = __webpack_require__(/*! ../style/exec */ \"./src/slimming/style/exec.ts\");\r\nconst stringify_1 = __webpack_require__(/*! ../style/stringify */ \"./src/slimming/style/stringify.ts\");\r\nconst shorten_number_1 = __webpack_require__(/*! ../utils/shorten-number */ \"./src/slimming/utils/shorten-number.ts\");\r\nconst shorten_number_list_1 = __webpack_require__(/*! ../utils/shorten-number-list */ \"./src/slimming/utils/shorten-number-list.ts\");\r\nconst traversal_obj_1 = __webpack_require__(/*! ../utils/traversal-obj */ \"./src/slimming/utils/traversal-obj.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\n// 移除掉正、负号前面的逗号，移除掉0.前面的0，移除掉.1,.1或e1,.1这种case中间的逗号\r\nconst doShorten = ramda_1.curry((digit, val) => shorten_number_list_1.shortenNumberList(val.replace(syntax_1.numberGlobal, s => `${shorten_number_1.shortenNumber(tofixed_1.toFixed(digit, parseFloat(s)))}`)));\r\nexports.shortenDecimalDigits = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        const { sizeDigit, angelDigit } = rule[1];\r\n        const fuzzyDigit = doShorten(sizeDigit);\r\n        const accurateDigit = doShorten(angelDigit);\r\n        if (dom.stylesheet) {\r\n            // 缩短 style 标签内的数值\r\n            const parsedCss = dom.stylesheet.stylesheet;\r\n            traversal_obj_1.traversalObj(ramda_1.both(ramda_1.has('property'), ramda_1.has('value')), (cssRule) => {\r\n                if (regular_attr_1.regularAttr[cssRule.property].maybeSizeNumber) { // 可以模糊处理的数字\r\n                    cssRule.value = fuzzyDigit(cssRule.value);\r\n                }\r\n                else if (regular_attr_1.regularAttr[cssRule.property].maybeAccurateNumber) { // 需要较精确的数字\r\n                    cssRule.value = accurateDigit(cssRule.value);\r\n                }\r\n            }, parsedCss.rules);\r\n        }\r\n        // TODO 百分比和小数互转\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, node => {\r\n            // 先取出来 attributeName 属性\r\n            const attributeName = node.getAttribute('attributeName');\r\n            // 缩短节点属性的数值\r\n            node.attributes.forEach(attr => {\r\n                syntax_1.numberGlobal.lastIndex = 0;\r\n                if (regular_attr_1.regularAttr[attr.fullname].maybeSizeNumber) { // 可以模糊处理的数字\r\n                    attr.value = fuzzyDigit(attr.value);\r\n                }\r\n                else if (regular_attr_1.regularAttr[attr.fullname].maybeAccurateNumber) { // 需要较精确的数字\r\n                    attr.value = accurateDigit(attr.value);\r\n                }\r\n                else if (definitions_1.animationAttributes.includes(attr.fullname)) { // 动画处理的属性，需要根据 attributeName 属性判断\r\n                    if (attributeName) {\r\n                        if (regular_attr_1.regularAttr[attributeName].maybeSizeNumber) {\r\n                            attr.value = fuzzyDigit(attr.value);\r\n                        }\r\n                        else if (regular_attr_1.regularAttr[attributeName].maybeAccurateNumber) {\r\n                            attr.value = accurateDigit(attr.value);\r\n                        }\r\n                    }\r\n                }\r\n                else if (attr.fullname === 'style') { // css 样式处理，和属性类似\r\n                    const style = exec_1.execStyle(attr.value);\r\n                    style.forEach(s => {\r\n                        syntax_1.numberGlobal.lastIndex = 0;\r\n                        if (regular_attr_1.regularAttr[s.fullname].maybeSizeNumber) {\r\n                            s.value = fuzzyDigit(s.value);\r\n                        }\r\n                        else if (regular_attr_1.regularAttr[s.fullname].maybeAccurateNumber) {\r\n                            s.value = accurateDigit(s.value);\r\n                        }\r\n                    });\r\n                    attr.value = stringify_1.stringifyStyle(style);\r\n                }\r\n            });\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/shorten-decimal-digits.ts?");

/***/ }),

/***/ "./src/slimming/rules/shorten-defs.ts":
/*!********************************************!*\
  !*** ./src/slimming/rules/shorten-defs.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst regular_attr_1 = __webpack_require__(/*! ../const/regular-attr */ \"./src/slimming/const/regular-attr.ts\");\r\nconst syntax_1 = __webpack_require__(/*! ../const/syntax */ \"./src/slimming/const/syntax.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst get_ancestor_1 = __webpack_require__(/*! ../xml/get-ancestor */ \"./src/slimming/xml/get-ancestor.ts\");\r\nconst checkSub = (node, IDList) => {\r\n    let hasId = false;\r\n    for (let i = node.attributes.length; i--;) {\r\n        const attr = node.attributes[i];\r\n        if (attr.fullname === 'id') {\r\n            if (IDList[attr.value]) {\r\n                hasId = true;\r\n                IDList[attr.value].tag = node;\r\n            }\r\n            else {\r\n                node.removeAttribute(attr.fullname);\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    if (!hasId) {\r\n        for (let ci = node.childNodes.length; ci--;) {\r\n            const childNode = node.childNodes[ci];\r\n            if (is_tag_1.isTag(childNode)) {\r\n                checkSub(childNode, IDList);\r\n            }\r\n            else {\r\n                rm_node_1.rmNode(childNode);\r\n            }\r\n        }\r\n        if (!node.childNodes.length) {\r\n            rm_node_1.rmNode(node);\r\n        }\r\n    }\r\n};\r\nexports.shortenDefs = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        let firstDefs;\r\n        // 首先合并 defs 标签\r\n        traversal_node_1.traversalNode(ramda_1.propEq('nodeName', 'defs'), node => {\r\n            if (firstDefs) {\r\n                node.childNodes.forEach(childNode => {\r\n                    firstDefs.appendChild(childNode);\r\n                });\r\n                rm_node_1.rmNode(node);\r\n            }\r\n            else {\r\n                firstDefs = node;\r\n            }\r\n        }, dom);\r\n        if (firstDefs) {\r\n            // 取出所有被引用的 ID\r\n            const IDList = {};\r\n            traversal_node_1.traversalNode(is_tag_1.isTag, node => {\r\n                node.attributes.forEach(attr => {\r\n                    if (regular_attr_1.regularAttr[attr.fullname].maybeFuncIRI) {\r\n                        const firi = syntax_1.funcIRIToID.exec(attr.value);\r\n                        if (firi) {\r\n                            if (!IDList[firi[2]]) {\r\n                                IDList[firi[2]] = {\r\n                                    iri: [],\r\n                                };\r\n                            }\r\n                            IDList[firi[2]].iri.push([node, attr.fullname]);\r\n                        }\r\n                    }\r\n                    else if (regular_attr_1.regularAttr[attr.fullname].maybeIRI) {\r\n                        const iri = syntax_1.IRIFullMatch.exec(attr.value);\r\n                        if (iri) {\r\n                            if (!IDList[iri[1]]) {\r\n                                IDList[iri[1]] = {\r\n                                    iri: [],\r\n                                };\r\n                            }\r\n                            IDList[iri[1]].iri.push([node, attr.fullname]);\r\n                        }\r\n                    }\r\n                });\r\n            }, dom);\r\n            checkSub(firstDefs, IDList);\r\n            // TODO 把 defs 直接应用\r\n            Object.values(IDList).forEach(item => {\r\n                if (item.tag) {\r\n                    // 有可能引用对象存在于 defs 内部，并且已被移除\r\n                    for (let i = item.iri.length; i--;) {\r\n                        const [tag] = item.iri[i];\r\n                        // 判断是否已从文档中移除\r\n                        if (!get_ancestor_1.getAncestor(tag, (node) => node.nodeName === '#document')) {\r\n                            item.iri.splice(i, 1);\r\n                        }\r\n                    }\r\n                    if (!item.iri.length) {\r\n                        rm_node_1.rmNode(item.tag);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/shorten-defs.ts?");

/***/ }),

/***/ "./src/slimming/rules/shorten-id.ts":
/*!******************************************!*\
  !*** ./src/slimming/rules/shorten-id.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst create_shorten_id_1 = __webpack_require__(/*! ../algorithm/create-shorten-id */ \"./src/slimming/algorithm/create-shorten-id.ts\");\r\nconst regular_attr_1 = __webpack_require__(/*! ../const/regular-attr */ \"./src/slimming/const/regular-attr.ts\");\r\nconst syntax_1 = __webpack_require__(/*! ../const/syntax */ \"./src/slimming/const/syntax.ts\");\r\nconst traversal_obj_1 = __webpack_require__(/*! ../utils/traversal-obj */ \"./src/slimming/utils/traversal-obj.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst idSelectorReg = /#([^,\\*#>+~:{\\s\\[\\.]+)/gi;\r\nexports.shortenID = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        let si = 0;\r\n        const IDList = {};\r\n        const shorten = (node, attrname, key) => {\r\n            if (IDList.hasOwnProperty(key)) {\r\n                return IDList[key][0];\r\n            }\r\n            const sid = create_shorten_id_1.createShortenID(si++);\r\n            IDList[key] = [sid, node, attrname];\r\n            return sid;\r\n        };\r\n        let cssRules;\r\n        // 取出 ID 选择器，并缩短\r\n        if (dom.stylesheet) {\r\n            cssRules = dom.stylesheet.stylesheet;\r\n            traversal_obj_1.traversalObj(ramda_1.has('selectors'), (ruleItem) => {\r\n                const selectors = ruleItem.selectors;\r\n                if (selectors) {\r\n                    selectors.forEach((selector, selectorIndex) => {\r\n                        selectors[selectorIndex] = selector.replace(idSelectorReg, (m, p) => `#${shorten(dom.styletag, null, p)}`);\r\n                    });\r\n                }\r\n            }, cssRules.rules);\r\n        }\r\n        // 取出所有被属性引用的 ID ，并缩短\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, node => {\r\n            node.attributes.forEach(attr => {\r\n                if (regular_attr_1.regularAttr[attr.fullname].maybeFuncIRI) {\r\n                    const firi = syntax_1.funcIRIToID.exec(attr.value);\r\n                    if (firi) {\r\n                        attr.value = `url(#${shorten(node, attr.fullname, firi[2])})`;\r\n                    }\r\n                }\r\n                else if (regular_attr_1.regularAttr[attr.fullname].maybeIRI) {\r\n                    const iri = syntax_1.IRIFullMatch.exec(attr.value);\r\n                    if (iri) {\r\n                        attr.value = `#${shorten(node, attr.fullname, iri[1])}`;\r\n                    }\r\n                }\r\n            });\r\n        }, dom);\r\n        // 查找 dom 树，找到被引用的 ID ，替换为缩短后的值\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, (node) => {\r\n            const ID = node.getAttribute('id');\r\n            if (ID !== null) {\r\n                if (IDList.hasOwnProperty(ID)) {\r\n                    const id = IDList[ID][0];\r\n                    // tslint:disable-next-line:no-dynamic-delete\r\n                    delete IDList[ID];\r\n                    node.setAttribute('id', id);\r\n                }\r\n                else {\r\n                    node.removeAttribute('id');\r\n                }\r\n            }\r\n        }, dom);\r\n        // 最后移除不存在的 ID 引用\r\n        Object.values(IDList).forEach(item => {\r\n            if (typeof item[2] === 'string') {\r\n                item[1].removeAttribute(item[2]);\r\n            }\r\n            else {\r\n                const reg = new RegExp(`#${item[0]}(?=[,\\\\*#>+~:{\\\\s\\\\[\\\\.]|$)`);\r\n                traversal_obj_1.traversalObj(ramda_1.has('selectors'), (ruleItem, path) => {\r\n                    const selectors = ruleItem.selectors;\r\n                    if (selectors) {\r\n                        for (let i = selectors.length; i--;) {\r\n                            if (reg.test(selectors[i])) {\r\n                                selectors.splice(i, 1);\r\n                            }\r\n                        }\r\n                        if (!selectors.length) {\r\n                            const parent = path[path.length - 1];\r\n                            parent.splice(parent.indexOf(ruleItem), 1);\r\n                        }\r\n                    }\r\n                }, cssRules.rules);\r\n            }\r\n        });\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/shorten-id.ts?");

/***/ }),

/***/ "./src/slimming/rules/shorten-shape.ts":
/*!*********************************************!*\
  !*** ./src/slimming/rules/shorten-shape.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst douglas_peucker_1 = __webpack_require__(/*! ../algorithm/douglas-peucker */ \"./src/slimming/algorithm/douglas-peucker.ts\");\r\nconst definitions_1 = __webpack_require__(/*! ../const/definitions */ \"./src/slimming/const/definitions.ts\");\r\nconst syntax_1 = __webpack_require__(/*! ../const/syntax */ \"./src/slimming/const/syntax.ts\");\r\nconst exec_numberlist_1 = __webpack_require__(/*! ../utils/exec-numberlist */ \"./src/slimming/utils/exec-numberlist.ts\");\r\nconst shorten_number_1 = __webpack_require__(/*! ../utils/shorten-number */ \"./src/slimming/utils/shorten-number.ts\");\r\nconst shorten_number_list_1 = __webpack_require__(/*! ../utils/shorten-number-list */ \"./src/slimming/utils/shorten-number-list.ts\");\r\nconst create_1 = __webpack_require__(/*! ../xml/create */ \"./src/slimming/xml/create.ts\");\r\nconst exec_style_tree_1 = __webpack_require__(/*! ../xml/exec-style-tree */ \"./src/slimming/xml/exec-style-tree.ts\");\r\nconst get_attr_1 = __webpack_require__(/*! ../xml/get-attr */ \"./src/slimming/xml/get-attr.ts\");\r\nconst rm_attrs_1 = __webpack_require__(/*! ../xml/rm-attrs */ \"./src/slimming/xml/rm-attrs.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst pureNumOrWithPx = new RegExp(`^${syntax_1.numberPattern}(?:px)?$`);\r\nconst startWithNumber = new RegExp(`^(${syntax_1.numberPattern})`);\r\nconst formatRect = (node) => {\r\n    let width = get_attr_1.getAttr(node, 'width', '0');\r\n    let height = get_attr_1.getAttr(node, 'height', '0');\r\n    const widthExec = startWithNumber.exec(width);\r\n    const heightExec = startWithNumber.exec(height);\r\n    // 如果 width 或 height 不合规范，直接移除\r\n    if (!widthExec || !heightExec || +widthExec[1] <= 0 || +heightExec[1] <= 0) {\r\n        node.nodeName = 'remove';\r\n        return;\r\n    }\r\n    // 如果 rx 或 ry 存在，不能转换为 path\r\n    const rx = get_attr_1.getAttr(node, 'rx', 'auto');\r\n    const ry = get_attr_1.getAttr(node, 'ry', 'auto');\r\n    const rxExec = startWithNumber.exec(rx);\r\n    const ryExec = startWithNumber.exec(ry);\r\n    if (rxExec && +rxExec[1] > 0 && (!ryExec || +ryExec[1] !== 0)) {\r\n        return;\r\n    }\r\n    if (ryExec && +ryExec[1] > 0 && (!rxExec || +rxExec[1] !== 0)) {\r\n        return;\r\n    }\r\n    let x = get_attr_1.getAttr(node, 'x', '0');\r\n    let y = get_attr_1.getAttr(node, 'y', '0');\r\n    // 如果不是 px 单位，不能转换为 path\r\n    if (!pureNumOrWithPx.test(width) || !pureNumOrWithPx.test(height) || !pureNumOrWithPx.test(x) || !pureNumOrWithPx.test(y)) {\r\n        return;\r\n    }\r\n    rm_attrs_1.rmAttrs(node, ['x', 'y', 'width', 'height', 'rx', 'ry']);\r\n    width = shorten_number_1.shortenNumber(+widthExec[1]);\r\n    height = shorten_number_1.shortenNumber(+heightExec[1]);\r\n    x = shorten_number_1.shortenNumber(+x.replace('px', ''));\r\n    y = shorten_number_1.shortenNumber(+y.replace('px', ''));\r\n    node.nodeName = 'path';\r\n    // 此处考虑到宽和高的字节数差异，应该取较小的那种\r\n    const hvh = shorten_number_list_1.shortenNumberList(`M${x},${y}h${width}v${height}h-${width}z`);\r\n    const vhv = shorten_number_list_1.shortenNumberList(`M${x},${y}v${height}h${width}v-${height}z`);\r\n    node.setAttribute('d', vhv.length < hvh.length ? vhv : hvh);\r\n};\r\nconst formatLine = (node) => {\r\n    const stroke = get_attr_1.getAttr(node, 'stroke', '');\r\n    const strokeWidth = get_attr_1.getAttr(node, 'stroke-width', '1');\r\n    const swExec = startWithNumber.exec(strokeWidth);\r\n    // 是否存在 marker 引用\r\n    const hasMarker = get_attr_1.getAttr(node, 'marker-start', 'none') !== 'none' || get_attr_1.getAttr(node, 'marker-mid', 'none') !== 'none' || get_attr_1.getAttr(node, 'marker-end', 'none') !== 'none';\r\n    // 如果 stroke 或 stroke-width 不合规范，直接移除\r\n    if (!hasMarker && (!stroke || stroke === 'none' || !swExec || +swExec[1] <= 0)) {\r\n        node.nodeName = 'remove';\r\n        return;\r\n    }\r\n    const shapeAttr = {\r\n        x1: '0',\r\n        y1: '0',\r\n        x2: '0',\r\n        y2: '0',\r\n    };\r\n    Object.keys(shapeAttr).forEach(key => {\r\n        const value = node.getAttribute(key);\r\n        if (value && startWithNumber.test(value)) {\r\n            shapeAttr[key] = value;\r\n        }\r\n        node.removeAttribute(key);\r\n    });\r\n    // 是否存在 stroke\r\n    const hasStroke = get_attr_1.getAttr(node, 'stroke', 'none') !== 'none' && get_attr_1.getAttr(node, 'stroke-width', '1') !== '0';\r\n    // 是否存在 stroke-linecap\r\n    const hasStrokeCap = get_attr_1.getAttr(node, 'stroke-linecap', 'butt') !== 'butt';\r\n    // 如果没有发生移动，直接移除\r\n    if (shapeAttr.x1 === shapeAttr.x2 && shapeAttr.y1 === shapeAttr.y2 && !hasMarker && (!hasStroke || !hasStrokeCap)) {\r\n        node.nodeName = 'remove';\r\n        return;\r\n    }\r\n    // 如果不是 px 单位，不能转换为 path\r\n    if (pureNumOrWithPx.test(shapeAttr.x1) && pureNumOrWithPx.test(shapeAttr.y1) && pureNumOrWithPx.test(shapeAttr.x2) && pureNumOrWithPx.test(shapeAttr.y2)) {\r\n        node.nodeName = 'path';\r\n        node.setAttribute('d', shorten_number_list_1.shortenNumberList(`M${+shapeAttr.x1},${+shapeAttr.y1},${+shapeAttr.x2},${+shapeAttr.y2}`));\r\n    }\r\n};\r\nconst formatPoly = (thinning, node, addZ) => {\r\n    node.nodeName = 'path';\r\n    let d = '';\r\n    if (node.hasAttribute('points')) {\r\n        let points = exec_numberlist_1.execNumberList(node.getAttribute('points'));\r\n        // 是否存在 marker 引用\r\n        const hasMarker = get_attr_1.getAttr(node, 'marker-start', 'none') !== 'none' || get_attr_1.getAttr(node, 'marker-mid', 'none') !== 'none' || get_attr_1.getAttr(node, 'marker-end', 'none') !== 'none';\r\n        // 是否存在 stroke\r\n        const hasStroke = get_attr_1.getAttr(node, 'stroke', 'none') !== 'none' && get_attr_1.getAttr(node, 'stroke-width', '1') !== '0';\r\n        // 是否存在 stroke-linecap\r\n        const hasStrokeCap = get_attr_1.getAttr(node, 'stroke-linecap', 'butt') !== 'butt';\r\n        if (points.length % 2 === 1) {\r\n            points.pop();\r\n        }\r\n        if (thinning) {\r\n            points = douglas_peucker_1.douglasPeucker(thinning, points);\r\n        }\r\n        node.removeAttribute('points');\r\n        // 有两个以上节点，或者具有 marker 或者是具有 stroke-linecap 的 polygon\r\n        if (points.length > 2 || hasMarker || (hasStroke && hasStrokeCap && addZ)) {\r\n            d = shorten_number_list_1.shortenNumberList(`M${points.map(shorten_number_1.shortenNumber).join(',')}`);\r\n            if (addZ) {\r\n                d += 'z';\r\n            }\r\n        }\r\n    }\r\n    if (d) {\r\n        node.setAttribute('d', d);\r\n    }\r\n    else {\r\n        // 没有节点或者没有 points 属性，直接移除当前 node\r\n        node.nodeName = 'remove';\r\n    }\r\n};\r\nconst ellipseToCircle = (node, r) => {\r\n    node.nodeName = 'circle';\r\n    node.setAttribute('r', r.replace(syntax_1.numberGlobal, s => shorten_number_1.shortenNumber(+s)));\r\n    rm_attrs_1.rmAttrs(node, ['rx', 'ry']);\r\n};\r\nconst formatEllipse = (node, originNode) => {\r\n    const rx = get_attr_1.getAttr(node, 'rx', '');\r\n    const ry = get_attr_1.getAttr(node, 'ry', '');\r\n    const rxExec = startWithNumber.exec(rx);\r\n    const ryExec = startWithNumber.exec(ry);\r\n    // 如果 rx 或 ry 不合规范，直接移除\r\n    if (!rxExec || !ryExec || +rxExec[1] <= 0 || +ryExec[1] <= 0) {\r\n        node.nodeName = 'remove';\r\n        return;\r\n    }\r\n    if (rx === ry) {\r\n        ellipseToCircle(node, rx);\r\n    }\r\n};\r\nconst formatCircle = (node, originNode) => {\r\n    const r = get_attr_1.getAttr(node, 'r', '');\r\n    const rExec = startWithNumber.exec(r);\r\n    if (!rExec || +rExec[1] <= 0) {\r\n        node.nodeName = 'remove';\r\n    }\r\n};\r\nexports.shortenShape = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        exec_style_tree_1.execStyleTree(dom);\r\n        const { thinning, } = rule[1];\r\n        traversal_node_1.traversalNode(node => definitions_1.shapeElements.includes(node.nodeName), (node) => {\r\n            const cloneNode = node.cloneNode();\r\n            cloneNode.styles = node.styles;\r\n            switch (node.nodeName) {\r\n                case 'rect':\r\n                    formatRect(cloneNode);\r\n                    break;\r\n                case 'line':\r\n                    formatLine(cloneNode);\r\n                    break;\r\n                case 'polyline':\r\n                    formatPoly(thinning, cloneNode, false);\r\n                    break;\r\n                case 'polygon':\r\n                    formatPoly(thinning, cloneNode, true);\r\n                    break;\r\n                case 'ellipse':\r\n                    formatEllipse(cloneNode, node);\r\n                    break;\r\n                case 'circle':\r\n                    formatCircle(cloneNode, node);\r\n                    break;\r\n                default:\r\n                    // 路径只要判断 d 属性是否存在即可\r\n                    cloneNode.nodeName = node.getAttribute('d') ? 'notneed' : 'remove';\r\n                    break;\r\n            }\r\n            if (cloneNode.nodeName === 'remove') {\r\n                rm_node_1.rmNode(node);\r\n            }\r\n            else if (cloneNode.nodeName !== node.nodeName && create_1.createTag(cloneNode).length <= create_1.createTag(node).length) {\r\n                Object.assign(node, cloneNode);\r\n            }\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/shorten-shape.ts?");

/***/ }),

/***/ "./src/slimming/rules/shorten-style-attr.ts":
/*!**************************************************!*\
  !*** ./src/slimming/rules/shorten-style-attr.ts ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst definitions_1 = __webpack_require__(/*! ../const/definitions */ \"./src/slimming/const/definitions.ts\");\r\nconst regular_attr_1 = __webpack_require__(/*! ../const/regular-attr */ \"./src/slimming/const/regular-attr.ts\");\r\nconst check_apply_1 = __webpack_require__(/*! ../style/check-apply */ \"./src/slimming/style/check-apply.ts\");\r\nconst exec_1 = __webpack_require__(/*! ../style/exec */ \"./src/slimming/style/exec.ts\");\r\nconst shorten_1 = __webpack_require__(/*! ../style/shorten */ \"./src/slimming/style/shorten.ts\");\r\nconst stringify_1 = __webpack_require__(/*! ../style/stringify */ \"./src/slimming/style/stringify.ts\");\r\nconst legal_value_1 = __webpack_require__(/*! ../validate/legal-value */ \"./src/slimming/validate/legal-value.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\n// 属性转 style 的临界值\r\nconst styleThreshold = 4;\r\nconst style2value = ramda_1.pipe(stringify_1.stringifyStyle, shorten_1.shortenStyle);\r\n// 某些属性可能不宜转为 style 样式，待验证\r\nconst cantTrans = (nodeName, attrName) => {\r\n    return definitions_1.onlyInAttr.hasOwnProperty(nodeName) ? definitions_1.onlyInAttr[nodeName].includes(attrName) : false;\r\n};\r\nexports.shortenStyleAttr = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        const { exchange } = rule[1];\r\n        let hasStyleTag = false;\r\n        traversal_node_1.traversalNode(ramda_1.propEq('nodeName', 'style'), () => {\r\n            hasStyleTag = true;\r\n        }, dom);\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, node => {\r\n            const attrObj = {};\r\n            let hasOnlyInCSS = false;\r\n            for (let i = node.attributes.length; i--;) {\r\n                const attr = node.attributes[i];\r\n                const attrDefine = regular_attr_1.regularAttr[attr.fullname];\r\n                if (attr.fullname === 'style') {\r\n                    const styleObj = exec_1.execStyle(attr.value);\r\n                    const styleUnique = {};\r\n                    // 逆序循环，因为 CSS 的优先级是从后往前覆盖的\r\n                    for (let si = styleObj.length; si--;) {\r\n                        const styleItem = styleObj[si];\r\n                        const styleDefine = regular_attr_1.regularAttr[styleItem.fullname];\r\n                        if (styleUnique[styleItem.fullname] // 排重逻辑单独提前\r\n                        ) {\r\n                            styleObj.splice(si, 1);\r\n                            continue;\r\n                        }\r\n                        // 有效果的 CSS3 属性要保留\r\n                        if (definitions_1.onlyInCSS.includes(styleItem.fullname) || cantTrans(node.nodeName, styleItem.fullname)) {\r\n                            hasOnlyInCSS = true;\r\n                        }\r\n                        else if (!styleDefine.couldBeStyle // 不是合法的样式属性\r\n                            ||\r\n                                !check_apply_1.checkApply(styleDefine, node, dom) // 样式继承链上不存在可应用对象\r\n                            ||\r\n                                !legal_value_1.legalValue(styleDefine, styleItem, node.nodeName) // 值不合法\r\n                        ) {\r\n                            styleObj.splice(si, 1);\r\n                            continue;\r\n                        }\r\n                        if (ramda_1.has(styleItem.fullname, attrObj)) { // 如果存在同名属性，要把被覆盖的属性移除掉\r\n                            node.removeAttribute(styleItem.fullname);\r\n                        }\r\n                        styleUnique[styleItem.fullname] = true;\r\n                        attrObj[styleItem.fullname] = styleItem.value;\r\n                    }\r\n                    if (styleObj.length) {\r\n                        attr.value = style2value(styleObj);\r\n                    }\r\n                    else {\r\n                        node.removeAttribute(attr.fullname);\r\n                    }\r\n                }\r\n                else if (attrDefine.couldBeStyle) {\r\n                    if (cantTrans(node.nodeName, attr.fullname)) {\r\n                        continue;\r\n                    }\r\n                    if (attrObj[attr.fullname] // 已被 style 属性覆盖\r\n                        ||\r\n                            !check_apply_1.checkApply(attrDefine, node, dom) // 样式继承链上不存在可应用对象\r\n                        ||\r\n                            !legal_value_1.legalValue(attrDefine, attr, node.nodeName) // 值不合法\r\n                    ) {\r\n                        node.removeAttribute(attr.fullname);\r\n                    }\r\n                    else {\r\n                        attrObj[attr.fullname] = attr.value;\r\n                    }\r\n                }\r\n            }\r\n            // TODO 连锁属性的判断\r\n            if (!hasStyleTag || exchange) {\r\n                // [warning] svg 的样式覆盖规则是 style 属性 > style 标签 > 属性，所以以下代码可能导致不正确的样式覆盖！\r\n                // 如果存在只能放在 css 中的属性，则强制属性转 style @v1.5.0+\r\n                if (hasOnlyInCSS || Object.keys(attrObj).length > styleThreshold) {\r\n                    // 属性转 style\r\n                    for (let j = node.attributes.length; j--;) {\r\n                        const attr = node.attributes[j];\r\n                        if (cantTrans(node.nodeName, attr.fullname)) {\r\n                            continue;\r\n                        }\r\n                        if (regular_attr_1.regularAttr[attr.fullname].couldBeStyle || attr.fullname === 'style') {\r\n                            node.removeAttribute(attr.fullname);\r\n                        }\r\n                    }\r\n                    node.setAttribute('style', style2value(Object.keys(attrObj).map(key => {\r\n                        return {\r\n                            name: key,\r\n                            fullname: key,\r\n                            value: attrObj[key],\r\n                        };\r\n                    })));\r\n                }\r\n                else {\r\n                    // style 转属性\r\n                    node.removeAttribute('style');\r\n                    node.attributes.forEach(attr => {\r\n                        if (ramda_1.has(attr.fullname, attrObj)) {\r\n                            // tslint:disable-next-line:no-dynamic-delete\r\n                            delete attrObj[attr.fullname];\r\n                        }\r\n                    });\r\n                    Object.keys(attrObj).forEach(name => {\r\n                        node.setAttribute(name, attrObj[name]);\r\n                    });\r\n                }\r\n            }\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/shorten-style-attr.ts?");

/***/ }),

/***/ "./src/slimming/rules/shorten-style-tag.ts":
/*!*************************************************!*\
  !*** ./src/slimming/rules/shorten-style-tag.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst regular_attr_1 = __webpack_require__(/*! ../const/regular-attr */ \"./src/slimming/const/regular-attr.ts\");\r\nconst check_apply_1 = __webpack_require__(/*! ../style/check-apply */ \"./src/slimming/style/check-apply.ts\");\r\nconst exec_selector_1 = __webpack_require__(/*! ../style/exec-selector */ \"./src/slimming/style/exec-selector.ts\");\r\nconst mix_white_space_1 = __webpack_require__(/*! ../utils/mix-white-space */ \"./src/slimming/utils/mix-white-space.ts\");\r\nconst traversal_obj_1 = __webpack_require__(/*! ../utils/traversal-obj */ \"./src/slimming/utils/traversal-obj.ts\");\r\nconst legal_value_1 = __webpack_require__(/*! ../validate/legal-value */ \"./src/slimming/validate/legal-value.ts\");\r\nconst get_by_selector_1 = __webpack_require__(/*! ../xml/get-by-selector */ \"./src/slimming/xml/get-by-selector.ts\");\r\nconst definitions_1 = __webpack_require__(/*! ../const/definitions */ \"./src/slimming/const/definitions.ts\");\r\nconst rmCSSNode = (cssNode, parents) => {\r\n    const plen = parents.length;\r\n    const plist = parents[plen - 1];\r\n    plist.splice(plist.indexOf(cssNode), 1);\r\n};\r\nexports.shortenStyleTag = async (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0] && dom.stylesheet) {\r\n        const { deepShorten } = rule[1];\r\n        const cssRules = dom.stylesheet.stylesheet;\r\n        // 遍历 style 解析对象，取得包含 css 定义的值\r\n        traversal_obj_1.traversalObj(ramda_1.has('type'), (cssNode, parents) => {\r\n            switch (cssNode.type) {\r\n                case 'rule':\r\n                case 'keyframe':\r\n                case 'font-face':\r\n                case 'page':\r\n                    const cssRule = cssNode;\r\n                    if (!cssRule.declarations) {\r\n                        rmCSSNode(cssRule, parents);\r\n                        return;\r\n                    }\r\n                    const declared = {};\r\n                    for (let i = cssRule.declarations.length; i--;) {\r\n                        const ruleItem = cssRule.declarations[i];\r\n                        // 排重\r\n                        if (!declared[ruleItem.property]) {\r\n                            declared[ruleItem.property] = true;\r\n                        }\r\n                        else {\r\n                            cssRule.declarations.splice(i, 1);\r\n                        }\r\n                    }\r\n                    if (!cssRule.declarations.length) {\r\n                        rmCSSNode(cssRule, parents);\r\n                    }\r\n                    break;\r\n                case 'declaration':\r\n                    const declaration = cssNode;\r\n                    // 1、验证属性有效性  2、验证值合法性\r\n                    if (!declaration.property || !declaration.value) {\r\n                        rmCSSNode(cssNode, parents);\r\n                    }\r\n                    else {\r\n                        if (definitions_1.onlyInCSS.includes(declaration.property)) {\r\n                            break;\r\n                        }\r\n                        if (!regular_attr_1.regularAttr[declaration.property].couldBeStyle || !legal_value_1.legalValue(regular_attr_1.regularAttr[declaration.property], {\r\n                            fullname: declaration.property,\r\n                            name: declaration.property,\r\n                            value: declaration.value,\r\n                        })) {\r\n                            rmCSSNode(cssNode, parents);\r\n                        }\r\n                    }\r\n                    break;\r\n                case 'keyframes':\r\n                    const keyframes = cssNode;\r\n                    if (!keyframes.keyframes || !keyframes.keyframes.length) {\r\n                        rmCSSNode(cssNode, parents);\r\n                    }\r\n                    break;\r\n                case 'media':\r\n                case 'host':\r\n                case 'supports':\r\n                case 'document':\r\n                    const ruleParent = cssNode;\r\n                    if (!ruleParent.rules || !ruleParent.rules.length) {\r\n                        rmCSSNode(cssNode, parents);\r\n                    }\r\n                    break;\r\n                case 'comment':\r\n                    rmCSSNode(cssNode, parents);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }, cssRules.rules, true);\r\n        // TODO 连锁属性的判断\r\n        // TODO 直接把 style 应用到元素\r\n        // 深度优化\r\n        if (deepShorten) {\r\n            const selectorUnique = {};\r\n            const declareUnique = {};\r\n            for (let i = 0, l = cssRules.rules.length; i < l; i++) {\r\n                const styleRule = cssRules.rules[i];\r\n                // TODO 目前只针对顶层的规则类，其实还可以进一步优化\r\n                if (styleRule.type === 'rule') {\r\n                    const theSelectors = styleRule.selectors;\r\n                    const declarations = styleRule.declarations;\r\n                    // 记录命中对象但存在无效属性的情况\r\n                    const usedRule = {};\r\n                    // 移除无效的选择器\r\n                    for (let si = theSelectors.length; si--;) {\r\n                        const matchNodes = get_by_selector_1.getBySelector(dom, exec_selector_1.execSelector(theSelectors[si]));\r\n                        if (!matchNodes.length) {\r\n                            theSelectors.splice(si, 1);\r\n                        }\r\n                        else {\r\n                            let anyMatch = false;\r\n                            for (let mi = declarations.length; mi--;) {\r\n                                const ruleItem = declarations[mi];\r\n                                const property = ruleItem.property;\r\n                                // 判断每一条属性与每一个命中元素的匹配情况\r\n                                if (definitions_1.onlyInCSS.includes(property) || matchNodes.some(matchNode => check_apply_1.checkApply(regular_attr_1.regularAttr[property], matchNode, dom, true))) {\r\n                                    // 只要有一条匹配存在，就证明该选择器有效\r\n                                    anyMatch = true;\r\n                                    // 同时标记该属性有效\r\n                                    usedRule[property] = true;\r\n                                }\r\n                            }\r\n                            if (!anyMatch) {\r\n                                theSelectors.splice(si, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    // 验证属性的有效性，移除无效的属性\r\n                    for (let ci = declarations.length; ci--;) {\r\n                        if (!usedRule[declarations[ci].property]) {\r\n                            declarations.splice(ci, 1);\r\n                        }\r\n                    }\r\n                    // 如果选择器列表经过筛选后为空，则移除该条规则\r\n                    if (!theSelectors.length) {\r\n                        cssRules.rules.splice(i, 1);\r\n                        i--;\r\n                        l--;\r\n                        continue;\r\n                    }\r\n                    // 合并相同选择器\r\n                    theSelectors.sort((a, b) => a < b ? -1 : 1);\r\n                    styleRule.selectors = theSelectors.map(s => mix_white_space_1.mixWhiteSpace(s.trim()));\r\n                    const selectorKey = styleRule.selectors.join(',');\r\n                    if (selectorUnique.hasOwnProperty(selectorKey)) {\r\n                        const uDeclarations = selectorUnique[selectorKey].declarations.concat(styleRule.declarations);\r\n                        // 合并之后依然要排重\r\n                        const declared = {};\r\n                        for (let j = uDeclarations.length; j--;) {\r\n                            if (declared[uDeclarations[j].property]) {\r\n                                uDeclarations.splice(j, 1);\r\n                            }\r\n                            else {\r\n                                declared[uDeclarations[j].property] = true;\r\n                            }\r\n                        }\r\n                        selectorUnique[selectorKey].declarations = uDeclarations;\r\n                        cssRules.rules.splice(i, 1);\r\n                        i--;\r\n                        l--;\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        selectorUnique[selectorKey] = styleRule;\r\n                    }\r\n                    // 合并相同规则\r\n                    styleRule.declarations.sort((a, b) => a.property < b.property ? -1 : 1);\r\n                    const declareKey = styleRule.declarations.map((d) => `${d.property}:${d.value}`).join(';');\r\n                    if (declareUnique.hasOwnProperty(declareKey)) {\r\n                        const selectors = declareUnique[declareKey].selectors.concat(styleRule.selectors);\r\n                        const selected = {};\r\n                        for (let j = selectors.length; j--;) {\r\n                            if (selected[selectors[j]]) {\r\n                                selectors.splice(j, 1);\r\n                            }\r\n                            else {\r\n                                selected[selectors[j]] = true;\r\n                            }\r\n                        }\r\n                        declareUnique[declareKey].selectors = selectors;\r\n                        cssRules.rules.splice(i, 1);\r\n                        i--;\r\n                        l--;\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        declareUnique[declareKey] = styleRule;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/shorten-style-tag.ts?");

/***/ }),

/***/ "./src/slimming/style/check-apply.ts":
/*!*******************************************!*\
  !*** ./src/slimming/style/check-apply.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst get_by_id_1 = __webpack_require__(/*! ../xml/get-by-id */ \"./src/slimming/xml/get-by-id.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst exec_1 = __webpack_require__(/*! ./exec */ \"./src/slimming/style/exec.ts\");\r\n// TODO：目前只验证了 href 和 xlink:href，其它 IRI 或 funcIRI 属性是否也需要验证？\r\n// 遇到引用属性，还需要递归验证被引用对象是否可应用样式\r\nconst getXlink = (styleDefine, idStr, dom, unique, fromStyleTag) => check(styleDefine, get_by_id_1.getById(idStr, dom), dom, unique, fromStyleTag);\r\n// 定义一个特殊的遍历方法，只接收一个 condition 方法，只有该方法返回 true 才继续遍历子元素\r\nconst traversal = (condition, node) => {\r\n    // 此处不能用 forEach ，for 循环可以避免当前节点被移除导致下一个节点不会被遍历到的问题\r\n    for (const childNode of node.childNodes) {\r\n        if (condition(childNode) && childNode.childNodes && childNode.childNodes.length) {\r\n            traversal(condition, childNode);\r\n        }\r\n    }\r\n};\r\nconst check = (styleDefine, node, dom, unique, fromStyleTag) => {\r\n    if (!node)\r\n        return false;\r\n    // 如果是检测 style 标签的样式，则只要遇到同名的 style 属性就返回 false\r\n    if (fromStyleTag) {\r\n        for (let i = node.attributes.length; i--;) {\r\n            const attr = node.attributes[i];\r\n            if (attr.fullname === 'style') {\r\n                const childStyle = exec_1.execStyle(attr.value);\r\n                if (childStyle.some(style => style.fullname === styleDefine.name)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (styleDefine.applyTo.includes(node.nodeName))\r\n        return true;\r\n    // 因为递归可能存在循环引用，所以需要排重\r\n    if (unique.includes(node)) {\r\n        return false;\r\n    }\r\n    unique.push(node);\r\n    let result = false;\r\n    if (node.hasAttribute('href')) {\r\n        result = getXlink(styleDefine, node.getAttribute('href'), dom, unique, false);\r\n    }\r\n    else if (node.hasAttribute('xlink:href')) {\r\n        result = getXlink(styleDefine, node.getAttribute('xlink:href'), dom, unique, false);\r\n    }\r\n    // 已经命中就不需要再继续了\r\n    if (result)\r\n        return true;\r\n    // 逻辑在判断函数里做，不在回调函数里做\r\n    traversal((childNode) => {\r\n        // 已经命中就不再继续\r\n        if (result)\r\n            return false;\r\n        // 只验证元素节点\r\n        if (!is_tag_1.isTag(childNode))\r\n            return false;\r\n        // 因为递归可能存在循环引用，所以需要排重\r\n        if (unique.includes(childNode))\r\n            return false;\r\n        unique.push(childNode);\r\n        // 检查属性看是否被覆盖，是就不再继续\r\n        for (let i = childNode.attributes.length; i--;) {\r\n            const attr = childNode.attributes[i];\r\n            if (attr.fullname === 'style') {\r\n                const childStyle = exec_1.execStyle(attr.value);\r\n                if (childStyle.some(style => style.fullname === styleDefine.name)) {\r\n                    return false;\r\n                }\r\n            }\r\n            else if (attr.fullname === styleDefine.name) {\r\n                return false;\r\n            }\r\n        }\r\n        // 通过前面的验证，并符合样式应用条件，就找到了命中的结果\r\n        if (styleDefine.applyTo.includes(childNode.nodeName)) {\r\n            result = true;\r\n            return false; // 已经有命中的结果就不必再遍历了\r\n        }\r\n        else { // 否则继续遍历子元素\r\n            // 没有命中，但具有 IRI 引用，则继续\r\n            if (childNode.hasAttribute('href')) {\r\n                if (getXlink(styleDefine, childNode.getAttribute('href'), dom, unique, fromStyleTag)) {\r\n                    result = true;\r\n                    return false;\r\n                }\r\n            }\r\n            else if (childNode.hasAttribute('xlink:href')) {\r\n                if (getXlink(styleDefine, childNode.getAttribute('xlink:href'), dom, unique, fromStyleTag)) {\r\n                    result = true;\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    }, node);\r\n    return result;\r\n};\r\n// 深度分析，判断样式继承链上是否存在可应用对象\r\nexports.checkApply = (styleDefine, node, dom, fromStyleTag = false) => check(styleDefine, node, dom, [], fromStyleTag);\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/style/check-apply.ts?");

/***/ }),

/***/ "./src/slimming/style/define.ts":
/*!**************************************!*\
  !*** ./src/slimming/style/define.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// 选择器混合字符，不含后代选择器（空格）\r\nvar selectorUnitCombinator;\r\n(function (selectorUnitCombinator) {\r\n    selectorUnitCombinator[selectorUnitCombinator[\">\"] = 1] = \">\";\r\n    selectorUnitCombinator[selectorUnitCombinator[\"+\"] = 2] = \"+\";\r\n    selectorUnitCombinator[selectorUnitCombinator[\"~\"] = 3] = \"~\";\r\n})(selectorUnitCombinator = exports.selectorUnitCombinator || (exports.selectorUnitCombinator = {}));\r\n// 属性选择器等号修饰符\r\nvar attrModifier;\r\n(function (attrModifier) {\r\n    attrModifier[attrModifier[\"^\"] = 1] = \"^\";\r\n    attrModifier[attrModifier[\"$\"] = 2] = \"$\";\r\n    attrModifier[attrModifier[\"~\"] = 3] = \"~\";\r\n    attrModifier[attrModifier[\"|\"] = 4] = \"|\";\r\n    attrModifier[attrModifier[\"*\"] = 5] = \"*\";\r\n})(attrModifier = exports.attrModifier || (exports.attrModifier = {}));\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/style/define.ts?");

/***/ }),

/***/ "./src/slimming/style/exec-selector.ts":
/*!*********************************************!*\
  !*** ./src/slimming/style/exec-selector.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst regs_1 = __webpack_require__(/*! ../const/regs */ \"./src/slimming/const/regs.ts\");\r\nconst define_1 = __webpack_require__(/*! ./define */ \"./src/slimming/style/define.ts\");\r\nexports.execSelector = (selector) => {\r\n    const selectors = [];\r\n    const selectorUnitReg = new RegExp(`^([^\\\\s>+~#\\\\.\\\\[:]+|\\\\*)?((?:${regs_1.idChar}|${regs_1.classChar}|${regs_1.attrChar}|${regs_1.pseudoChar})*)([\\\\s>+~]+|$)`);\r\n    let selectorStr = selector;\r\n    let selectorExec = selectorUnitReg.exec(selectorStr);\r\n    while (selectorExec && selectorExec[0].length) {\r\n        const selectorUnit = { id: [], class: [], attr: [], pseudo: [] };\r\n        if (selectorExec[1]) {\r\n            if (selectorExec[1] === '*') {\r\n                selectorUnit.universal = true;\r\n            }\r\n            else {\r\n                selectorUnit.type = selectorExec[1];\r\n            }\r\n        }\r\n        if (selectorExec[2]) {\r\n            let specialStr = selectorExec[2];\r\n            const specialReg = new RegExp(`^(?:${regs_1.idChar}|${regs_1.classChar}|${regs_1.attrChar}|${regs_1.pseudoChar})`);\r\n            let specialExec = specialReg.exec(specialStr);\r\n            while (specialExec) {\r\n                switch (specialExec[0][0]) {\r\n                    case '.': // class 选择器\r\n                        selectorUnit.class.push(specialExec[0].slice(1));\r\n                        break;\r\n                    case '[': // 属性选择器\r\n                        const attrStr = specialExec[0].slice(1, -1);\r\n                        const eqIndex = attrStr.indexOf('=');\r\n                        if (eqIndex === -1) {\r\n                            // 没有等号的情况\r\n                            selectorUnit.attr.push({\r\n                                key: attrStr,\r\n                            });\r\n                        }\r\n                        else {\r\n                            // 取出等号修饰符\r\n                            // tslint:disable-next-line strict-type-predicates\r\n                            if (typeof define_1.attrModifier[attrStr[eqIndex - 1]] === 'number') {\r\n                                selectorUnit.attr.push({\r\n                                    key: attrStr.slice(0, eqIndex - 1),\r\n                                    modifier: define_1.attrModifier[attrStr[eqIndex - 1]],\r\n                                    value: attrStr.slice(eqIndex + 1),\r\n                                });\r\n                            }\r\n                            else {\r\n                                selectorUnit.attr.push({\r\n                                    key: attrStr.slice(0, eqIndex),\r\n                                    value: attrStr.slice(eqIndex + 1),\r\n                                });\r\n                            }\r\n                        }\r\n                        break;\r\n                    case ':': // 伪类，伪元素\r\n                        const isClass = specialExec[0][1] !== ':';\r\n                        const pseudoStr = specialExec[0].replace(/^:+/, '');\r\n                        const parenIndex = pseudoStr.indexOf('(');\r\n                        if (parenIndex === -1) {\r\n                            // 不是函数型伪类\r\n                            selectorUnit.pseudo.push({\r\n                                func: pseudoStr,\r\n                                isClass,\r\n                            });\r\n                        }\r\n                        else {\r\n                            selectorUnit.pseudo.push({\r\n                                func: pseudoStr.slice(0, parenIndex),\r\n                                value: pseudoStr.slice(parenIndex + 1, -1),\r\n                                isClass,\r\n                            });\r\n                        }\r\n                        break;\r\n                    default: // id 选择器\r\n                        selectorUnit.id.push(specialExec[0].slice(1));\r\n                        break;\r\n                }\r\n                specialStr = specialStr.slice(specialExec[0].length);\r\n                specialExec = specialReg.exec(specialStr);\r\n            }\r\n        }\r\n        if (selectorExec[3]) {\r\n            const combinator = selectorExec[3].trim();\r\n            // tslint:disable-next-line strict-type-predicates\r\n            if (typeof define_1.selectorUnitCombinator[combinator] === 'number') {\r\n                selectorUnit.combinator = define_1.selectorUnitCombinator[combinator];\r\n            }\r\n        }\r\n        selectors.push(selectorUnit);\r\n        selectorStr = selectorStr.slice(selectorExec[0].length);\r\n        selectorExec = selectorUnitReg.exec(selectorStr);\r\n    }\r\n    return selectors;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/style/exec-selector.ts?");

/***/ }),

/***/ "./src/slimming/style/exec.ts":
/*!************************************!*\
  !*** ./src/slimming/style/exec.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst he_1 = __webpack_require__(/*! he */ \"he\");\r\nconst cssReg = /([^:;]+):((?:[^;'\"]*?(?:(?:'[^']*?'|\"[^\"]*?\"|\\/\\*.*?\\*\\/))*[^;'\"]*?)*)(?=;|$)/gim;\r\nexports.execStyle = (styleStr) => {\r\n    // 此处使用数组，因为不能在解析器中排重，排重的工作要交给优化工具\r\n    const style = [];\r\n    const str = he_1.decode(styleStr, {\r\n        isAttributeValue: true,\r\n    });\r\n    // 重置正则\r\n    cssReg.lastIndex = 0;\r\n    let match = cssReg.exec(str);\r\n    while (match !== null) {\r\n        // 去除前导注释和空格\r\n        const name = match[1].replace(/^(?:\\s*\\/\\*.+?\\*\\/\\s*)*/g, '').trim().replace(/\\s/g, '');\r\n        // 去除两端注释和冗余空格\r\n        const value = match[2].replace(/^(?:\\s*\\/\\*.+?\\*\\/\\s*)*|(?:\\s*\\/\\*.+?\\*\\/\\s*)*$/g, '').trim().replace(/\\s+/, ' ');\r\n        // 只保留非空\r\n        if (name && value) {\r\n            style.push({\r\n                fullname: name,\r\n                name,\r\n                value,\r\n            });\r\n        }\r\n        match = cssReg.exec(str);\r\n    }\r\n    return style;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/style/exec.ts?");

/***/ }),

/***/ "./src/slimming/style/match-selector.ts":
/*!**********************************************!*\
  !*** ./src/slimming/style/match-selector.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst definitions_1 = __webpack_require__(/*! ../const/definitions */ \"./src/slimming/const/definitions.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst define_1 = __webpack_require__(/*! ./define */ \"./src/slimming/style/define.ts\");\r\n// 验证 className\r\nconst checkClass = (node, selector) => {\r\n    const className = node.getAttribute('class');\r\n    let classNames = [];\r\n    if (className) {\r\n        classNames = className.trim().split(/\\s+/);\r\n    }\r\n    for (let ci = selector.class.length; ci--;) {\r\n        if (!classNames.includes(selector.class[ci])) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n// 验证 ID\r\nconst checkID = (node, selector) => {\r\n    let id = node.getAttribute('id');\r\n    if (id) {\r\n        id = id.trim();\r\n    }\r\n    for (let i = selector.id.length; i--;) {\r\n        if (id !== selector.id[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n// 验证属性\r\nconst checkAttr = (node, selector) => {\r\n    for (let ai = selector.attr.length; ai--;) {\r\n        const attrSelector = selector.attr[ai];\r\n        let attr = node.getAttribute(attrSelector.key);\r\n        if (attr === null) {\r\n            return false;\r\n        }\r\n        else if (attrSelector.value) {\r\n            // 属性值大小写不敏感\r\n            attr = attr.trim().toLowerCase();\r\n            switch (attrSelector.modifier) {\r\n                // 开始字符匹配\r\n                case define_1.attrModifier['^']:\r\n                    if (attr.indexOf(attrSelector.value) !== 0) {\r\n                        return false;\r\n                    }\r\n                    break;\r\n                // 结尾字符匹配\r\n                // tslint:disable-next-line:no-string-literal\r\n                case define_1.attrModifier['$']:\r\n                    if (attr.lastIndexOf(attrSelector.value) !== attr.length - attrSelector.value.length) {\r\n                        return false;\r\n                    }\r\n                    break;\r\n                // 空格分组字符匹配\r\n                case define_1.attrModifier['~']:\r\n                    if (!attr.split(/\\s+/).includes(attrSelector.value)) {\r\n                        return false;\r\n                    }\r\n                    break;\r\n                // 前缀字符匹配\r\n                case define_1.attrModifier['|']:\r\n                    if (attr !== attrSelector.value && attr.indexOf(`${attrSelector.value}-`) !== 0) {\r\n                        return false;\r\n                    }\r\n                    break;\r\n                // 模糊匹配\r\n                case define_1.attrModifier['*']:\r\n                    if (!attr.includes(attrSelector.value)) {\r\n                        return false;\r\n                    }\r\n                    break;\r\n                // 默认全字匹配\r\n                default:\r\n                    if (attr !== attrSelector.value) {\r\n                        return false;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n};\r\n// 验证伪类和伪元素\r\n// 根据 SVG 标准只验证 CSS 2.1 规范的伪类和伪元素\r\n// https://www.w3.org/TR/SVG2/styling.html#RequiredCSSFeatures\r\nconst checkPseudo = (node, selector) => {\r\n    for (let pi = selector.pseudo.length; pi--;) {\r\n        const pseudoSelector = selector.pseudo[pi];\r\n        if (!definitions_1.validPseudoClass.includes(pseudoSelector.func) && !definitions_1.validPseudoElement.includes(pseudoSelector.func)) {\r\n            return false;\r\n        }\r\n        // 命中伪元素，需要验证作用域链上是否存在文本节点 text\r\n        if (definitions_1.validPseudoElement.includes(pseudoSelector.func)) {\r\n            let hasText = false;\r\n            if (node.nodeName === 'text') {\r\n                hasText = true;\r\n            }\r\n            else {\r\n                traversal_node_1.traversalNode(is_tag_1.isTag, (n) => {\r\n                    if (n.nodeName === 'text') {\r\n                        hasText = true;\r\n                    }\r\n                }, node);\r\n            }\r\n            if (!hasText) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n};\r\n// 验证 selector 和 node 是否匹配\r\nexports.matchSelector = (selector) => (node) => {\r\n    if (!selector || !node) {\r\n        return false;\r\n    }\r\n    // 如果存在标签，则标签必须符合\r\n    if (selector.type && selector.type !== node.nodeName) {\r\n        return false;\r\n    }\r\n    // 如果存在 class 选择器，则每个 class 都要匹配\r\n    if (selector.class.length) {\r\n        if (!checkClass(node, selector)) {\r\n            return false;\r\n        }\r\n    }\r\n    // 如果存在 id 选择器，则每个 id 都要匹配\r\n    if (selector.id.length) {\r\n        if (!checkID(node, selector)) {\r\n            return false;\r\n        }\r\n    }\r\n    if (selector.attr.length) {\r\n        if (!checkAttr(node, selector)) {\r\n            return false;\r\n        }\r\n    }\r\n    if (selector.pseudo.length) {\r\n        if (!checkPseudo(node, selector)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/style/match-selector.ts?");

/***/ }),

/***/ "./src/slimming/style/seletor-priority.ts":
/*!************************************************!*\
  !*** ./src/slimming/style/seletor-priority.ts ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getSelectorPriority = (seletors) => {\r\n    const priority = {\r\n        id: 0,\r\n        class: 0,\r\n        tag: 0,\r\n    };\r\n    seletors.forEach(seletor => {\r\n        priority.id += seletor.id.length;\r\n        priority.class += seletor.class.length + seletor.pseudo.length + seletor.attr.length;\r\n        priority.tag += seletor.type ? 1 : 0;\r\n    });\r\n    return priority;\r\n};\r\nexports.overrideAble = (priority1, priority2) => {\r\n    if (priority1.id !== priority2.id) {\r\n        return priority1.id > priority2.id;\r\n    }\r\n    else if (priority1.class !== priority2.class) {\r\n        return priority1.class > priority2.class;\r\n    }\r\n    else if (priority1.tag !== priority2.tag) {\r\n        return priority1.tag > priority2.tag;\r\n    }\r\n    return true;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/style/seletor-priority.ts?");

/***/ }),

/***/ "./src/slimming/style/shorten-tag.ts":
/*!*******************************************!*\
  !*** ./src/slimming/style/shorten-tag.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n// 去除 style 标签最后的分号\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.shortenTag = (s) => s.replace(/;}/g, '}');\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/style/shorten-tag.ts?");

/***/ }),

/***/ "./src/slimming/style/shorten.ts":
/*!***************************************!*\
  !*** ./src/slimming/style/shorten.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst mix_white_space_1 = __webpack_require__(/*! ../utils/mix-white-space */ \"./src/slimming/utils/mix-white-space.ts\");\r\nexports.shortenStyle = (s) => mix_white_space_1.mixWhiteSpace(s.trim()).replace(/\\s*([@='\"#\\.\\*+>~\\[\\]\\(\\){}:,;])\\s*/g, '$1').replace(/;$/, '');\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/style/shorten.ts?");

/***/ }),

/***/ "./src/slimming/style/stringify.ts":
/*!*****************************************!*\
  !*** ./src/slimming/style/stringify.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.stringifyStyle = (style) => style.map(attr => `${attr.name}:${attr.value}`).join(';');\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/style/stringify.ts?");

/***/ }),

/***/ "./src/slimming/utils/exec-numberlist.ts":
/*!***********************************************!*\
  !*** ./src/slimming/utils/exec-numberlist.ts ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst syntax_1 = __webpack_require__(/*! ../const/syntax */ \"./src/slimming/const/syntax.ts\");\r\nexports.execNumberList = (s) => {\r\n    const result = [];\r\n    // 首先全字匹配字符串，不符合的直接退出\r\n    if (syntax_1.numberListFullMatch.test(s)) {\r\n        // 重要！含有 g 修饰符的正则表达式 exec 时要先重置！\r\n        syntax_1.numberGlobal.lastIndex = 0;\r\n        let matches = syntax_1.numberGlobal.exec(s);\r\n        while (matches) {\r\n            result.push(+matches[0]);\r\n            matches = syntax_1.numberGlobal.exec(s);\r\n        }\r\n    }\r\n    return result;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/utils/exec-numberlist.ts?");

/***/ }),

/***/ "./src/slimming/utils/fillin.ts":
/*!**************************************!*\
  !*** ./src/slimming/utils/fillin.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nexports.fillIn = ramda_1.curry((digit, s) => s.length >= digit ? s : exports.fillIn(digit, `0${s}`));\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/utils/fillin.ts?");

/***/ }),

/***/ "./src/slimming/utils/mix-white-space.ts":
/*!***********************************************!*\
  !*** ./src/slimming/utils/mix-white-space.ts ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.mixWhiteSpace = (str) => str.replace(/\\s+/g, ' ');\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/utils/mix-white-space.ts?");

/***/ }),

/***/ "./src/slimming/utils/number-length.ts":
/*!*********************************************!*\
  !*** ./src/slimming/utils/number-length.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst shorten_number_list_1 = __webpack_require__(/*! ./shorten-number-list */ \"./src/slimming/utils/shorten-number-list.ts\");\r\nconst shorten_number_1 = __webpack_require__(/*! ./shorten-number */ \"./src/slimming/utils/shorten-number.ts\");\r\nexports.numberLength = (num) => shorten_number_list_1.shortenNumberList(num.map(shorten_number_1.shortenNumber).join(',')).length;\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/utils/number-length.ts?");

/***/ }),

/***/ "./src/slimming/utils/shorten-func.ts":
/*!********************************************!*\
  !*** ./src/slimming/utils/shorten-func.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// 缩短函数类字符串，移除其中的空白\r\nexports.shortenFunc = (s) => s.replace(/\\s*([,()])\\s*/g, '$1');\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/utils/shorten-func.ts?");

/***/ }),

/***/ "./src/slimming/utils/shorten-number-list.ts":
/*!***************************************************!*\
  !*** ./src/slimming/utils/shorten-number-list.ts ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.shortenNumberList = (s) => s.trim().replace(/\\s*,\\s*|\\s+/g, ',').replace(/,(?=[+-]\\.?\\d+)/g, '').replace(/([\\.eE]\\d+),(?=\\.\\d+)/g, '$1');\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/utils/shorten-number-list.ts?");

/***/ }),

/***/ "./src/slimming/utils/shorten-number.ts":
/*!**********************************************!*\
  !*** ./src/slimming/utils/shorten-number.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst shorten_pure_decimal_1 = __webpack_require__(/*! ./shorten-pure-decimal */ \"./src/slimming/utils/shorten-pure-decimal.ts\");\r\nconst to_scientific_1 = __webpack_require__(/*! ./to-scientific */ \"./src/slimming/utils/to-scientific.ts\");\r\nexports.shortenNumber = ramda_1.pipe(to_scientific_1.toScientific, shorten_pure_decimal_1.shortenPureDecimal);\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/utils/shorten-number.ts?");

/***/ }),

/***/ "./src/slimming/utils/shorten-percent.ts":
/*!***********************************************!*\
  !*** ./src/slimming/utils/shorten-percent.ts ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tofixed_1 = __webpack_require__(/*! ../math/tofixed */ \"./src/slimming/math/tofixed.ts\");\r\nconst shorten_pure_decimal_1 = __webpack_require__(/*! ./shorten-pure-decimal */ \"./src/slimming/utils/shorten-pure-decimal.ts\");\r\nconst to_percent_1 = __webpack_require__(/*! ../math/to-percent */ \"./src/slimming/math/to-percent.ts\");\r\n// 此工具函数用于优化同时可以用小数和百分比表示，并且二者可以互转的值，例如颜色的 alpha 值\r\n// 小于 0.1 的 alpha 值，用百分比表示更短\r\nconst PERCENT_THRESHOLD = 0.1;\r\nexports.shortenPercent = (digit, s) => shorten_pure_decimal_1.shortenPureDecimal((s < PERCENT_THRESHOLD && s !== 0) ? to_percent_1.toPercent(digit, s) : `${tofixed_1.toFixed(digit, s)}`);\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/utils/shorten-percent.ts?");

/***/ }),

/***/ "./src/slimming/utils/shorten-pure-decimal.ts":
/*!****************************************************!*\
  !*** ./src/slimming/utils/shorten-pure-decimal.ts ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// 移除纯小数的前导 0\r\nexports.shortenPureDecimal = (s) => s.replace(/^(-?)0\\./, '$1.');\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/utils/shorten-pure-decimal.ts?");

/***/ }),

/***/ "./src/slimming/utils/shortenlist.ts":
/*!*******************************************!*\
  !*** ./src/slimming/utils/shortenlist.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst letterList = 'abcdefghijklmnopqrstuvwxyz';\r\nconst numberList = '0123456789';\r\nexports.startChar = `${letterList}${letterList.toUpperCase()}_`;\r\nexports.nameChar = `${exports.startChar}${numberList}-`;\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/utils/shortenlist.ts?");

/***/ }),

/***/ "./src/slimming/utils/stringify-funcval.ts":
/*!*************************************************!*\
  !*** ./src/slimming/utils/stringify-funcval.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst shorten_number_1 = __webpack_require__(/*! ./shorten-number */ \"./src/slimming/utils/shorten-number.ts\");\r\nconst shorten_number_list_1 = __webpack_require__(/*! ./shorten-number-list */ \"./src/slimming/utils/shorten-number-list.ts\");\r\n// 将函数类参数转为字符串，并优化（转科学计数法，移除掉正、负号前面的逗号，移除掉0.前面的0，移除掉.1,.1或e1,.1这种case中间的逗号）\r\nexports.stringifyFuncVal = (s) => shorten_number_list_1.shortenNumberList(s.map(shorten_number_1.shortenNumber).join(','));\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/utils/stringify-funcval.ts?");

/***/ }),

/***/ "./src/slimming/utils/to-scientific.ts":
/*!*********************************************!*\
  !*** ./src/slimming/utils/to-scientific.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.toScientific = (s) => {\r\n    const sStr = s.toString();\r\n    let _s = sStr;\r\n    let e = 0;\r\n    while (_s.slice(-1) === '0') {\r\n        _s = _s.slice(0, -1);\r\n        e++;\r\n    }\r\n    _s = `${_s}e${e}`;\r\n    return _s.length <= sStr.length ? _s : sStr;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/utils/to-scientific.ts?");

/***/ }),

/***/ "./src/slimming/utils/tohex.ts":
/*!*************************************!*\
  !*** ./src/slimming/utils/tohex.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst HEX = 16;\r\nconst TEN = 10;\r\nexports.toHex = (s) => parseInt(`${s}`, TEN).toString(HEX);\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/utils/tohex.ts?");

/***/ }),

/***/ "./src/slimming/utils/traversal-obj.ts":
/*!*********************************************!*\
  !*** ./src/slimming/utils/traversal-obj.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/*\r\n * 深度遍历所有的 Object 属性\r\n * @param { function } 条件\r\n * @param { function } 回调\r\n * @param { object } 目标对象\r\n * @param { object[] } 避免对象调用自身造成死循环\r\n * @param { boolean } 是否深度优先，是的话会先遍历子元素\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst traversal = (condition, cb, obj, path, visited, deep) => {\r\n    if (visited.includes(obj)) {\r\n        return;\r\n    }\r\n    visited.push(obj);\r\n    if (!deep) {\r\n        if (condition(obj)) {\r\n            cb(obj, path);\r\n            return;\r\n        }\r\n    }\r\n    path.push(obj);\r\n    if (Array.isArray(obj)) {\r\n        for (let i = 0; i < obj.length;) {\r\n            const item = obj[i];\r\n            traversal(condition, cb, item, path, visited, deep);\r\n            if (item === obj[i]) {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (const key in obj) {\r\n            if (typeof obj[key] === 'object') { // tslint:disable-line strict-type-predicates\r\n                traversal(condition, cb, obj[key], path, visited, deep);\r\n            }\r\n        }\r\n    }\r\n    path.pop();\r\n    if (deep) {\r\n        if (condition(obj)) {\r\n            cb(obj, path);\r\n        }\r\n    }\r\n};\r\nexports.traversalObj = (condition, cb, obj, deep = false) => {\r\n    traversal(condition, cb, obj, [], [], deep);\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/utils/traversal-obj.ts?");

/***/ }),

/***/ "./src/slimming/validate/legal-value.ts":
/*!**********************************************!*\
  !*** ./src/slimming/validate/legal-value.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst regular_attr_1 = __webpack_require__(/*! ../const/regular-attr */ \"./src/slimming/const/regular-attr.ts\");\r\nconst use_enum_1 = __webpack_require__(/*! ./use-enum */ \"./src/slimming/validate/use-enum.ts\");\r\nconst use_reg_1 = __webpack_require__(/*! ./use-reg */ \"./src/slimming/validate/use-reg.ts\");\r\nconst enum_1 = __webpack_require__(/*! ../const/enum */ \"./src/slimming/const/enum.ts\");\r\nexports.legalValue = (attrDefine, attr, nodeName = '') => {\r\n    if (attrDefine.legalValues.length) {\r\n        // 只要有一个规则命中就返回 true\r\n        for (const legalRule of attrDefine.legalValues) {\r\n            // 当前验证规则可能只适用于某些 tag，legalTag 表示当前规则适用于所有 tag 或当前验证的 tag 在规则匹配列表中\r\n            const legalTag = !legalRule.tag || !nodeName || legalRule.tag.includes(nodeName);\r\n            if (legalTag) {\r\n                switch (legalRule.type) {\r\n                    // 用正则判断\r\n                    case 'reg':\r\n                        if (legalRule.reg && use_reg_1.useReg(legalRule.reg, attr.value)) {\r\n                            return true;\r\n                        }\r\n                        break;\r\n                    // 用枚举判断\r\n                    case 'enum':\r\n                        if (legalRule.enum && use_enum_1.useEnum(legalRule.enum, attr.value)) {\r\n                            return true;\r\n                        }\r\n                        break;\r\n                    // 值应该是一个属性名，而且不允许循环引用\r\n                    case 'attr':\r\n                        if (!regular_attr_1.regularAttr[attr.value].isUndef && attr.fullname !== attr.value) {\r\n                            return true;\r\n                        }\r\n                        break;\r\n                    // 值应该是一个特定字符串\r\n                    case 'string':\r\n                    default:\r\n                        if (legalRule.string === attr.value) {\r\n                            return true;\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        // 可以转为 css 的属性，还需要验证是否匹配 css 值的全局关键字\r\n        if (attrDefine.couldBeStyle) {\r\n            if (use_enum_1.useEnum(enum_1.CSSWideKeywords, attr.value)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    else {\r\n        return true;\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/validate/legal-value.ts?");

/***/ }),

/***/ "./src/slimming/validate/use-enum.ts":
/*!*******************************************!*\
  !*** ./src/slimming/validate/use-enum.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.useEnum = (e, val) => isNaN(parseInt(val, 10)) && val.trim() in e;\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/validate/use-enum.ts?");

/***/ }),

/***/ "./src/slimming/validate/use-reg.ts":
/*!******************************************!*\
  !*** ./src/slimming/validate/use-reg.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.useReg = (reg, val) => reg.test(val.trim());\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/validate/use-reg.ts?");

/***/ }),

/***/ "./src/slimming/xml/create.ts":
/*!************************************!*\
  !*** ./src/slimming/xml/create.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst css_1 = __webpack_require__(/*! css */ \"css\");\r\nconst index_1 = __webpack_require__(/*! ../../node/index */ \"./src/node/index.ts\");\r\nconst shorten_tag_1 = __webpack_require__(/*! ../style/shorten-tag */ \"./src/slimming/style/shorten-tag.ts\");\r\nconst mix_white_space_1 = __webpack_require__(/*! ../utils/mix-white-space */ \"./src/slimming/utils/mix-white-space.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ./rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nexports.createNode = (node) => {\r\n    let xml = '';\r\n    const textContent = node.textContent;\r\n    switch (node.nodeType) {\r\n        case index_1.NodeType.Tag:\r\n            xml += exports.createTag(node);\r\n            break;\r\n        case index_1.NodeType.Text:\r\n            xml += textContent;\r\n            break;\r\n        case index_1.NodeType.XMLDecl:\r\n            xml += `<?xml${mix_white_space_1.mixWhiteSpace(` ${textContent}`).replace(/\\s(?=\"|=|$)/g, '')}?>`;\r\n            break;\r\n        case index_1.NodeType.Comments:\r\n            const comments = mix_white_space_1.mixWhiteSpace(textContent).trim();\r\n            if (comments) {\r\n                xml += `<!--${comments}-->`;\r\n            }\r\n            break;\r\n        case index_1.NodeType.CDATA:\r\n            if (!textContent.includes('<')) {\r\n                xml += textContent;\r\n            }\r\n            else {\r\n                xml += `<![CDATA[${textContent}]]>`;\r\n            }\r\n            break;\r\n        case index_1.NodeType.DocType:\r\n            xml += `<!DOCTYPE${mix_white_space_1.mixWhiteSpace(` ${textContent.trim()}`)}>`;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return xml;\r\n};\r\nexports.createTag = (node) => {\r\n    let xml = '';\r\n    xml += `<${node.namespace ? `${node.namespace}:` : ''}${node.nodeName}`;\r\n    if (node.attributes.length) {\r\n        for (const { name, value, namespace } of node.attributes) {\r\n            if (value.trim()) {\r\n                xml += ` ${namespace ? `${namespace}:` : ''}${name}=\"${mix_white_space_1.mixWhiteSpace(value.trim()).replace(/\"/g, '&quot;')}\"`;\r\n            }\r\n        }\r\n    }\r\n    if (node.childNodes.length) {\r\n        xml += '>';\r\n        node.childNodes.forEach(childNode => {\r\n            xml += exports.createNode(childNode);\r\n        });\r\n        xml += `</${node.namespace ? `${node.namespace}:` : ''}${node.nodeName}>`;\r\n    }\r\n    else {\r\n        xml += '/>';\r\n    }\r\n    return xml;\r\n};\r\nexports.createXML = (dom) => {\r\n    if (!dom) {\r\n        return '';\r\n    }\r\n    let result = '';\r\n    if (dom.stylesheet) {\r\n        const cssText = shorten_tag_1.shortenTag(css_1.stringify(dom.stylesheet, { compress: true }));\r\n        if (cssText) {\r\n            dom.styletag.childNodes[0].textContent = cssText;\r\n        }\r\n        else {\r\n            rm_node_1.rmNode(dom.styletag);\r\n        }\r\n    }\r\n    dom.childNodes.forEach(node => {\r\n        result += exports.createNode(node);\r\n    });\r\n    return result;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/xml/create.ts?");

/***/ }),

/***/ "./src/slimming/xml/exec-style-tree.ts":
/*!*********************************************!*\
  !*** ./src/slimming/xml/exec-style-tree.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst regular_attr_1 = __webpack_require__(/*! ../const/regular-attr */ \"./src/slimming/const/regular-attr.ts\");\r\nconst exec_1 = __webpack_require__(/*! ../style/exec */ \"./src/slimming/style/exec.ts\");\r\nconst exec_selector_1 = __webpack_require__(/*! ../style/exec-selector */ \"./src/slimming/style/exec-selector.ts\");\r\nconst seletor_priority_1 = __webpack_require__(/*! ../style/seletor-priority */ \"./src/slimming/style/seletor-priority.ts\");\r\nconst get_by_id_1 = __webpack_require__(/*! ./get-by-id */ \"./src/slimming/xml/get-by-id.ts\");\r\nconst get_by_selector_1 = __webpack_require__(/*! ./get-by-selector */ \"./src/slimming/xml/get-by-selector.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ./is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ./traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst check = (dom, styleItems) => {\r\n    traversal_node_1.traversalNode(is_tag_1.isTag, node => {\r\n        let nodeStyle = {};\r\n        if (node.styles) {\r\n            nodeStyle = node.styles;\r\n        }\r\n        else {\r\n            node.styles = nodeStyle;\r\n        }\r\n        // 可能有 xlink 引用，css 样式会影响到 xlink 引用的节点\r\n        let xlinkObj;\r\n        node.attributes.forEach(attr => {\r\n            if (attr.fullname === 'style') {\r\n                // 行内样式优先级最高\r\n                const styles = exec_1.execStyle(attr.value);\r\n                styles.forEach(style => {\r\n                    nodeStyle[style.name] = {\r\n                        value: style.value,\r\n                        from: 'inline',\r\n                    };\r\n                });\r\n            }\r\n            else if (attr.name === 'href') {\r\n                // 获取 xlink 引用\r\n                xlinkObj = get_by_id_1.getById(node.getAttribute(attr.fullname), dom);\r\n            }\r\n            else if (regular_attr_1.regularAttr[attr.fullname].couldBeStyle) {\r\n                // 属性优先级最低，但可以覆盖继承\r\n                const styleDefine = nodeStyle[attr.fullname];\r\n                // tslint:disable-next-line\r\n                if (!styleDefine || styleDefine.from === 'inherit') {\r\n                    nodeStyle[attr.fullname] = {\r\n                        value: attr.value,\r\n                        from: 'attr',\r\n                    };\r\n                }\r\n            }\r\n        });\r\n        // 判断 style 标签内的样式，优先级高于 attr 和 inehrit\r\n        styleItems.forEach(styleItem => {\r\n            if (styleItem.nodes.includes(node)) {\r\n                styleItem.styles.forEach(style => {\r\n                    const styleDefine = nodeStyle[style.name];\r\n                    // tslint:disable-next-line\r\n                    if (!styleDefine || styleDefine.from === 'attr' || styleDefine.from === 'inherit' || (styleDefine.from === 'styletag' && styleDefine.selectorPriority && seletor_priority_1.overrideAble(styleItem.selectorPriority, styleDefine.selectorPriority))) {\r\n                        nodeStyle[style.name] = {\r\n                            value: style.value,\r\n                            from: 'styletag',\r\n                            selectorPriority: styleItem.selectorPriority,\r\n                        };\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        const parentNode = node.parentNode;\r\n        if (parentNode && parentNode.styles) {\r\n            // 可能从父元素继承的样式\r\n            Object.keys(parentNode.styles).forEach(key => {\r\n                if (!nodeStyle.hasOwnProperty(key)) {\r\n                    nodeStyle[key] = {\r\n                        value: parentNode.styles[key].value,\r\n                        from: 'inherit',\r\n                    };\r\n                }\r\n            });\r\n        }\r\n        if (xlinkObj) {\r\n            let styleObj = {};\r\n            if (xlinkObj.styles) {\r\n                styleObj = xlinkObj.styles;\r\n            }\r\n            else {\r\n                xlinkObj.styles = styleObj;\r\n            }\r\n            Object.keys(nodeStyle).forEach(key => {\r\n                if (!styleObj.hasOwnProperty(key)) {\r\n                    styleObj[key] = {\r\n                        value: nodeStyle[key].value,\r\n                        from: 'inherit',\r\n                    };\r\n                }\r\n            });\r\n        }\r\n    }, dom);\r\n};\r\n// 解析样式树，为每个节点增加 styles 属性，标记当前节点生效的样式信息\r\nexports.execStyleTree = (dom) => {\r\n    // 首先清理掉曾经被解析过的样式树\r\n    traversal_node_1.traversalNode(is_tag_1.isTag, node => {\r\n        if (node.styles) {\r\n            delete node.styles;\r\n        }\r\n    }, dom);\r\n    const styleItems = [];\r\n    // 记录 stylesheet 选择器权重和影响到的节点\r\n    if (dom.stylesheet) {\r\n        dom.stylesheet.stylesheet.rules.forEach((styleRule) => {\r\n            // 只针对规则类\r\n            if (styleRule.type === 'rule' && styleRule.declarations && styleRule.selectors) {\r\n                const styles = [];\r\n                styleRule.declarations.forEach((ruleItem) => {\r\n                    if (ruleItem.property && ruleItem.value) {\r\n                        styles.push({\r\n                            name: ruleItem.property,\r\n                            fullname: ruleItem.property,\r\n                            value: ruleItem.value,\r\n                        });\r\n                    }\r\n                });\r\n                for (let si = styleRule.selectors.length; si--;) {\r\n                    const selector = exec_selector_1.execSelector(styleRule.selectors[si]);\r\n                    const selectorPriority = seletor_priority_1.getSelectorPriority(selector);\r\n                    const nodes = get_by_selector_1.getBySelector(dom, selector);\r\n                    if (nodes.length) {\r\n                        styleItems.push({\r\n                            styles,\r\n                            selectorPriority,\r\n                            nodes,\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    check(dom, styleItems);\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/xml/exec-style-tree.ts?");

/***/ }),

/***/ "./src/slimming/xml/get-ancestor.ts":
/*!******************************************!*\
  !*** ./src/slimming/xml/get-ancestor.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// 根据条件获取祖先元素\r\nexports.getAncestor = (tag, checkFn) => {\r\n    let _tag = tag;\r\n    if (checkFn(_tag)) {\r\n        return _tag;\r\n    }\r\n    while (_tag.parentNode) {\r\n        _tag = _tag.parentNode;\r\n        if (checkFn(_tag)) {\r\n            return _tag;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/xml/get-ancestor.ts?");

/***/ }),

/***/ "./src/slimming/xml/get-attr.ts":
/*!**************************************!*\
  !*** ./src/slimming/xml/get-attr.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// 获取属性（根据 SVG 覆盖规则，css 优先）\r\nexports.getAttr = (node, key, defaultVal) => {\r\n    let val = defaultVal;\r\n    const styles = node.styles;\r\n    if (styles.hasOwnProperty(key)) {\r\n        val = styles[key].value;\r\n    }\r\n    return val;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/xml/get-attr.ts?");

/***/ }),

/***/ "./src/slimming/xml/get-by-id.ts":
/*!***************************************!*\
  !*** ./src/slimming/xml/get-by-id.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst traversal_node_1 = __webpack_require__(/*! ./traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.getById = (idStr, dom) => {\r\n    let result;\r\n    traversal_node_1.traversalNode(n => idStr === `#${n.getAttribute('id')}`, n => {\r\n        if (!result) {\r\n            result = n;\r\n        }\r\n    }, dom);\r\n    return result;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/xml/get-by-id.ts?");

/***/ }),

/***/ "./src/slimming/xml/get-by-selector.ts":
/*!*********************************************!*\
  !*** ./src/slimming/xml/get-by-selector.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst define_1 = __webpack_require__(/*! ../style/define */ \"./src/slimming/style/define.ts\");\r\nconst match_selector_1 = __webpack_require__(/*! ../style/match-selector */ \"./src/slimming/style/match-selector.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ./is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ./traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\n// 类似 querySelectorAll 的规则，找到所有符合条件的元素\r\nexports.getBySelector = (dom, selectors) => {\r\n    const len = selectors.length;\r\n    const result = [];\r\n    traversal_node_1.traversalNode(ramda_1.both(is_tag_1.isTag, match_selector_1.matchSelector(selectors[len - 1])), node => {\r\n        let i = len - 2;\r\n        let currentNode = node;\r\n        while (i >= 0) {\r\n            const matchI = match_selector_1.matchSelector(selectors[i]);\r\n            switch (selectors[i].combinator) {\r\n                // 子选择器\r\n                case define_1.selectorUnitCombinator['>']:\r\n                    if (currentNode.parentNode) {\r\n                        if (!matchI(currentNode.parentNode)) {\r\n                            return;\r\n                        }\r\n                        currentNode = currentNode.parentNode;\r\n                        break;\r\n                    }\r\n                    return;\r\n                // 相邻兄弟选择器\r\n                case define_1.selectorUnitCombinator['+']:\r\n                    if (currentNode.parentNode) {\r\n                        const brothers = currentNode.parentNode.childNodes;\r\n                        const index = brothers.indexOf(currentNode);\r\n                        if (index <= 0 || !matchI(brothers[index - 1])) {\r\n                            return;\r\n                        }\r\n                        currentNode = brothers[index - 1];\r\n                        break;\r\n                    }\r\n                    return;\r\n                // 兄弟选择器\r\n                case define_1.selectorUnitCombinator['~']:\r\n                    if (currentNode.parentNode) {\r\n                        const _brothers = currentNode.parentNode.childNodes;\r\n                        const _index = _brothers.indexOf(currentNode);\r\n                        if (_index <= 0) {\r\n                            return;\r\n                        }\r\n                        let _brother;\r\n                        for (let bi = _index; bi--;) {\r\n                            _brother = _brothers[bi];\r\n                            if (matchI(_brother)) {\r\n                                currentNode = _brother;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (currentNode !== _brother) {\r\n                            return;\r\n                        }\r\n                        break;\r\n                    }\r\n                    return;\r\n                // 后代选择器\r\n                default:\r\n                    let parent = currentNode.parentNode;\r\n                    while (parent) {\r\n                        if (matchI(parent)) {\r\n                            currentNode = parent;\r\n                            break;\r\n                        }\r\n                        parent = parent.parentNode;\r\n                    }\r\n                    if (currentNode !== parent) {\r\n                        return;\r\n                    }\r\n                    break;\r\n            }\r\n            i--;\r\n        }\r\n        result.push(node);\r\n    }, dom);\r\n    return result;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/xml/get-by-selector.ts?");

/***/ }),

/***/ "./src/slimming/xml/is-tag.ts":
/*!************************************!*\
  !*** ./src/slimming/xml/is-tag.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst index_1 = __webpack_require__(/*! ../../node/index */ \"./src/node/index.ts\");\r\nexports.isTag = ramda_1.propEq('nodeType', index_1.NodeType.Tag);\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/xml/is-tag.ts?");

/***/ }),

/***/ "./src/slimming/xml/rm-attrs.ts":
/*!**************************************!*\
  !*** ./src/slimming/xml/rm-attrs.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst exec_1 = __webpack_require__(/*! ../style/exec */ \"./src/slimming/style/exec.ts\");\r\nconst stringify_1 = __webpack_require__(/*! ../style/stringify */ \"./src/slimming/style/stringify.ts\");\r\nexports.rmAttrs = (node, attrs) => {\r\n    let styleVal = exec_1.execStyle(node.getAttribute('style') || '');\r\n    for (const key of attrs) {\r\n        node.removeAttribute(key);\r\n        styleVal = styleVal.filter(attr => attr.fullname !== key);\r\n    }\r\n    if (styleVal.length) {\r\n        node.setAttribute('style', stringify_1.stringifyStyle(styleVal));\r\n    }\r\n    else {\r\n        node.removeAttribute('style');\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/xml/rm-attrs.ts?");

/***/ }),

/***/ "./src/slimming/xml/rm-node.ts":
/*!*************************************!*\
  !*** ./src/slimming/xml/rm-node.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.rmNode = (node) => {\r\n    if (node.parentNode) {\r\n        node.parentNode.removeChild(node);\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/xml/rm-node.ts?");

/***/ }),

/***/ "./src/slimming/xml/traversal-node.ts":
/*!********************************************!*\
  !*** ./src/slimming/xml/traversal-node.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/*\r\n * 遍历所有的 Node 节点，并对符合条件的节点执行操作\r\n * @param { function } 条件\r\n * @param { function } 回调\r\n * @param { Node } 目标节点\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst traversal = (condition, cb, node, breakImmediate) => {\r\n    // 此处不能用 forEach ，for 循环可以避免当前节点被移除导致下一个节点不会被遍历到的问题\r\n    if (node.childNodes) {\r\n        for (let i = 0; i < node.childNodes.length;) {\r\n            const childNode = node.childNodes[i];\r\n            if (condition(childNode)) {\r\n                cb(childNode);\r\n                if (childNode === node.childNodes[i]) {\r\n                    traversal(condition, cb, childNode, breakImmediate);\r\n                    i++;\r\n                }\r\n            }\r\n            else {\r\n                if (!breakImmediate) {\r\n                    traversal(condition, cb, childNode, breakImmediate);\r\n                }\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n};\r\nexports.traversalNode = (condition, cb, dom, breakImmediate = false) => {\r\n    traversal(condition, cb, dom, breakImmediate);\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/xml/traversal-node.ts?");

/***/ }),

/***/ "./src/xml-parser/app.ts":
/*!*******************************!*\
  !*** ./src/xml-parser/app.ts ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar index_1 = __webpack_require__(/*! ../node/index */ \"./src/node/index.ts\");\r\nexports.NodeType = index_1.NodeType;\r\nvar parser_1 = __webpack_require__(/*! ./parser */ \"./src/xml-parser/parser.ts\");\r\nexports.parse = parser_1.Parser;\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/xml-parser/app.ts?");

/***/ }),

/***/ "./src/xml-parser/node.ts":
/*!********************************!*\
  !*** ./src/xml-parser/node.ts ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst index_1 = __webpack_require__(/*! ../node/index */ \"./src/node/index.ts\");\r\nclass Node {\r\n    constructor(option) {\r\n        this.nodeName = option.nodeName;\r\n        this.nodeType = option.nodeType;\r\n        this.namespace = option.namespace;\r\n        this.selfClose = option.selfClose;\r\n        this.textContent = option.textContent;\r\n        if (this.nodeType === index_1.NodeType.Tag || this.nodeType === index_1.NodeType.Document) {\r\n            this._attributes = [];\r\n            this._childNodes = [];\r\n        }\r\n    }\r\n    get attributes() {\r\n        return this._attributes ? Object.freeze(this._attributes.slice()) : null;\r\n    }\r\n    get childNodes() {\r\n        return this._childNodes ? Object.freeze(this._childNodes.slice()) : null;\r\n    }\r\n    // 复制自身，但是不复制节点树关系链\r\n    cloneNode() {\r\n        const cloneNode = new Node({\r\n            nodeName: this.nodeName,\r\n            nodeType: this.nodeType,\r\n            namespace: this.namespace,\r\n            textContent: this.textContent,\r\n        });\r\n        if (this._attributes) {\r\n            // 属性需要深拷贝\r\n            cloneNode._attributes = this._attributes.map(attr => {\r\n                return {\r\n                    name: attr.name,\r\n                    value: attr.value,\r\n                    fullname: attr.fullname,\r\n                    namespace: attr.namespace,\r\n                };\r\n            });\r\n        }\r\n        return cloneNode;\r\n    }\r\n    // 追加子节点\r\n    appendChild(childNode) {\r\n        if (this._childNodes) {\r\n            // 如果子节点原本有父节点，则先从原本的父节点中移除\r\n            if (childNode.parentNode && childNode.parentNode !== this) {\r\n                const pindex = childNode.parentNode.childNodes.indexOf(childNode);\r\n                if (pindex !== -1) {\r\n                    childNode.parentNode.removeChild(childNode);\r\n                }\r\n            }\r\n            // 如果已在自己的子节点列表中，则先移除再追加到末尾\r\n            const index = this._childNodes.indexOf(childNode);\r\n            if (index !== -1) {\r\n                this._childNodes.splice(index, 1);\r\n            }\r\n            this._childNodes.push(childNode);\r\n            childNode.parentNode = this;\r\n        }\r\n    }\r\n    // 插入到子节点之前\r\n    insertBefore(childNode, previousTarget) {\r\n        if (this._childNodes) {\r\n            // 首先判断目标节点是否在自己的子节点列表中\r\n            const pindex = this._childNodes.indexOf(previousTarget);\r\n            if (pindex !== -1) {\r\n                // 首先判断子节点是否在自己的子节点列表中，如果在，则先移除\r\n                const index = this._childNodes.indexOf(childNode);\r\n                if (index !== -1) {\r\n                    this._childNodes.splice(index, 1);\r\n                }\r\n                delete childNode.parentNode;\r\n            }\r\n        }\r\n    }\r\n    // 替换子节点\r\n    replaceChild(childNode, ...children) {\r\n        if (this._childNodes) {\r\n            const index = this._childNodes.indexOf(childNode);\r\n            if (index !== -1) {\r\n                this._childNodes.splice(index, 1, ...children);\r\n                delete childNode.parentNode;\r\n                children.forEach(child => {\r\n                    child.parentNode = this;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    // 移除子节点\r\n    removeChild(childNode) {\r\n        if (this._childNodes) {\r\n            const index = this._childNodes.indexOf(childNode);\r\n            if (index !== -1) {\r\n                this._childNodes.splice(index, 1);\r\n                delete childNode.parentNode;\r\n            }\r\n        }\r\n    }\r\n    // 是否存在属性\r\n    hasAttribute(name, namespace) {\r\n        if (this._attributes) {\r\n            for (const attr of this._attributes) {\r\n                if ((!namespace && attr.fullname === name) || (attr.name === name && attr.namespace === namespace)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    getAttribute(name, namespace) {\r\n        if (this._attributes) {\r\n            for (const attr of this._attributes) {\r\n                if ((!namespace && attr.fullname === name) || (attr.name === name && attr.namespace === namespace)) {\r\n                    return attr.value;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    setAttribute(name, value, namespace) {\r\n        if (this._attributes) {\r\n            for (const attr of this._attributes) {\r\n                if ((!namespace && attr.fullname === name) || (attr.name === name && attr.namespace === namespace)) {\r\n                    attr.value = value;\r\n                    return;\r\n                }\r\n            }\r\n            const newAttr = {\r\n                name,\r\n                value,\r\n                fullname: name,\r\n            };\r\n            if (namespace) {\r\n                newAttr.fullname = `${namespace}:${name}`;\r\n                newAttr.namespace = namespace;\r\n            }\r\n            this._attributes.push(newAttr);\r\n        }\r\n    }\r\n    removeAttribute(name, namespace) {\r\n        if (this._attributes) {\r\n            for (let i = this._attributes.length; i--;) {\r\n                const attr = this._attributes[i];\r\n                if ((!namespace && attr.fullname === name) || (attr.name === name && attr.namespace === namespace)) {\r\n                    this._attributes.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.Node = Node;\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/xml-parser/node.ts?");

/***/ }),

/***/ "./src/xml-parser/parser.ts":
/*!**********************************!*\
  !*** ./src/xml-parser/parser.ts ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst index_1 = __webpack_require__(/*! ../node/index */ \"./src/node/index.ts\");\r\nconst node_1 = __webpack_require__(/*! ./node */ \"./src/xml-parser/node.ts\");\r\nconst regs_1 = __webpack_require__(/*! ./regs */ \"./src/xml-parser/regs.ts\");\r\nexports.REG_XML_DECL = regs_1.REG_XML_DECL;\r\nexports.REG_CDATA_SECT = regs_1.REG_CDATA_SECT;\r\nexports.REG_OTHER_SECT = regs_1.REG_OTHER_SECT;\r\nexports.REG_DOCTYPE = regs_1.REG_DOCTYPE;\r\nexports.REG_OTHER_DECL = regs_1.REG_OTHER_DECL;\r\nexports.REG_COMMENTS = regs_1.REG_COMMENTS;\r\nexports.REG_START_TAG = regs_1.REG_START_TAG;\r\nexports.REG_END_TAG = regs_1.REG_END_TAG;\r\nexports.REG_ATTR = regs_1.REG_ATTR;\r\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./src/xml-parser/utils.ts\");\r\nconst mix_white_space_1 = __webpack_require__(/*! ../slimming/utils/mix-white-space */ \"./src/slimming/utils/mix-white-space.ts\");\r\nconst configs = [\r\n    [1, 'xml-decl', regs_1.REG_XML_DECL, index_1.NodeType.XMLDecl],\r\n    [1, 'cdata', regs_1.REG_CDATA_SECT, index_1.NodeType.CDATA],\r\n    [2, regs_1.REG_OTHER_SECT, index_1.NodeType.OtherSect],\r\n    [1, 'doctype', regs_1.REG_DOCTYPE, index_1.NodeType.DocType],\r\n    [2, regs_1.REG_OTHER_DECL, index_1.NodeType.OtherDecl],\r\n    [1, 'comments', regs_1.REG_COMMENTS, index_1.NodeType.Comments],\r\n];\r\nconst updStatus = (pos, str, status) => {\r\n    for (; status.lastpos < pos; status.lastpos++) {\r\n        if (str[status.lastpos] === '\\r' || str[status.lastpos] === '\\n') {\r\n            // 换行判断，\\r 直接换行，\\n 判断一下是不是紧跟在 \\r 后面\r\n            if (str[status.lastpos] === '\\r' || str[status.lastpos - 1] !== '\\r') {\r\n                status.line++;\r\n                status.pos = 0;\r\n            }\r\n        }\r\n        else {\r\n            status.pos++;\r\n        }\r\n    }\r\n};\r\n// 应对一个捕获组的状况\r\nconst Process1 = (conf, str) => {\r\n    const reg = conf[2];\r\n    const execResult = reg.exec(str);\r\n    if (execResult) {\r\n        return {\r\n            node: new node_1.Node({\r\n                nodeType: conf[3],\r\n                nodeName: `#${conf[1]}`,\r\n                textContent: execResult[1],\r\n            }),\r\n            str: str.slice(execResult[0].length),\r\n        };\r\n    }\r\n    return null;\r\n};\r\n// 应对两个捕获组的状况\r\nconst Process2 = (conf, str) => {\r\n    const reg = conf[1];\r\n    const execResult = reg.exec(str);\r\n    if (execResult) {\r\n        return {\r\n            node: new node_1.Node({\r\n                nodeType: conf[2],\r\n                nodeName: `#${execResult[1].toLowerCase()}`,\r\n                textContent: execResult[2],\r\n            }),\r\n            str: str.slice(execResult[0].length),\r\n        };\r\n    }\r\n    return null;\r\n};\r\n// 处理标签\r\nconst ProcessTag = (str, status) => {\r\n    const execResult = regs_1.REG_START_TAG.exec(str);\r\n    if (execResult) {\r\n        const tempStatus = { line: status.line, pos: status.pos, lastpos: 0 };\r\n        const result = {\r\n            node: new node_1.Node({\r\n                nodeType: index_1.NodeType.Tag,\r\n                nodeName: execResult[1],\r\n                namespace: '',\r\n                selfClose: execResult[3] === '/',\r\n            }),\r\n            str: str.slice(execResult[0].length),\r\n        };\r\n        // 标签的 namespace\r\n        if (execResult[1].includes(':')) {\r\n            const tagName = execResult[1].split(':');\r\n            if (!tagName[1]) {\r\n                throw new Error(`错误的开始标签！ 在第 ${status.line} 行第 ${status.pos} 位`);\r\n            }\r\n            else {\r\n                result.node.nodeName = tagName[1];\r\n                if (tagName[0]) {\r\n                    result.node.namespace = tagName[0];\r\n                }\r\n            }\r\n        }\r\n        updStatus(execResult[1].length + 1, execResult[0], tempStatus);\r\n        // ** 重要 ** 重置匹配位置！\r\n        regs_1.REG_ATTR.lastIndex = 0;\r\n        let attrExec = regs_1.REG_ATTR.exec(execResult[2]);\r\n        const attrUnique = {};\r\n        while (attrExec) {\r\n            updStatus(attrExec.index + execResult[1].length + 1, execResult[0], tempStatus);\r\n            // 属性名排重\r\n            if (attrUnique[attrExec[1]]) {\r\n                throw new Error(`属性名重复！ 在第 ${tempStatus.line} 行第 ${tempStatus.pos} 位`);\r\n            }\r\n            attrUnique[attrExec[1]] = true;\r\n            if (attrExec[1].includes(':')) {\r\n                const attrName = attrExec[1].split(':');\r\n                if (attrName[1]) {\r\n                    result.node.setAttribute(attrName[1], utils_1.collapseQuot(attrExec[2]).trim(), attrName[0]);\r\n                }\r\n                else {\r\n                    throw new Error(`错误的属性名！ 在第 ${tempStatus.line + status.line - 1} 行第 ${tempStatus.line > 1 ? tempStatus.pos : status.pos + tempStatus.pos} 位`);\r\n                }\r\n            }\r\n            else {\r\n                result.node.setAttribute(attrExec[1], utils_1.collapseQuot(attrExec[2]).trim());\r\n            }\r\n            attrExec = regs_1.REG_ATTR.exec(execResult[2]);\r\n        }\r\n        return result;\r\n    }\r\n    return null;\r\n};\r\nconst ProcessEndTag = (str, status) => {\r\n    const execResult = regs_1.REG_END_TAG.exec(str);\r\n    if (execResult) {\r\n        const result = {\r\n            node: new node_1.Node({\r\n                nodeType: index_1.NodeType.EndTag,\r\n                nodeName: execResult[1],\r\n                namespace: '',\r\n            }),\r\n            str: str.slice(execResult[0].length),\r\n        };\r\n        if (execResult[1].includes(':')) {\r\n            const tagName = execResult[1].split(':');\r\n            if (!tagName[1]) {\r\n                throw new Error(`错误的结束标签！ 在第 ${status.line} 行第 ${status.pos} 位`);\r\n            }\r\n            else {\r\n                result.node.nodeName = tagName[1];\r\n                if (tagName[0]) {\r\n                    result.node.namespace = tagName[0];\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    return null;\r\n};\r\nconst parse = (str, status) => {\r\n    const startCharPos = str.indexOf('<');\r\n    if (startCharPos === 0) { // 以 < 开始的情况都按节点处理\r\n        for (const cfg of configs) {\r\n            if (cfg[0] === 1) {\r\n                const processResult1 = Process1(cfg, str);\r\n                if (processResult1) {\r\n                    return processResult1;\r\n                }\r\n            }\r\n            else {\r\n                const processResult2 = Process2(cfg, str);\r\n                if (processResult2) {\r\n                    return processResult2;\r\n                }\r\n            }\r\n        }\r\n        const processTag = ProcessTag(str, status);\r\n        if (processTag) {\r\n            return processTag;\r\n        }\r\n        const processEndTag = ProcessEndTag(str, status);\r\n        if (processEndTag) {\r\n            return processEndTag;\r\n        }\r\n        throw new Error(`解析标签失败！ 在第 ${status.line} 行第 ${status.pos} 位`);\r\n    }\r\n    else { // 非 < 开始的都按文本处理\r\n        return {\r\n            node: new node_1.Node({\r\n                nodeType: index_1.NodeType.Text,\r\n                nodeName: '#text',\r\n                textContent: mix_white_space_1.mixWhiteSpace(str.slice(0, startCharPos)),\r\n            }),\r\n            str: startCharPos === -1 ? '' : str.slice(startCharPos),\r\n        };\r\n    }\r\n};\r\nexports.Parser = async (str) => {\r\n    return new Promise((resolve, reject) => {\r\n        const doc = new node_1.Node({\r\n            nodeType: index_1.NodeType.Document,\r\n            nodeName: '#document',\r\n        });\r\n        const stack = [];\r\n        const status = {\r\n            line: 1,\r\n            pos: 0,\r\n            lastpos: 0,\r\n        };\r\n        let current;\r\n        let hasRoot = false;\r\n        const firstIndex = str.indexOf('<');\r\n        if (firstIndex > 0 && !!str.slice(0, firstIndex).replace(/\\s+/, '')) {\r\n            reject(new Error(`意外的文本节点！ 在第 ${status.line} 行第 ${status.pos} 位`));\r\n        }\r\n        try {\r\n            current = parse(str.slice(firstIndex), status); // 第一个 < 之前的全部字符都忽略掉\r\n        }\r\n        catch (e) {\r\n            reject(e);\r\n            return;\r\n        }\r\n        if (current.node.nodeType === index_1.NodeType.XMLDecl && firstIndex > 0) {\r\n            reject(new Error(`xml声明必须在文档最前面！ 在第 ${status.line} 行第 ${status.pos} 位`));\r\n        }\r\n        doc.appendChild(current.node);\r\n        if (current.node.nodeType === index_1.NodeType.Tag) {\r\n            hasRoot = true;\r\n            if (!current.node.selfClose) {\r\n                stack.push(current.node);\r\n            }\r\n        }\r\n        while (current.str) {\r\n            updStatus(str.indexOf(current.str), str, status);\r\n            try {\r\n                current = parse(current.str, status); // 第一个 < 之前的全部字符都忽略掉\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n                return;\r\n            }\r\n            const stackLen = stack.length;\r\n            if (current.node.nodeType === index_1.NodeType.EndTag) {\r\n                // 遇到结束标签的处理逻辑\r\n                if (stackLen) {\r\n                    // 结束标签和开始标签匹配\r\n                    if (stack[stackLen - 1].nodeName === current.node.nodeName && stack[stackLen - 1].namespace === current.node.namespace) {\r\n                        // 无子节点，则转为自闭合节点\r\n                        const childNodes = stack[stackLen - 1].childNodes;\r\n                        if (!childNodes || !childNodes.length) {\r\n                            stack[stackLen - 1].selfClose = true;\r\n                        }\r\n                        stack.pop();\r\n                    }\r\n                    else {\r\n                        reject(new Error(`开始和结束标签无法匹配！ 在第 ${status.line} 行第 ${status.pos} 位`));\r\n                    }\r\n                }\r\n                else {\r\n                    // 没有开始标签而出现了结束标签\r\n                    reject(new Error(`意外的结束标签！ 在第 ${status.line} 行第 ${status.pos} 位`));\r\n                }\r\n            }\r\n            else {\r\n                if (stackLen) {\r\n                    // 插入子节点\r\n                    stack[stackLen - 1].appendChild(current.node);\r\n                }\r\n                else if (current.node.nodeType === index_1.NodeType.Text || current.node.nodeType === index_1.NodeType.CDATA) {\r\n                    // 没有节点而出现了非空文本节点\r\n                    if (current.node.textContent.replace(/\\s/g, '')) {\r\n                        reject(new Error(`意外的文本节点！ 在第 ${status.line} 行第 ${status.pos} 位`));\r\n                    }\r\n                }\r\n                else {\r\n                    // 直接扔到根下\r\n                    doc.appendChild(current.node);\r\n                }\r\n                // 遇到未闭合的节点，扔到stack内\r\n                if (current.node.nodeType === index_1.NodeType.Tag) {\r\n                    if (!stackLen) {\r\n                        if (hasRoot) {\r\n                            reject(new Error(`只允许出现一个根元素节点！ 在第 ${status.line} 行第 ${status.pos} 位`));\r\n                        }\r\n                        hasRoot = true;\r\n                    }\r\n                    if (!current.node.selfClose) {\r\n                        stack.push(current.node);\r\n                    }\r\n                }\r\n            }\r\n            if (!current.str) {\r\n                updStatus(str.length, str, status);\r\n            }\r\n        }\r\n        if (stack.length) {\r\n            reject(new Error(`文档结构错误！ 在第 ${status.line} 行第 ${status.pos} 位`));\r\n        }\r\n        if (!hasRoot) {\r\n            reject(new Error(`没有根元素节点！ 在第 ${status.line} 行第 ${status.pos} 位`));\r\n        }\r\n        resolve(doc);\r\n    });\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/xml-parser/parser.ts?");

/***/ }),

/***/ "./src/xml-parser/regs.ts":
/*!********************************!*\
  !*** ./src/xml-parser/regs.ts ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nlet supportUnicode = true;\r\ntry {\r\n    supportUnicode = /\\u{20BB7}/u.test('𠮷');\r\n}\r\ncatch (e) {\r\n    supportUnicode = false;\r\n}\r\nconst NameStartChar = `:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD${supportUnicode ? '\\\\u{10000}-\\\\u{EFFFF}' : ''}`;\r\nconst NameChar = `${NameStartChar}\\\\-\\\\.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040`;\r\nconst Name = `[${NameStartChar}][${NameChar}]*`;\r\nconst Eq = '\\\\s*=\\\\s*';\r\nconst VersionNum = '1\\\\.[0-9]+';\r\nconst EncName = '[A-Za-z](?:[A-Za-z0-9\\\\._]|-)*';\r\nconst VersionInfo = `\\\\s+version${Eq}(?:'${VersionNum}'|\"${VersionNum}\")`;\r\nconst EncodingDecl = `\\\\s+encoding${Eq}(?:'${EncName}'|\"${EncName}\")`;\r\nconst SDDecl = `\\\\s+standalone${Eq}(?:'(?:yes|no)'|\"(?:yes|no)\")`;\r\nconst Reference = `(?:&${Name};|&#[0-9]+;|&#x[0-9a-fA-F]+;)`;\r\nconst AttrVal = `\"(?:[^<&\"]|${Reference})*\"|'(?:[^<&']|${Reference})*'`;\r\n// tslint:disable-next-line\r\nconst DeclContent = `(?:[^<>'\"]+|[^<>']*'[^']*'[^<>']*|[^<>\"]*\"[^\"]*\"[^<>\"]*|[^<>'\"]*<[^<>]*>[^<>'\"]*)+?`;\r\nexports.REG_XML_DECL = new RegExp(`^<\\\\?xml(${VersionInfo}(?:${EncodingDecl})?(?:${SDDecl})?\\\\s*)\\\\?>`);\r\nexports.REG_CDATA_SECT = /^<!\\[CDATA\\[([\\d\\D]*?)\\]\\]>/;\r\nexports.REG_OTHER_SECT = /^<!\\[\\s?([A-Z]+)\\s?\\[([\\d\\D]*?)\\]\\]>/;\r\nexports.REG_DOCTYPE = new RegExp(`^<!DOCTYPE\\\\s+(${DeclContent})>`);\r\nexports.REG_OTHER_DECL = new RegExp(`^<!([A-Z]+)\\\\s+(${DeclContent})>`);\r\nexports.REG_COMMENTS = /^<!--([\\d\\D]*?)-->/;\r\nexports.REG_START_TAG = new RegExp(`^<(${Name})((?:\\\\s+${Name}${Eq}(?:${AttrVal}))*)\\\\s*(\\\\/?)>`, supportUnicode ? 'u' : '');\r\nexports.REG_END_TAG = new RegExp(`^</(${Name})\\\\s*>`, supportUnicode ? 'u' : '');\r\nexports.REG_ATTR = new RegExp(`(${Name})${Eq}(${AttrVal})`, supportUnicode ? 'gu' : 'g');\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/xml-parser/regs.ts?");

/***/ }),

/***/ "./src/xml-parser/utils.ts":
/*!*********************************!*\
  !*** ./src/xml-parser/utils.ts ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.collapseQuot = (str) => str.slice(1, -1);\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/xml-parser/utils.ts?");

/***/ }),

/***/ "css":
/*!**********************!*\
  !*** external "css" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"css\");\n\n//# sourceURL=webpack://svg-slimming/external_%22css%22?");

/***/ }),

/***/ "he":
/*!*********************!*\
  !*** external "he" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"he\");\n\n//# sourceURL=webpack://svg-slimming/external_%22he%22?");

/***/ }),

/***/ "ramda":
/*!************************!*\
  !*** external "ramda" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"ramda\");\n\n//# sourceURL=webpack://svg-slimming/external_%22ramda%22?");

/***/ }),

/***/ "svg-path-contours":
/*!************************************!*\
  !*** external "svg-path-contours" ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"svg-path-contours\");\n\n//# sourceURL=webpack://svg-slimming/external_%22svg-path-contours%22?");

/***/ }),

/***/ "triangulate-contours":
/*!***************************************!*\
  !*** external "triangulate-contours" ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"triangulate-contours\");\n\n//# sourceURL=webpack://svg-slimming/external_%22triangulate-contours%22?");

/***/ })

/******/ });
});