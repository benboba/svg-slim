(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["svg-slimming"] = factory();
	else
		root["svg-slimming"] = factory();
})(global, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/slimming/app.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/node/index.ts":
/*!***************************!*\
  !*** ./src/node/index.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/*\r\n * 除了 EndTag ，其它值都来自标准：\r\n * https://developer.mozilla.org/zh-CN/docs/Web/API/Node/nodeType\r\n */\r\nvar NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"EndTag\"] = -1] = \"EndTag\";\r\n    NodeType[NodeType[\"Tag\"] = 1] = \"Tag\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"OtherSect\"] = 5] = \"OtherSect\";\r\n    NodeType[NodeType[\"OtherDecl\"] = 6] = \"OtherDecl\";\r\n    NodeType[NodeType[\"XMLDecl\"] = 7] = \"XMLDecl\";\r\n    NodeType[NodeType[\"Comments\"] = 8] = \"Comments\";\r\n    NodeType[NodeType[\"Document\"] = 9] = \"Document\";\r\n    NodeType[NodeType[\"DocType\"] = 10] = \"DocType\";\r\n})(NodeType = exports.NodeType || (exports.NodeType = {}));\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/node/index.ts?");

/***/ }),

/***/ "./src/slimming/algorithm/create-shorten-id.ts":
/*!*****************************************************!*\
  !*** ./src/slimming/algorithm/create-shorten-id.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst shortenlist_1 = __webpack_require__(/*! ../utils/shortenlist */ \"./src/slimming/utils/shortenlist.ts\");\r\nconst startLen = shortenlist_1.startChar.length;\r\nconst nameLen = shortenlist_1.nameChar.length;\r\nconst sList = shortenlist_1.startChar.split('');\r\nlet slen = startLen;\r\nlet pi = 0;\r\nexports.createShortenID = (si) => {\r\n    while (si >= slen) {\r\n        sList.push.apply(sList, shortenlist_1.nameChar.split('').map(s => sList[pi] + s));\r\n        slen += nameLen;\r\n        pi++;\r\n    }\r\n    return sList[si];\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/algorithm/create-shorten-id.ts?");

/***/ }),

/***/ "./src/slimming/algorithm/douglas-peucker.ts":
/*!***************************************************!*\
  !*** ./src/slimming/algorithm/douglas-peucker.ts ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vector_1 = __webpack_require__(/*! ../math/vector */ \"./src/slimming/math/vector.ts\");\r\nconst minus_1 = __webpack_require__(/*! ../math/minus */ \"./src/slimming/math/minus.ts\");\r\nconst check = (threshold, start_i, end_i, paths) => {\r\n    let max = 0;\r\n    let maxI = 0;\r\n    // 拿到基础向量\r\n    const baseVector = new vector_1.Vector(minus_1.minus(paths[end_i], paths[start_i]), minus_1.minus(paths[end_i + 1], paths[start_i + 1]));\r\n    for (let i = start_i + 2; i < end_i; i += 2) {\r\n        // 拿到垂直分量\r\n        const vector_pann = new vector_1.Vector(minus_1.minus(paths[i], paths[start_i]), minus_1.minus(paths[i + 1], paths[start_i + 1]));\r\n        let distance;\r\n        if (vector_pann.isZero) {\r\n            distance = 0;\r\n        }\r\n        else {\r\n            distance = vector_1.Vector.plumb(vector_pann, baseVector).modulo;\r\n        }\r\n        if (distance > max) {\r\n            max = distance;\r\n            maxI = i;\r\n        }\r\n    }\r\n    if (max <= threshold) {\r\n        paths.splice(start_i + 2, end_i - start_i - 2);\r\n    }\r\n    else {\r\n        if (maxI < end_i - 2) {\r\n            check(threshold, maxI, end_i, paths);\r\n        }\r\n        if (maxI > start_i + 2) {\r\n            check(threshold, start_i, maxI, paths);\r\n        }\r\n    }\r\n};\r\nexports.douglasPeucker = (threshold, pathArr) => {\r\n    check(threshold, 0, pathArr.length - 2, pathArr);\r\n    return pathArr;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/algorithm/douglas-peucker.ts?");

/***/ }),

/***/ "./src/slimming/app.ts":
/*!*****************************!*\
  !*** ./src/slimming/app.ts ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nconst config_1 = __webpack_require__(/*! ./config/config */ \"./src/slimming/config/config.ts\");\r\nconst index_1 = __webpack_require__(/*! ./rules/index */ \"./src/slimming/rules/index.ts\");\r\nconst to_array_1 = __webpack_require__(/*! ./utils/to-array */ \"./src/slimming/utils/to-array.ts\");\r\nconst create_1 = __webpack_require__(/*! ./xml/create */ \"./src/slimming/xml/create.ts\");\r\nconst app_1 = __webpack_require__(/*! ../xml-parser/app */ \"./src/xml-parser/app.ts\");\r\nconst node_1 = __webpack_require__(/*! ../node */ \"./src/node/index.ts\");\r\nconst exportFunc = (data, userConfig = {}) => new Promise((resolve, reject) => {\r\n    app_1.parse(data).then((dom) => {\r\n        const finalConfig = {};\r\n        Object.assign(finalConfig, config_1.config, userConfig);\r\n        (async () => {\r\n            for (const item of index_1.rules) {\r\n                if (item[0]) {\r\n                    await item[1](dom);\r\n                }\r\n                else {\r\n                    await item[1](to_array_1.toArray(finalConfig[item[2]]), dom);\r\n                }\r\n            }\r\n            resolve(create_1.createXML(dom));\r\n        })();\r\n    }, reject);\r\n});\r\nexportFunc.xmlParser = app_1.parse;\r\nexportFunc.NodeType = node_1.NodeType;\r\nmodule.exports = exportFunc;\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/app.ts?");

/***/ }),

/***/ "./src/slimming/config/config.ts":
/*!***************************************!*\
  !*** ./src/slimming/config/config.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst DEFAULT_SIZE_DIGIT = 1;\r\nconst DEFAULT_ACCURATE_DIGIT = 2;\r\nconst DEFAULT_MATRIX_DIGIT = 3;\r\nexports.config = {\r\n    // 合并 g 标签\r\n    'collapse-g': true,\r\n    // 塌陷无意义的文本节点\r\n    'collapse-textwrap': true,\r\n    // 合并 path 标签\r\n    'combine-path': true,\r\n    // 分析并合并 transform 属性\r\n    // 合并后的 matrix 的 a, b, c, d 四个位置的数据精度\r\n    // 合并后的 e, f 位置的数据精度\r\n    'combine-transform': [true, DEFAULT_MATRIX_DIGIT, DEFAULT_SIZE_DIGIT],\r\n    // 计算 path 的 d 属性，使之变得更短\r\n    // 应用道格拉斯-普克算法抽稀路径节点\r\n    // 抽稀节点的阈值\r\n    'compute-path': [true, false, 0],\r\n    // 对 polygon 和 polyline 应用道格拉斯-普克算法抽稀路径节点\r\n    // 抽稀节点的阈值\r\n    'douglas-peucker': [false, 0],\r\n    // 移除非规范的属性\r\n    // 深度分析，移除与继承链相同的属性\r\n    // 保留所有的事件监听属性\r\n    // 保留所有的 aria 属性和 role 属性 https://www.w3.org/TR/wai-aria-1.1\r\n    'rm-attribute': [true, true, false, false],\r\n    // 移除注释\r\n    'rm-comments': true,\r\n    // 移除 DOCTYPE 声明\r\n    'rm-doctype': true,\r\n    // 移除隐藏对象\r\n    'rm-hidden': true,\r\n    // 移除不规范嵌套的标签\r\n    // 配置忽略的标签列表\r\n    'rm-irregular-nesting': [true, []],\r\n    // 移除非规范的标签\r\n    // 配置不移除的非规范标签\r\n    'rm-irregular-tag': [true, []],\r\n    // 移除 px 单位\r\n    'rm-px': true,\r\n    // 移除不必要的标签\r\n    // 配置需要移除的标签列表\r\n    'rm-unnecessary': [true, ['desc', 'discard', 'foreignObject', 'video', 'audio', 'iframe', 'canvas', 'metadata', 'script', 'title', 'unknown']],\r\n    // 移除 svg 标签的 version 属性\r\n    'rm-version': true,\r\n    // 是否强制移除 viewBox 属性\r\n    'rm-viewbox': true,\r\n    // 移除 xml 声明\r\n    'rm-xml-decl': true,\r\n    // 如有必要，移除 xml 命名空间\r\n    'rm-xmlns': true,\r\n    // 形状和 path 互转，取最小组合\r\n    'shape-to-path': true,\r\n    // 缩短 className ，并移除不被引用的 className\r\n    'shorten-class': true,\r\n    // 缩短颜色\r\n    // 是否缩短 rgba 格式的颜色到 16 进制\r\n    // alpha 值的精度\r\n    'shorten-color': [true, false, DEFAULT_ACCURATE_DIGIT],\r\n    // 缩短小数点后位数\r\n    // 尺寸相关属性的位数\r\n    // 其它类型属性的位数\r\n    'shorten-decimal-digits': [true, DEFAULT_SIZE_DIGIT, DEFAULT_ACCURATE_DIGIT],\r\n    // 合并所有的 defs ，移除无效的 defs 定义\r\n    'shorten-defs': true,\r\n    // 缩短 ID ，并移除不被引用的 ID\r\n    'shorten-id': true,\r\n    // 缩短 style 属性\r\n    // 根据情况进行 style 和属性的互转 （[warning] svg 的样式覆盖规则是 style 属性 > style 标签 > 属性，所以这个规则可能导致不正确的覆盖！）\r\n    'shorten-style-attr': [true, false],\r\n    // 缩短 style 标签的内容（合并相同规则、移除无效样式）\r\n    // 深度分析，移除无效选择器、合并相同的选择器、合并相同规则\r\n    'shorten-style-tag': [true, true],\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/config/config.ts?");

/***/ }),

/***/ "./src/slimming/const/definitions.ts":
/*!*******************************************!*\
  !*** ./src/slimming/const/definitions.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// elements group\r\nexports.animationElements = ['animate', 'animateMotion', 'animateTransform', 'discard', 'set'];\r\nexports.descriptiveElements = ['desc', 'metadata', 'title'];\r\nexports.gradientElements = ['linearGradient', 'radialGradient'];\r\nexports.filterPrimitiveElements = ['feBlend', 'feFlood', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDropShadow', 'feGaussianBlur', 'feImage', 'feMerge', 'feMorphology', 'feOffset', 'feSpecularLighting', 'feTile', 'feTurbulence'];\r\nexports.lightSourceElements = ['feDistantLight', 'fePointLight', 'feSpotLight'];\r\nexports.paintServerElements = ['solidcolor', 'linearGradient', 'radialGradient', 'meshgradient', 'pattern', 'hatch'];\r\nexports.shapeElements = ['circle', 'ellipse', 'line', 'path', 'polygon', 'polyline', 'rect'];\r\nexports.structuralElements = ['defs', 'g', 'svg', 'symbol', 'use'];\r\nexports.textContentChildElements = ['tspan', 'textPath'];\r\nexports.textContentElements = ['text'].concat(exports.textContentChildElements);\r\nexports.graphicsElements = ['audio', 'canvas', 'circle', 'ellipse', 'foreignObject', 'iframe', 'image', 'line', 'mesh', 'path', 'polygon', 'polyline', 'rect', 'text', 'textPath', 'tspan', 'video'];\r\nexports.containerElements = ['a', 'clipPath', 'defs', 'g', 'marker', 'mask', 'pattern', 'svg', 'switch', 'symbol', 'unknown'];\r\nexports.newViewportsElements = ['svg', 'symbol', 'foreignObject', 'video', 'audio', 'canvas', 'image', 'iframe'];\r\nexports.unnecessaryElements = ['desc', 'discard', 'foreignObject', 'video', 'audio', 'iframe', 'canvas', 'metadata', 'script', 'style', 'title', 'unknown'];\r\n// attributes group\r\n// https://www.w3.org/TR/SVG2/interact.html#EventAttributes\r\nexports.eventAttributes = ['onabort', 'onafterprint', 'onbeforeprint', 'onbegin', 'oncancel', 'oncanplay', 'oncanplaythrough', 'onchange', 'onclick', 'onclose', 'oncuechange', 'ondblclick', 'ondrag', 'ondragend', 'ondragenter', 'ondragexit', 'ondragleave', 'ondragover', 'ondragstart', 'ondrop', 'ondurationchange', 'onemptied', 'onend', 'onended', 'onerror', 'onerror', 'onfocus', 'onfocusin', 'onfocusout', 'onhashchange', 'oninput', 'oninvalid', 'onkeydown', 'onkeypress', 'onkeyup', 'onload', 'onloadeddata', 'onloadedmetadata', 'onloadstart', 'onmessage', 'onmousedown', 'onmouseenter', 'onmouseleave', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onmousewheel', 'onoffline', 'ononline', 'onpagehide', 'onpageshow', 'onpause', 'onplay', 'onplaying', 'onpopstate', 'onprogress', 'onratechange', 'onrepeat', 'onreset', 'onresize', 'onresize', 'onscroll', 'onscroll', 'onseeked', 'onseeking', 'onselect', 'onshow', 'onstalled', 'onstorage', 'onsubmit', 'onsuspend', 'ontimeupdate', 'ontoggle', 'onunload', 'onunload', 'onvolumechange', 'onwaiting'];\r\n// https://www.w3.org/TR/wai-aria-1.1/#aria-activedescendant\r\nexports.ariaAttributes = ['aria-activedescendant', 'aria-atomic', 'aria-busy', 'aria-checked', 'aria-colcount', 'aria-colindex', 'aria-colspan', 'aria-controls', 'aria-current', 'aria-describedby', 'aria-details', 'aria-disabled', 'aria-dropeffect', 'aria-errormessage', 'aria-expanded', 'aria-flowto', 'aria-grabbed', 'aria-haspopup', 'aria-hidden', 'aria-invalid', 'aria-keyshortcuts', 'aria-label', 'aria-labelledby', 'aria-level', 'aria-live', 'aria-modal', 'aria-multiline', 'aria-multiselectable', 'aria-orientation', 'aria-owns', 'aria-placeholder', 'aria-posinset', 'aria-pressed', 'aria-readonly', 'aria-relevant', 'aria-required', 'aria-roledescription', 'aria-rowcount', 'aria-rowindex', 'aria-rowspan', 'aria-selected', 'aria-setsize', 'aria-sort', 'aria-valuemax', 'aria-valuemin', 'aria-valuenow', 'aria-valuetext', 'role'];\r\nexports.animationAttributes = ['from', 'to', 'by'];\r\nexports.transformAttributes = ['gradientTransform', 'patternTransform', 'transform'];\r\nexports.cantCollapseAttributes = ['id', 'class', 'mask'];\r\nexports.conditionalProcessingAttributes = ['requiredExtensions', 'systemLanguage'];\r\nexports.coreAttributes = ['id', 'tabindex', 'lang', 'xml:space', 'class', 'style', 'transform' /* TODO，此处暂时把 transform 放到这里，因为所有支持 transform 的元素都拥有 coreAttr */];\r\nexports.deprecatedXlinkAttributes = ['xlink:href', 'xlink:title'];\r\nexports.animationAdditionAttributes = ['additive', 'accumulate'];\r\nexports.animationTimingAttributes = ['begin', 'dur', 'end', 'min', 'max', 'restart', 'repeatCount', 'repeatDur', 'fill'];\r\nexports.animationValueAttributes = ['calcMode', 'values', 'keyTimes', 'keySplines', 'from', 'to', 'by'];\r\nexports.rectAttributes = ['x', 'y', 'width', 'height'];\r\nexports.transferFunctionElementAttributes = ['type', 'tableValues', 'slope', 'intercept', 'amplitude', 'exponent', 'offset'];\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/const/definitions.ts?");

/***/ }),

/***/ "./src/slimming/const/enum.ts":
/*!************************************!*\
  !*** ./src/slimming/const/enum.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n// 存储所有的枚举值\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar accumulateVal;\r\n(function (accumulateVal) {\r\n    accumulateVal[accumulateVal[\"none\"] = 0] = \"none\";\r\n    accumulateVal[accumulateVal[\"sum\"] = 1] = \"sum\";\r\n})(accumulateVal = exports.accumulateVal || (exports.accumulateVal = {}));\r\nvar additiveVal;\r\n(function (additiveVal) {\r\n    additiveVal[additiveVal[\"replace\"] = 0] = \"replace\";\r\n    additiveVal[additiveVal[\"sum\"] = 1] = \"sum\";\r\n})(additiveVal = exports.additiveVal || (exports.additiveVal = {}));\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/const/enum.ts?");

/***/ }),

/***/ "./src/slimming/const/regs.ts":
/*!************************************!*\
  !*** ./src/slimming/const/regs.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n// 用于验证的正则表达式\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// css 选择器相关字符\r\nexports.idChar = '#[^#\\\\.\\\\[\\\\*:]+';\r\nexports.classChar = '\\\\.[^#\\\\.\\\\[\\\\*:]+';\r\nexports.attrChar = `\\\\[(?:[a-zA-Z][a-zA-Z0-9\\\\-]*\\\\|)?[a-zA-Z][a-zA-Z0-9\\\\-]*(?:[\\\\|\\\\^\\\\$\\\\*~]?=(?:'[^']*'|\"[^\"]*\"|[^'\"\\\\]]+))?\\\\]`;\r\nexports.pseudoChar = '\\\\:{1,2}[a-zA-Z-]+(?:\\\\((?:[^\\\\)]+|[^\\\\(]+\\\\([^\\\\)]+\\\\))\\\\))?';\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/const/regs.ts?");

/***/ }),

/***/ "./src/slimming/const/regular-attr.ts":
/*!********************************************!*\
  !*** ./src/slimming/const/regular-attr.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst definitions_1 = __webpack_require__(/*! ./definitions */ \"./src/slimming/const/definitions.ts\");\r\nconst enum_1 = __webpack_require__(/*! ./enum */ \"./src/slimming/const/enum.ts\");\r\nconst tokens_1 = __webpack_require__(/*! ./tokens */ \"./src/slimming/const/tokens.ts\");\r\nconst shapeAndText = definitions_1.shapeElements.concat(definitions_1.textContentElements);\r\nconst viewport = ['pattern', 'marker'].concat(definitions_1.newViewportsElements);\r\nconst useContainerGraphics = ['use'].concat(definitions_1.containerElements, definitions_1.graphicsElements);\r\nconst colorApply = ['animate'].concat(useContainerGraphics, definitions_1.gradientElements);\r\nconst regular_attr = {\r\n    accumulate: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.accumulateVal\r\n            }],\r\n        initValue: 'none',\r\n        applyTo: [],\r\n    },\r\n    additive: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'enum',\r\n                enum: enum_1.additiveVal\r\n            }],\r\n        initValue: 'replace',\r\n        applyTo: [],\r\n    },\r\n    amplitude: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [{\r\n                type: 'reg',\r\n                reg: tokens_1.numberRegFullMatch\r\n            }],\r\n        initValue: '1',\r\n        applyTo: [],\r\n    },\r\n    attributeName: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [{\r\n                type: 'attr'\r\n            }],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    azimuth: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    baseFrequency: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    begin: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    bias: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    by: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    calcMode: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    class: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    clipPathUnits: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    crossorigin: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    cx: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    cy: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    d: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    diffuseConstant: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    divisor: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    download: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    dur: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    dx: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    dy: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    edgeMode: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    elevation: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    end: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    exponent: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    filterUnits: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    fr: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    from: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    fx: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    fy: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    gradientTransform: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    gradientUnits: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    height: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    href: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: true,\r\n        maybeFuncIRI: true,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    hreflang: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    id: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    in: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    in2: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    intercept: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    k1: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    k2: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    k3: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    k4: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    kernelMatrix: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    kernelUnitLength: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    keyPoints: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    keySplines: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    keyTimes: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    lang: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    lengthAdjust: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    limitingConeAngle: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    markerHeight: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    markerUnits: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    markerWidth: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    maskContentUnits: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    maskUnits: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    max: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    media: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    method: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    min: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    mode: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    numOctaves: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    offset: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    operator: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    order: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    orient: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    origin: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    path: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    pathLength: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    patternContentUnits: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    patternTransform: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    patternUnits: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    playbackorder: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    points: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    pointsAtX: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    pointsAtY: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    pointsAtZ: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    preserveAlpha: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    preserveAspectRatio: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    primitiveUnits: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    r: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    radius: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    refX: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    refY: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    rel: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    repeatCount: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    repeatDur: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    requiredExtensions: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    restart: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    result: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    rotate: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    rx: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    ry: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    scale: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    seed: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    side: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    slope: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    spacing: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    specularConstant: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    specularExponent: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    spreadMethod: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    startOffset: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    stdDeviation: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    stitchTiles: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    style: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    surfaceScale: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    systemLanguage: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    tabindex: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    tableValues: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    target: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    targetX: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    targetY: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    textLength: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    timelinebegin: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    title: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    to: {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    transform: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: ['svg', 'g', 'symbol', 'marker', 'a', 'switch', 'use', 'foreignObject', 'unknown'].concat(definitions_1.graphicsElements),\r\n    },\r\n    type: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    values: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    viewBox: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    width: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    x: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    x1: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    x2: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    xChannelSelector: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'xlink:href': {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: true,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'xlink:title': {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'xml:space': {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'xmlns': {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'xmlns:xml': {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    'xmlns:xlink': {\r\n        couldBeStyle: false,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    y: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    y1: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    y2: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    yChannelSelector: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    z: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    zoomAndPan: {\r\n        couldBeStyle: false,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: [],\r\n    },\r\n    // 下面是 property\r\n    'alignment-baseline': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: ['tspan', 'textPath'],\r\n    },\r\n    'baseline-shift': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'baseline',\r\n        applyTo: ['tspan', 'textPath'],\r\n    },\r\n    clip: {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'auto',\r\n        applyTo: viewport,\r\n    },\r\n    'clip-path': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: true,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'none',\r\n        applyTo: useContainerGraphics,\r\n    },\r\n    'clip-rule': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'nonzero',\r\n        applyTo: ['use'].concat(definitions_1.graphicsElements),\r\n    },\r\n    color: {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: true,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: ['feFlood', 'feDiffuseLighting', 'feSpecularLighting', 'stop'].concat(shapeAndText),\r\n    },\r\n    'color-interpolation': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'sRGB',\r\n        applyTo: colorApply,\r\n    },\r\n    'color-rendering': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'auto',\r\n        applyTo: colorApply,\r\n    },\r\n    cursor: {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: true,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'auto',\r\n        applyTo: useContainerGraphics,\r\n    },\r\n    direction: {\r\n        couldBeStyle: true,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'ltr',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    display: {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'inline',\r\n        applyTo: ['svg', 'g', 'switch', 'a', 'foreignObject', 'use'].concat(definitions_1.graphicsElements),\r\n    },\r\n    'dominant-baseline': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'auto',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    fill: {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: true,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: true,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '#000',\r\n        applyTo: shapeAndText,\r\n    },\r\n    'fill-opacity': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '1',\r\n        applyTo: shapeAndText,\r\n    },\r\n    'fill-rule': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'nonzero',\r\n        applyTo: shapeAndText,\r\n    },\r\n    filter: {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: true,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'none',\r\n        applyTo: useContainerGraphics,\r\n    },\r\n    'flood-color': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: true,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '#000',\r\n        applyTo: ['feFlood'],\r\n    },\r\n    'flood-opacity': {\r\n        couldBeStyle: true,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: ['feFlood'],\r\n    },\r\n    font: {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'font-family': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'font-size': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'medium',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'font-size-adjust': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'none',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'font-stretch': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'normal',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'font-style': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'normal',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'font-variant': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'normal',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'font-weight': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'normal',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'glyph-orientation-vertical': {\r\n        couldBeStyle: true,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: 'auto',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'image-rendering': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'auto',\r\n        applyTo: ['image'],\r\n    },\r\n    'letter-spacing': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'normal',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'lighting-color': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: true,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '#fff',\r\n        applyTo: ['feDiffuseLighting', 'feSpecularLighting'],\r\n    },\r\n    'line-height': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: true,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'normal',\r\n        applyTo: ['text'],\r\n    },\r\n    marker: {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: true,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: definitions_1.shapeElements,\r\n    },\r\n    'marker-end': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: true,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'none',\r\n        applyTo: definitions_1.shapeElements,\r\n    },\r\n    'marker-mid': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: true,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'none',\r\n        applyTo: definitions_1.shapeElements,\r\n    },\r\n    'marker-start': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: true,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'none',\r\n        applyTo: definitions_1.shapeElements,\r\n    },\r\n    mask: {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: true,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'none',\r\n        applyTo: useContainerGraphics,\r\n    },\r\n    opacity: {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '1',\r\n        applyTo: ['svg', 'g', 'symbol', 'marker', 'a', 'switch', 'use', 'unknown'].concat(definitions_1.graphicsElements),\r\n    },\r\n    overflow: {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '',\r\n        applyTo: viewport,\r\n    },\r\n    'paint-order': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'normal',\r\n        applyTo: shapeAndText,\r\n    },\r\n    'pointer-events': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'visiblePainted',\r\n        applyTo: useContainerGraphics,\r\n    },\r\n    'shape-rendering': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'auto',\r\n        applyTo: definitions_1.shapeElements,\r\n    },\r\n    'stop-color': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: true,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '#000',\r\n        applyTo: ['stop'],\r\n    },\r\n    'stop-opacity': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '1',\r\n        applyTo: ['stop'],\r\n    },\r\n    stroke: {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: true,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: true,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'none',\r\n        applyTo: shapeAndText,\r\n    },\r\n    'stroke-dasharray': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'none',\r\n        applyTo: shapeAndText,\r\n    },\r\n    'stroke-dashoffset': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '0',\r\n        applyTo: shapeAndText,\r\n    },\r\n    'stroke-linecap': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'butt',\r\n        applyTo: shapeAndText,\r\n    },\r\n    'stroke-linejoin': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'miter',\r\n        applyTo: shapeAndText,\r\n    },\r\n    'stroke-miterlimit': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '4',\r\n        applyTo: shapeAndText,\r\n    },\r\n    'stroke-opacity': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: true,\r\n        legalValues: [],\r\n        initValue: '1',\r\n        applyTo: shapeAndText,\r\n    },\r\n    'stroke-width': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: '1',\r\n        applyTo: shapeAndText,\r\n    },\r\n    'text-anchor': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'start',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'text-decoration': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'none',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'text-rendering': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'auto',\r\n        applyTo: ['text'],\r\n    },\r\n    'unicode-bidi': {\r\n        couldBeStyle: true,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'normal',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'vector-effect': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'none',\r\n        applyTo: ['use'].concat(definitions_1.graphicsElements),\r\n    },\r\n    visibility: {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'visible',\r\n        applyTo: ['use', 'a'].concat(definitions_1.graphicsElements),\r\n    },\r\n    'word-spacing': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: true,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'normal',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'white-space': {\r\n        couldBeStyle: true,\r\n        animatable: true,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'normal',\r\n        applyTo: definitions_1.textContentElements,\r\n    },\r\n    'writing-mode': {\r\n        couldBeStyle: true,\r\n        animatable: false,\r\n        maybeColor: false,\r\n        maybeIRI: false,\r\n        maybeFuncIRI: false,\r\n        maybeSizeNumber: false,\r\n        maybeAccurateNumber: false,\r\n        legalValues: [],\r\n        initValue: 'lr-tb',\r\n        applyTo: ['text'],\r\n    }\r\n};\r\nconst undefAttr = {\r\n    isUndef: true,\r\n    couldBeStyle: false,\r\n    animatable: false,\r\n    maybeColor: false,\r\n    maybeIRI: false,\r\n    maybeFuncIRI: false,\r\n    maybeSizeNumber: false,\r\n    maybeAccurateNumber: false,\r\n    legalValues: [],\r\n    initValue: '',\r\n    applyTo: [],\r\n};\r\nexports.regularAttr = new Proxy(regular_attr, {\r\n    get(obj, prop) {\r\n        return prop in obj ? obj[prop] : undefAttr;\r\n    }\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/const/regular-attr.ts?");

/***/ }),

/***/ "./src/slimming/const/regular-tag.ts":
/*!*******************************************!*\
  !*** ./src/slimming/const/regular-tag.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst definitions_1 = __webpack_require__(/*! ./definitions */ \"./src/slimming/const/definitions.ts\");\r\nconst baseChildren = ['script'].concat(definitions_1.descriptiveElements);\r\nconst shapeChildren = ['clipPath', 'marker', 'mask', 'style'].concat(definitions_1.animationElements, baseChildren, definitions_1.paintServerElements);\r\nconst globalChildren = ['a', 'audio', 'canvas', 'clipPath', 'cursor', 'filter', 'foreignObject', 'iframe', 'image', 'marker', 'mask', 'style', 'switch', 'text', 'video', 'view'].concat(definitions_1.animationElements, baseChildren, definitions_1.paintServerElements, definitions_1.shapeElements, definitions_1.structuralElements);\r\nconst gradientChildren = ['animate', 'animateTransform', 'set', 'stop', 'style'].concat(baseChildren);\r\nconst feChildren = ['animate', 'set'].concat(baseChildren);\r\nconst conditionAndCore = definitions_1.conditionalProcessingAttributes.concat(definitions_1.coreAttributes);\r\nconst shapeAttributes = ['pathLength'].concat(conditionAndCore);\r\nconst animateAttributes = conditionAndCore.concat(definitions_1.animationAdditionAttributes, definitions_1.animationTimingAttributes, definitions_1.animationValueAttributes);\r\nconst feAttributes = ['result'].concat(definitions_1.coreAttributes, definitions_1.rectAttributes);\r\nconst feFuncAttributes = definitions_1.transferFunctionElementAttributes.concat(definitions_1.coreAttributes);\r\n// tag define\r\nconst regular_tag = {\r\n    'a': {\r\n        containTextNode: true,\r\n        legalChildElements: { transparent: true, noself: true, childElements: [] },\r\n        ownAttributes: ['href', 'target', 'download', 'rel', 'hreflang', 'type'].concat(conditionAndCore, definitions_1.deprecatedXlinkAttributes),\r\n    },\r\n    'animate': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: baseChildren },\r\n        ownAttributes: ['attributeName'].concat(animateAttributes),\r\n    },\r\n    'animateMotion': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: ['mpath'].concat(baseChildren) },\r\n        ownAttributes: ['path', 'keyPoints', 'rotate', 'origin'].concat(animateAttributes),\r\n    },\r\n    'animateTransform': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: baseChildren },\r\n        ownAttributes: ['attributeName', 'type'].concat(animateAttributes),\r\n    },\r\n    'audio': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: [] },\r\n        ownAttributes: [],\r\n    },\r\n    'canvas': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: [] },\r\n        ownAttributes: [],\r\n    },\r\n    'circle': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: shapeChildren },\r\n        ownAttributes: ['cx', 'cy', 'r'].concat(shapeAttributes),\r\n    },\r\n    'clipPath': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: ['text', 'use'].concat(baseChildren, definitions_1.animationElements, definitions_1.shapeElements) },\r\n        ownAttributes: ['externalResourcesRequired', 'transform', 'clipPathUnits'].concat(conditionAndCore)\r\n    },\r\n    'defs': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: globalChildren },\r\n        ownAttributes: definitions_1.coreAttributes,\r\n    },\r\n    'desc': {\r\n        containTextNode: true,\r\n        legalChildElements: { any: true, childElements: [] },\r\n        ownAttributes: definitions_1.coreAttributes,\r\n    },\r\n    'discard': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: baseChildren },\r\n        ownAttributes: ['begin', 'href'].concat(conditionAndCore),\r\n    },\r\n    'ellipse': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: shapeChildren },\r\n        ownAttributes: ['cx', 'cy', 'rx', 'ry'].concat(shapeAttributes),\r\n    },\r\n    'feBlend': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['in', 'in2', 'mode'].concat(feAttributes),\r\n    },\r\n    'feColorMatrix': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['in', 'type', 'values'].concat(feAttributes),\r\n    },\r\n    'feComponentTransfer': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: ['feFuncR', 'feFuncG', 'feFuncB', 'feFuncA'].concat(baseChildren) },\r\n        ownAttributes: ['in'].concat(feAttributes),\r\n    },\r\n    'feComposite': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['in', 'in2', 'operator', 'k1', 'k2', 'k3', 'k4'].concat(feAttributes),\r\n    },\r\n    'feConvolveMatrix': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['in', 'order', 'kernelMatrix', 'divisor', 'bias', 'targetX', 'targetY', 'edgeMode', 'kernelUnitLength', 'preserveAlpha'].concat(feAttributes),\r\n    },\r\n    'feDiffuseLighting': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: baseChildren.concat(definitions_1.lightSourceElements) },\r\n        ownAttributes: ['in', 'surfaceScale', 'diffuseConstant', 'kernelUnitLength'].concat(feAttributes),\r\n    },\r\n    'feDisplacementMap': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['in', 'in2', 'scale', 'xChannelSelector', 'yChannelSelector'].concat(feAttributes),\r\n    },\r\n    'feDistantLight': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['azimuth', 'elevation'].concat(definitions_1.coreAttributes),\r\n    },\r\n    'feFlood': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: feAttributes,\r\n    },\r\n    'feFuncA': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: feFuncAttributes,\r\n    },\r\n    'feFuncB': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: feFuncAttributes,\r\n    },\r\n    'feFuncG': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: feFuncAttributes,\r\n    },\r\n    'feFuncR': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: feFuncAttributes,\r\n    },\r\n    'feGaussianBlur': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['in', 'stdDeviation', 'edgeMode'].concat(feAttributes),\r\n    },\r\n    'feImage': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: ['animate', 'animateTransform', 'set'].concat(baseChildren) },\r\n        ownAttributes: ['externalResourcesRequired', 'preserveAspectRatio', 'xlink:href', 'href', 'crossorigin'].concat(feAttributes),\r\n    },\r\n    'feMerge': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: ['feMergeNode'].concat(baseChildren) },\r\n        ownAttributes: feAttributes,\r\n    },\r\n    'feMergeNode': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['in'].concat(definitions_1.coreAttributes),\r\n    },\r\n    'feMorphology': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['in', 'operator', 'radius'].concat(feAttributes),\r\n    },\r\n    'feOffset': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['in', 'dx', 'dy'].concat(feAttributes),\r\n    },\r\n    'fePointLight': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['x', 'y', 'z'].concat(definitions_1.coreAttributes),\r\n    },\r\n    'feSpecularLighting': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: baseChildren.concat(definitions_1.lightSourceElements) },\r\n        ownAttributes: ['in', 'surfaceScale', 'specularConstant', 'specularExponent', 'kernelUnitLength'].concat(feAttributes),\r\n    },\r\n    'feSpotLight': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['x', 'y', 'z'].concat(definitions_1.coreAttributes),\r\n    },\r\n    'feTile': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['in'].concat(feAttributes),\r\n    },\r\n    'feTurbulence': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren },\r\n        ownAttributes: ['baseFrequency', 'numOctaves', 'seed', 'stitchTiles', 'type'].concat(feAttributes),\r\n    },\r\n    'filter': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: feChildren.concat(definitions_1.filterPrimitiveElements) },\r\n        ownAttributes: ['externalResourcesRequired', 'filterUnits', 'primitiveUnits'].concat(definitions_1.coreAttributes, definitions_1.rectAttributes),\r\n    },\r\n    'foreignObject': {\r\n        containTextNode: false,\r\n        legalChildElements: { any: true, childElements: [] },\r\n        ownAttributes: definitions_1.rectAttributes.concat(conditionAndCore),\r\n    },\r\n    'g': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: globalChildren },\r\n        ownAttributes: conditionAndCore,\r\n    },\r\n    'iframe': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: [] },\r\n        ownAttributes: [],\r\n    },\r\n    'image': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: ['clipPath', 'mask', 'style'].concat(definitions_1.animationElements, baseChildren) },\r\n        ownAttributes: ['preserveAspectRatio', 'href', 'crossorigin'].concat(conditionAndCore, definitions_1.deprecatedXlinkAttributes, definitions_1.rectAttributes),\r\n    },\r\n    'line': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: shapeChildren },\r\n        ownAttributes: ['x1', 'y1', 'x2', 'y2'].concat(shapeAttributes),\r\n    },\r\n    'linearGradient': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: gradientChildren },\r\n        ownAttributes: ['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform', 'spreadMethod', 'href'].concat(definitions_1.coreAttributes, definitions_1.deprecatedXlinkAttributes),\r\n    },\r\n    'marker': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: globalChildren },\r\n        ownAttributes: ['viewBox', 'preserveAspectRatio', 'refX', 'refY', 'markerUnits', 'markerWidth', 'markerHeight', 'orient'].concat(definitions_1.coreAttributes),\r\n    },\r\n    'mask': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: ['a', 'clipPath', 'cursor', 'filter', 'foreignObject', 'image', 'marker', 'mask', 'pattern', 'style', 'switch', 'view', 'text'].concat(definitions_1.animationElements, baseChildren, definitions_1.shapeElements, definitions_1.structuralElements, definitions_1.gradientElements) },\r\n        ownAttributes: ['maskUnits', 'maskContentUnits'].concat(definitions_1.rectAttributes, conditionAndCore),\r\n    },\r\n    'metadata': {\r\n        containTextNode: true,\r\n        legalChildElements: { any: true, childElements: [] },\r\n        ownAttributes: definitions_1.coreAttributes,\r\n    },\r\n    'mpath': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: baseChildren },\r\n        ownAttributes: ['href'].concat(definitions_1.coreAttributes),\r\n    },\r\n    'path': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: shapeChildren },\r\n        ownAttributes: ['d'].concat(shapeAttributes),\r\n    },\r\n    'pattern': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: globalChildren },\r\n        ownAttributes: ['viewBox', 'preserveAspectRatio', 'patternUnits', 'patternContentUnits', 'patternTransform', 'href'].concat(definitions_1.coreAttributes, definitions_1.deprecatedXlinkAttributes, definitions_1.rectAttributes),\r\n    },\r\n    'polygon': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: shapeChildren },\r\n        ownAttributes: ['points'].concat(shapeAttributes),\r\n    },\r\n    'polyline': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: shapeChildren },\r\n        ownAttributes: ['points'].concat(shapeAttributes),\r\n    },\r\n    'radialGradient': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: gradientChildren },\r\n        ownAttributes: ['cx', 'cy', 'r', 'fx', 'fy', 'fr', 'gradientUnits', 'gradientTransform', 'spreadMethod', 'href'].concat(definitions_1.coreAttributes, definitions_1.deprecatedXlinkAttributes),\r\n    },\r\n    'rect': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: shapeChildren },\r\n        ownAttributes: ['rx', 'ry'].concat(definitions_1.rectAttributes, shapeAttributes),\r\n    },\r\n    'script': {\r\n        containTextNode: true,\r\n        legalChildElements: { childElements: [] },\r\n        ownAttributes: ['type', 'href', 'crossorigin'].concat(definitions_1.coreAttributes, definitions_1.deprecatedXlinkAttributes),\r\n    },\r\n    'set': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: baseChildren },\r\n        ownAttributes: ['to', 'attributeName'].concat(conditionAndCore, definitions_1.animationTimingAttributes),\r\n    },\r\n    'stop': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: ['animate', 'script', 'set', 'style'] },\r\n        ownAttributes: ['path', 'offset'].concat(definitions_1.coreAttributes),\r\n    },\r\n    'style': {\r\n        containTextNode: true,\r\n        legalChildElements: { childElements: [] },\r\n        ownAttributes: ['type', 'media', 'title'].concat(definitions_1.coreAttributes),\r\n    },\r\n    'svg': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: globalChildren },\r\n        ownAttributes: ['viewBox', 'preserveAspectRatio', 'zoomAndPan', 'transform'].concat(conditionAndCore, definitions_1.rectAttributes),\r\n    },\r\n    'switch': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: ['a', 'audio', 'canvas', 'foreignObject', 'g', 'iframe', 'image', 'svg', 'switch', 'text', 'use', 'video'].concat(definitions_1.animationElements, definitions_1.shapeElements) },\r\n        ownAttributes: conditionAndCore,\r\n    },\r\n    'symbol': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: globalChildren },\r\n        ownAttributes: ['preserveAspectRatio', 'viewBox', 'refX', 'refY'].concat(definitions_1.coreAttributes, definitions_1.rectAttributes),\r\n    },\r\n    'text': {\r\n        containTextNode: true,\r\n        legalChildElements: { childElements: ['a', 'clipPath', 'marker', 'mask', 'style'].concat(definitions_1.animationElements, baseChildren, definitions_1.paintServerElements, definitions_1.textContentChildElements) },\r\n        ownAttributes: ['lengthAdjust', 'x', 'y', 'dx', 'dy', 'rotate', 'textLength'].concat(conditionAndCore),\r\n    },\r\n    'textPath': {\r\n        containTextNode: true,\r\n        legalChildElements: { childElements: ['a', 'animate', 'clipPath', 'marker', 'mask', 'set', 'style', 'tspan'].concat(baseChildren, definitions_1.paintServerElements) },\r\n        ownAttributes: ['lengthAdjust', 'textLength', 'path', 'href', 'startOffset', 'method', 'spacing', 'side'].concat(conditionAndCore, definitions_1.deprecatedXlinkAttributes),\r\n    },\r\n    'title': {\r\n        containTextNode: true,\r\n        legalChildElements: { any: true, childElements: ['a', 'animate', 'set', 'style', 'tspan'].concat(baseChildren, definitions_1.paintServerElements) },\r\n        ownAttributes: definitions_1.coreAttributes,\r\n    },\r\n    'tspan': {\r\n        containTextNode: true,\r\n        legalChildElements: { childElements: [] },\r\n        ownAttributes: ['lengthAdjust', 'x', 'y', 'dx', 'dy', 'rotate', 'textLength'].concat(conditionAndCore),\r\n    },\r\n    'unknown': {\r\n        containTextNode: false,\r\n        legalChildElements: { any: true, childElements: [] },\r\n        ownAttributes: conditionAndCore,\r\n    },\r\n    'use': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: ['clipPath', 'mask', 'style'].concat(definitions_1.animationElements, baseChildren) },\r\n        ownAttributes: ['href'].concat(definitions_1.rectAttributes, conditionAndCore, definitions_1.deprecatedXlinkAttributes),\r\n    },\r\n    'video': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: [] },\r\n        ownAttributes: [],\r\n    },\r\n    'view': {\r\n        containTextNode: false,\r\n        legalChildElements: { childElements: ['style'].concat(definitions_1.animationElements, baseChildren) },\r\n        ownAttributes: ['viewBox', 'preserveAspectRatio', 'zoomAndPan'].concat(definitions_1.coreAttributes),\r\n    },\r\n};\r\nconst undefTag = {\r\n    isUndef: true,\r\n    containTextNode: false,\r\n    legalChildElements: null,\r\n    ownAttributes: null,\r\n};\r\nexports.regularTag = new Proxy(regular_tag, {\r\n    get(obj, prop) {\r\n        return prop in obj ? obj[prop] : undefTag;\r\n    }\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/const/regular-tag.ts?");

/***/ }),

/***/ "./src/slimming/const/tokens.ts":
/*!**************************************!*\
  !*** ./src/slimming/const/tokens.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n// 符合官方定义的 token\r\n// https://drafts.csswg.org/css-syntax-3\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// number token\r\nexports.numberPattern = '[+-]?(?:\\\\d+(?:\\\\.\\\\d+)?|\\\\.\\\\d+)(?:e[+-]?\\\\d+)?';\r\nexports.numberRegGlobal = new RegExp(exports.numberPattern, 'gi');\r\nexports.numberRegFullMatch = new RegExp(`^${exports.numberPattern}$`, 'i');\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/const/tokens.ts?");

/***/ }),

/***/ "./src/slimming/default-rules/combine-script.ts":
/*!******************************************************!*\
  !*** ./src/slimming/default-rules/combine-script.ts ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst index_1 = __webpack_require__(/*! ../../node/index */ \"./src/node/index.ts\");\r\nconst mix_white_space_1 = __webpack_require__(/*! ../utils/mix-white-space */ \"./src/slimming/utils/mix-white-space.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\n// 合并多个 script 标签，并将内容合并为一个子节点\r\nexports.combineScript = (dom) => new Promise((resolve, reject) => {\r\n    let firstScript = null;\r\n    let lastChildNode;\r\n    const checkCNode = (node) => {\r\n        for (let i = 0; i < node.childNodes.length; i++) {\r\n            const cNode = node.childNodes[i];\r\n            if (cNode.nodeType !== index_1.NodeType.Text && cNode.nodeType !== index_1.NodeType.CDATA) {\r\n                rm_node_1.rmNode(cNode);\r\n                i--;\r\n            }\r\n            else {\r\n                cNode.textContent = mix_white_space_1.mixWhiteSpace(cNode.textContent.trim());\r\n                if (cNode.nodeType === index_1.NodeType.Text) {\r\n                    cNode.nodeType = index_1.NodeType.CDATA;\r\n                }\r\n                if (!lastChildNode) {\r\n                    lastChildNode = cNode;\r\n                }\r\n                else {\r\n                    if (lastChildNode.textContent.slice(-1) !== ';') {\r\n                        lastChildNode.textContent += ';';\r\n                    }\r\n                    lastChildNode.textContent += cNode.textContent;\r\n                    rm_node_1.rmNode(cNode);\r\n                    i--;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    traversal_node_1.traversalNode(ramda_1.propEq('nodeName', 'script'), (node) => {\r\n        if (firstScript) {\r\n            checkCNode(node);\r\n            rm_node_1.rmNode(node);\r\n        }\r\n        else {\r\n            firstScript = node;\r\n            checkCNode(node);\r\n        }\r\n    }, dom);\r\n    if (firstScript) {\r\n        const childNodes = firstScript.childNodes;\r\n        if (childNodes.length === 0 || !childNodes[0].textContent.replace(/\\s/g, '')) {\r\n            // 如果内容为空，则移除style节点\r\n            rm_node_1.rmNode(firstScript);\r\n        }\r\n        else if (childNodes[0].textContent.indexOf('<') === -1) {\r\n            // 如果没有危险代码，则由 CDATA 转为普通文本类型\r\n            childNodes[0].nodeType = index_1.NodeType.Text;\r\n        }\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/default-rules/combine-script.ts?");

/***/ }),

/***/ "./src/slimming/default-rules/combine-style.ts":
/*!*****************************************************!*\
  !*** ./src/slimming/default-rules/combine-style.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst index_1 = __webpack_require__(/*! ../../node/index */ \"./src/node/index.ts\");\r\nconst mix_white_space_1 = __webpack_require__(/*! ../utils/mix-white-space */ \"./src/slimming/utils/mix-white-space.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\n// 合并多个 style 标签，并将文本节点合并到一个子节点\r\nexports.combineStyle = (dom) => new Promise((resolve, reject) => {\r\n    let firstStyle;\r\n    let lastChildNode;\r\n    const checkCNode = (node) => {\r\n        for (let i = 0; i < node.childNodes.length; i++) {\r\n            const cNode = node.childNodes[i];\r\n            if (cNode.nodeType !== index_1.NodeType.Text && cNode.nodeType !== index_1.NodeType.CDATA) {\r\n                rm_node_1.rmNode(cNode);\r\n                i--;\r\n            }\r\n            else {\r\n                cNode.textContent = mix_white_space_1.mixWhiteSpace(cNode.textContent.trim());\r\n                if (cNode.nodeType === index_1.NodeType.Text) {\r\n                    cNode.nodeType = index_1.NodeType.CDATA;\r\n                }\r\n                if (!lastChildNode) {\r\n                    lastChildNode = cNode;\r\n                }\r\n                else {\r\n                    lastChildNode.textContent += cNode.textContent;\r\n                    rm_node_1.rmNode(cNode);\r\n                    i--;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    traversal_node_1.traversalNode(ramda_1.propEq('nodeName', 'style'), (node) => {\r\n        if (firstStyle) {\r\n            checkCNode(node);\r\n            rm_node_1.rmNode(node);\r\n        }\r\n        else {\r\n            firstStyle = node;\r\n            checkCNode(node);\r\n        }\r\n    }, dom);\r\n    if (firstStyle) {\r\n        const childNodes = firstStyle.childNodes;\r\n        if (childNodes.length === 0 || !childNodes[0].textContent.replace(/\\s/g, '')) { // 如果内容为空，则移除style节点\r\n            firstStyle.parentNode.removeChild(firstStyle);\r\n        }\r\n        else if (childNodes[0].textContent.indexOf('<') === -1) { // 如果没有危险代码，则由 CDATA 转为普通文本类型\r\n            childNodes[0].nodeType = index_1.NodeType.Text;\r\n        }\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/default-rules/combine-style.ts?");

/***/ }),

/***/ "./src/slimming/default-rules/combine-textnode.ts":
/*!********************************************************!*\
  !*** ./src/slimming/default-rules/combine-textnode.ts ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst index_1 = __webpack_require__(/*! ../../node/index */ \"./src/node/index.ts\");\r\nconst regular_tag_1 = __webpack_require__(/*! ../const/regular-tag */ \"./src/slimming/const/regular-tag.ts\");\r\nconst mix_white_space_1 = __webpack_require__(/*! ../utils/mix-white-space */ \"./src/slimming/utils/mix-white-space.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.combineTextNode = (dom) => new Promise((resolve, reject) => {\r\n    // 首先移除所有可移除的文本节点，并对文本节点进行冗余空格清理\r\n    traversal_node_1.traversalNode(node => node.nodeType === index_1.NodeType.Text || node.nodeType === index_1.NodeType.CDATA, (node) => {\r\n        if (!regular_tag_1.regularTag[node.parentNode.nodeName] || !regular_tag_1.regularTag[node.parentNode.nodeName].containTextNode) {\r\n            rm_node_1.rmNode(node);\r\n        }\r\n        else {\r\n            node.textContent = mix_white_space_1.mixWhiteSpace(node.textContent);\r\n        }\r\n    }, dom);\r\n    // 合并相邻的同类型节点\r\n    traversal_node_1.traversalNode(node => regular_tag_1.regularTag[node.nodeName] && regular_tag_1.regularTag[node.nodeName].containTextNode, node => {\r\n        let lastNode = null;\r\n        for (let i = 0; i < node.childNodes.length; i++) {\r\n            const childNode = node.childNodes[i];\r\n            if (childNode.nodeType === index_1.NodeType.Text || childNode.nodeType === index_1.NodeType.CDATA) {\r\n                if (lastNode) {\r\n                    if (lastNode.nodeType === childNode.nodeType) {\r\n                        lastNode.textContent = mix_white_space_1.mixWhiteSpace(`${lastNode.textContent}${childNode.textContent}`);\r\n                        rm_node_1.rmNode(childNode);\r\n                        i--;\r\n                    }\r\n                    else {\r\n                        lastNode = childNode;\r\n                    }\r\n                }\r\n                else {\r\n                    lastNode = childNode;\r\n                }\r\n            }\r\n        }\r\n    }, dom);\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/default-rules/combine-textnode.ts?");

/***/ }),

/***/ "./src/slimming/default-rules/rm-useless.ts":
/*!**************************************************!*\
  !*** ./src/slimming/default-rules/rm-useless.ts ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// 移除其它类型的 xml 定义节点和 xml 片段节点\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst index_1 = __webpack_require__(/*! ../../node/index */ \"./src/node/index.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.rmUseless = (dom) => new Promise((resolve, reject) => {\r\n    traversal_node_1.traversalNode(ramda_1.anyPass([ramda_1.propEq('nodeType', index_1.NodeType.OtherSect), ramda_1.propEq('nodeType', index_1.NodeType.OtherDecl)]), rm_node_1.rmNode, dom);\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/default-rules/rm-useless.ts?");

/***/ }),

/***/ "./src/slimming/math/decimal.ts":
/*!**************************************!*\
  !*** ./src/slimming/math/decimal.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/*\r\n * 以字符串的形式返回小数部分\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.decimal = a => {\r\n    const astr = `${a}`;\r\n    if (astr.indexOf('.') === -1) {\r\n        return '';\r\n    }\r\n    else {\r\n        return astr.slice(astr.indexOf('.') + 1);\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/math/decimal.ts?");

/***/ }),

/***/ "./src/slimming/math/digit.ts":
/*!************************************!*\
  !*** ./src/slimming/math/digit.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/*\r\n * 返回两个小数的最大精度\r\n */\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst decimal_1 = __webpack_require__(/*! ./decimal */ \"./src/slimming/math/decimal.ts\");\r\nexports.digit = ramda_1.curry((a, b) => Math.max(decimal_1.decimal(a).length, decimal_1.decimal(b).length));\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/math/digit.ts?");

/***/ }),

/***/ "./src/slimming/math/minus.ts":
/*!************************************!*\
  !*** ./src/slimming/math/minus.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/*\r\n * 保证精度的减法\r\n * 用于解决 双精度浮点数 导致精度变化的问题\r\n */\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst digit_1 = __webpack_require__(/*! ./digit */ \"./src/slimming/math/digit.ts\");\r\nconst tofixed_1 = __webpack_require__(/*! ./tofixed */ \"./src/slimming/math/tofixed.ts\");\r\nexports.minus = ramda_1.curry((a, b) => tofixed_1.toFixed(digit_1.digit(a, b), a - b));\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/math/minus.ts?");

/***/ }),

/***/ "./src/slimming/math/plus.ts":
/*!***********************************!*\
  !*** ./src/slimming/math/plus.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/*\r\n * 保证精度的加法\r\n * 用于解决 双精度浮点数 导致精度变化的问题\r\n */\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst digit_1 = __webpack_require__(/*! ./digit */ \"./src/slimming/math/digit.ts\");\r\nconst tofixed_1 = __webpack_require__(/*! ./tofixed */ \"./src/slimming/math/tofixed.ts\");\r\nexports.plus = ramda_1.curry((a, b) => tofixed_1.toFixed(digit_1.digit(a, b), a + b));\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/math/plus.ts?");

/***/ }),

/***/ "./src/slimming/math/symmetry.ts":
/*!***************************************!*\
  !*** ./src/slimming/math/symmetry.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst plus_1 = __webpack_require__(/*! ./plus */ \"./src/slimming/math/plus.ts\");\r\nconst minus_1 = __webpack_require__(/*! ./minus */ \"./src/slimming/math/minus.ts\");\r\n// 获取 a 相对于 b 的对称值\r\nexports.symmetry = ramda_1.curry((a, b) => plus_1.plus(b, minus_1.minus(b, a)));\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/math/symmetry.ts?");

/***/ }),

/***/ "./src/slimming/math/tofixed.ts":
/*!**************************************!*\
  !*** ./src/slimming/math/tofixed.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nexports.toFixed = ramda_1.curry((digit, a) => parseFloat(a.toFixed(digit)));\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/math/tofixed.ts?");

/***/ }),

/***/ "./src/slimming/math/vector.ts":
/*!*************************************!*\
  !*** ./src/slimming/math/vector.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n// 2d 向量\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst HALF_CIRC = 180;\r\nconst ACCURACY = 1e6;\r\nclass Vector {\r\n    constructor(x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    // 获取向量长度\r\n    get modulo() {\r\n        return Vector.Rounding(Math.sqrt(this.x * this.x + this.y * this.y));\r\n    }\r\n    set modulo(m) {\r\n        this.normalize();\r\n        this.x *= m;\r\n        this.y *= m;\r\n    }\r\n    rotate(arc) {\r\n        const _x = this.x;\r\n        const _y = this.y;\r\n        this.x = _x * Math.cos(arc) - _y * Math.sin(arc);\r\n        this.y = _x * Math.sin(arc) + _y * Math.cos(arc);\r\n        return this;\r\n    }\r\n    // value 直接返回长度\r\n    valueOf() {\r\n        return this.modulo;\r\n    }\r\n    // 返回字符串形式\r\n    toString() {\r\n        return `[${this.x},${this.y}]`;\r\n    }\r\n    // 转为单位向量\r\n    normalize() {\r\n        let modulo = this.modulo;\r\n        if (modulo !== 0) {\r\n            this.x /= modulo;\r\n            this.y /= modulo;\r\n        }\r\n        else {\r\n            throw new Error('零向量无法标准化！');\r\n        }\r\n        return this;\r\n    }\r\n    // 转为零向量\r\n    zero() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        return this;\r\n    }\r\n    // 与另一个向量相加\r\n    add(v) {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        return this;\r\n    }\r\n    // 与另一个向量相减\r\n    substract(v) {\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n        return this;\r\n    }\r\n    multiplied(n) {\r\n        if (typeof n === 'number') {\r\n            this.x *= n;\r\n            this.y *= n;\r\n            return this;\r\n        }\r\n        else if (n instanceof Vector) {\r\n            return this.x * n.x + this.y * n.y;\r\n        }\r\n    }\r\n    // 计算两个向量的夹角 - 弧度\r\n    radian(v) {\r\n        return Vector.radian(this, v);\r\n    }\r\n    // 计算两个向量的夹角 - 角度\r\n    angel(v) {\r\n        return Vector.angel(this, v);\r\n    }\r\n    // 自己是不是零向量\r\n    get isZero() {\r\n        return this.x === 0 && this.y === 0;\r\n    }\r\n    // 自己是不是单位向量\r\n    get isNormalize() {\r\n        return this.modulo === 1;\r\n    }\r\n    // 两个向量相加\r\n    static add(v1, v2) {\r\n        return new Vector(v1.x + v2.x, v1.y + v2.y);\r\n    }\r\n    // 两个向量相减\r\n    static substract(v1, v2) {\r\n        return new Vector(v1.x - v2.x, v1.y - v2.y);\r\n    }\r\n    // 两个向量相乘\r\n    static multiplied(v1, n) {\r\n        if (typeof n === 'number') {\r\n            return new Vector(v1.x * n, v1.y * n);\r\n        }\r\n        else if (n instanceof Vector) {\r\n            return v1.x * n.x + v1.y * n.y;\r\n        }\r\n    }\r\n    // 两个向量的夹角 - 弧度\r\n    static radian(v1, v2) {\r\n        if (v1.isZero || v2.isZero) {\r\n            return NaN;\r\n        }\r\n        return Math.acos(Vector.multiplied(v1, v2) / v1.modulo / v2.modulo);\r\n    }\r\n    // 两个向量的夹角 - 角度\r\n    static angel(v1, v2) {\r\n        if (v1.isZero || v2.isZero) {\r\n            return NaN;\r\n        }\r\n        return Vector.Rounding(HALF_CIRC * Vector.radian(v1, v2) / Math.PI);\r\n    }\r\n    // v1 到 v2 的投影分量\r\n    static projected(v1, v2) {\r\n        if (v1.isZero || v2.isZero) {\r\n            return new Vector(0, 0);\r\n        }\r\n        return Vector.multiplied(v2, Vector.multiplied(v1, v2) / Math.pow(v2.modulo, 2));\r\n    }\r\n    // v1 到 v2 的垂直分量\r\n    static plumb(v1, v2) {\r\n        if (v1.isZero) {\r\n            return new Vector(0, 0);\r\n        }\r\n        if (v2.isZero) {\r\n            return new Vector(v1.x, v1.y);\r\n        }\r\n        return Vector.substract(v1, Vector.projected(v1, v2));\r\n    }\r\n    // 取模，对小数点后6位进行取整，修正双精度浮点数导致无法正常标准化的\r\n    static Rounding(n) {\r\n        return Math.round(n * ACCURACY) / ACCURACY;\r\n    }\r\n    // 求距离\r\n    static distance(v1, v2) {\r\n        return Vector.substract(v1, v2).modulo;\r\n    }\r\n}\r\nexports.Vector = Vector;\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/math/vector.ts?");

/***/ }),

/***/ "./src/slimming/matrix/combine.ts":
/*!****************************************!*\
  !*** ./src/slimming/matrix/combine.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tofixed_1 = __webpack_require__(/*! ../math/tofixed */ \"./src/slimming/math/tofixed.ts\");\r\nconst exec_1 = __webpack_require__(/*! ./exec */ \"./src/slimming/matrix/exec.ts\");\r\nconst matrix_1 = __webpack_require__(/*! ./matrix */ \"./src/slimming/matrix/matrix.ts\");\r\nfunction combineMatrix(m, digit1, digit2) {\r\n    let matrix = new matrix_1.Matrix();\r\n    const operate = exec_1.execMatrix(m);\r\n    for (const item of operate) {\r\n        switch (item.type) {\r\n            case 'translate':\r\n                matrix = matrix.translate(item.val[0], item.val[1]);\r\n                break;\r\n            case 'rotate':\r\n                matrix = matrix.rotate(item.val[0]);\r\n                break;\r\n            case 'scale':\r\n                matrix = matrix.scale(item.val[0], ...item.val.slice(1));\r\n                break;\r\n            case 'skewX':\r\n                matrix = matrix.skewX(item.val[0]);\r\n                break;\r\n            case 'skewY':\r\n                matrix = matrix.skewY(item.val[0]);\r\n                break;\r\n            case 'matrix':\r\n                const ex_matrix = new matrix_1.Matrix(...item.val);\r\n                matrix = matrix.multiply(ex_matrix);\r\n                break;\r\n            default:\r\n                return 'matrix(1,0,0,1,0,0)';\r\n        }\r\n    }\r\n    matrix.a = tofixed_1.toFixed(digit1, matrix.a);\r\n    matrix.b = tofixed_1.toFixed(digit1, matrix.b);\r\n    matrix.c = tofixed_1.toFixed(digit1, matrix.c);\r\n    matrix.d = tofixed_1.toFixed(digit1, matrix.d);\r\n    matrix.e = tofixed_1.toFixed(digit2, matrix.e);\r\n    matrix.f = tofixed_1.toFixed(digit2, matrix.f);\r\n    return `matrix(${matrix.toString()})`;\r\n}\r\nexports.combineMatrix = combineMatrix;\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/matrix/combine.ts?");

/***/ }),

/***/ "./src/slimming/matrix/exec.ts":
/*!*************************************!*\
  !*** ./src/slimming/matrix/exec.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst matrixReg = /([a-z]+)\\((.+?)\\)/gi;\r\nexports.execMatrix = (str) => {\r\n    const result = [];\r\n    // 重置正则匹配位置\r\n    matrixReg.lastIndex = 0;\r\n    let match = matrixReg.exec(str);\r\n    while (match !== null) {\r\n        result.push({\r\n            type: match[1],\r\n            val: match[2].trim().split(/[,\\s]+/).map(s => parseFloat(s.trim()))\r\n        });\r\n        match = matrixReg.exec(str);\r\n    }\r\n    return result;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/matrix/exec.ts?");

/***/ }),

/***/ "./src/slimming/matrix/matrix.ts":
/*!***************************************!*\
  !*** ./src/slimming/matrix/matrix.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst HALF_CIRC = 180;\r\nclass Matrix {\r\n    constructor(a = 1, b = 0, c = 0, d = 1, e = 0, f = 0) {\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.e = e;\r\n        this.f = f;\r\n    }\r\n    translate(x, y) {\r\n        return this.multiply(new Matrix(1, 0, 0, 1, x, y));\r\n    }\r\n    rotate(corner) {\r\n        const arg = corner * Math.PI / HALF_CIRC;\r\n        return this.multiply(new Matrix(Math.cos(arg), Math.sin(arg), -Math.sin(arg), Math.cos(arg), 0, 0));\r\n    }\r\n    scale(xscale, yscale = null) {\r\n        return this.multiply(new Matrix(xscale, 0, 0, yscale === null ? xscale : yscale, 0, 0));\r\n    }\r\n    skewX(corner) {\r\n        const skew = corner * Math.PI / HALF_CIRC;\r\n        return this.multiply(new Matrix(1, 0, Math.tan(skew), 1, 0, 0));\r\n    }\r\n    skewY(corner) {\r\n        const skew = corner * Math.PI / HALF_CIRC;\r\n        return this.multiply(new Matrix(1, Math.tan(skew), 0, 1, 0, 0));\r\n    }\r\n    multiply(m) {\r\n        const a = this.a * m.a + this.c * m.b;\r\n        const b = this.b * m.a + this.d * m.b;\r\n        const c = this.a * m.c + this.c * m.d;\r\n        const d = this.b * m.c + this.d * m.d;\r\n        const e = this.a * m.e + this.c * m.f + this.e;\r\n        const f = this.b * m.e + this.d * m.f + this.f;\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.e = e;\r\n        this.f = f;\r\n        return this;\r\n    }\r\n    toString() {\r\n        return `${this.a},${this.b},${this.c},${this.d},${this.e},${this.f}`;\r\n    }\r\n}\r\nexports.Matrix = Matrix;\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/matrix/matrix.ts?");

/***/ }),

/***/ "./src/slimming/matrix/shorten.ts":
/*!****************************************!*\
  !*** ./src/slimming/matrix/shorten.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.shorten = (s) => s.replace(/\\s*([,()])\\s*/g, '$1');\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/matrix/shorten.ts?");

/***/ }),

/***/ "./src/slimming/path/compute-a.ts":
/*!****************************************!*\
  !*** ./src/slimming/path/compute-a.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst tofixed_1 = __webpack_require__(/*! ../math/tofixed */ \"./src/slimming/math/tofixed.ts\");\r\nconst vector_1 = __webpack_require__(/*! ../math/vector */ \"./src/slimming/math/vector.ts\");\r\nconst number_length_1 = __webpack_require__(/*! ../utils/number-length */ \"./src/slimming/utils/number-length.ts\");\r\nconst APOS_RX = 0;\r\nconst APOS_RY = 1;\r\nconst APOS_ROTATION = 2;\r\nconst APOS_LARGE = 3;\r\nconst APOS_SWEEP = 4;\r\nexports.APOS_X = 5;\r\nexports.APOS_Y = 6;\r\nconst FROM_CX = 2;\r\nconst FROM_CY = 3;\r\nconst DIGIT = 3;\r\nconst getCenter = (x1, y1, x2, y2, r, ccw) => {\r\n    const v = new vector_1.Vector(x2 - x1, y2 - y1);\r\n    v.modulo = Math.sqrt(r * r - Math.pow(v.modulo / 2, 2));\r\n    const arc = ccw ? -Math.PI / 2 : Math.PI / 2;\r\n    v.rotate(arc);\r\n    const symbol = ccw ? 1 : -1;\r\n    const cx = (x1 + x2) / 2 + symbol * v.x;\r\n    const cy = (y1 + y2) / 2 + symbol * v.y;\r\n    return [tofixed_1.toFixed(DIGIT, cx), tofixed_1.toFixed(DIGIT, cy)];\r\n};\r\nconst combineA = (pathResult, rLen, absolute, center) => {\r\n    if (rLen > 0) {\r\n        const lastItem = pathResult[rLen - 1];\r\n        if (lastItem.type.toLowerCase() === 'a') {\r\n            const _eqProps = (prop) => ramda_1.eqProps(`${prop}`, lastItem.val, absolute);\r\n            if (ramda_1.all(_eqProps, [APOS_RX, APOS_RY, APOS_ROTATION]) && absolute[APOS_RX] === absolute[APOS_RY] && (lastItem.from[0] !== absolute[exports.APOS_X] || lastItem.from[1] !== absolute[exports.APOS_Y])) {\r\n                if (ramda_1.whereEq([lastItem.from[FROM_CX], lastItem.from[FROM_CY]], center)) {\r\n                    const vbase = new vector_1.Vector(lastItem.from[0] - center[0], lastItem.from[1] - center[1]);\r\n                    const v1 = new vector_1.Vector(lastItem.val[exports.APOS_X] - center[0], lastItem.val[exports.APOS_Y] - center[1]);\r\n                    const v2 = new vector_1.Vector(absolute[exports.APOS_X] - center[0], absolute[exports.APOS_Y] - center[1]);\r\n                    const relative = absolute.slice();\r\n                    relative[exports.APOS_X] -= lastItem.from[0];\r\n                    relative[exports.APOS_Y] -= lastItem.from[1];\r\n                    if (ramda_1.lt(number_length_1.numberLength(relative), number_length_1.numberLength(absolute))) {\r\n                        lastItem.type = 'a';\r\n                        lastItem.val[exports.APOS_X] = relative[exports.APOS_X];\r\n                        lastItem.val[exports.APOS_Y] = relative[exports.APOS_Y];\r\n                    }\r\n                    else {\r\n                        lastItem.type = 'A';\r\n                        lastItem.val[exports.APOS_X] = absolute[exports.APOS_X];\r\n                        lastItem.val[exports.APOS_Y] = absolute[exports.APOS_Y];\r\n                    }\r\n                    const radian1 = lastItem.val[APOS_LARGE] === 0 ? vector_1.Vector.radian(vbase, v1) : Math.PI * 2 - vector_1.Vector.radian(vbase, v1);\r\n                    const radian2 = absolute[APOS_LARGE] === 0 ? vector_1.Vector.radian(v1, v2) : Math.PI * 2 - vector_1.Vector.radian(v1, v2);\r\n                    if (radian1 + radian2 > Math.PI && lastItem.val[APOS_LARGE] === 0) {\r\n                        lastItem.val[APOS_LARGE] = 1;\r\n                    }\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n};\r\nexports.computeA = (absolute, relative, pathResult, pos) => {\r\n    const rLen = pathResult.length;\r\n    const center = getCenter(pos[0], pos[1], absolute[exports.APOS_X], absolute[exports.APOS_Y], absolute[APOS_RX], absolute[APOS_LARGE] === absolute[APOS_SWEEP]);\r\n    const hasCombine = combineA(pathResult, rLen, absolute, center);\r\n    if (!hasCombine) {\r\n        if (ramda_1.lt(number_length_1.numberLength(relative), number_length_1.numberLength(absolute))) {\r\n            pathResult.push({\r\n                type: 'a',\r\n                from: pos.concat(center),\r\n                val: relative.slice()\r\n            });\r\n        }\r\n        else {\r\n            pathResult.push({\r\n                type: 'A',\r\n                from: pos.concat(center),\r\n                val: absolute.slice()\r\n            });\r\n        }\r\n    }\r\n    return [absolute[exports.APOS_X], absolute[exports.APOS_Y]];\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/compute-a.ts?");

/***/ }),

/***/ "./src/slimming/path/compute-c.ts":
/*!****************************************!*\
  !*** ./src/slimming/path/compute-c.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst number_length_1 = __webpack_require__(/*! ../utils/number-length */ \"./src/slimming/utils/number-length.ts\");\r\nconst compute_s_1 = __webpack_require__(/*! ./compute-s */ \"./src/slimming/path/compute-s.ts\");\r\nconst match_control_1 = __webpack_require__(/*! ./match-control */ \"./src/slimming/path/match-control.ts\");\r\nconst CPOS_X1 = 0;\r\nconst CPOS_Y1 = 1;\r\nconst CPOS_X2 = 2;\r\nconst CPOS_X = 4;\r\nconst CPOS_Y = 5;\r\nconst canTransformS = (pathResult, rLen, x1, y1) => {\r\n    if (rLen > 0) {\r\n        const lastItem = pathResult[rLen - 1];\r\n        const type = lastItem.type;\r\n        if (type === 'C') {\r\n            return match_control_1.matchControl(lastItem.val.slice(CPOS_X2), 0, 0, x1, y1);\r\n        }\r\n        else if (type === 'c') {\r\n            return match_control_1.matchControl(lastItem.val.slice(CPOS_X2), lastItem.from[0], lastItem.from[1], x1, y1);\r\n        }\r\n        else if (type === 'S') {\r\n            return match_control_1.matchControl(lastItem.val, 0, 0, x1, y1);\r\n        }\r\n        else if (type === 's') {\r\n            return match_control_1.matchControl(lastItem.val, lastItem.from[0], lastItem.from[1], x1, y1);\r\n        }\r\n    }\r\n    return false;\r\n};\r\nexports.computeC = (absolute, relative, pathResult, pos) => {\r\n    const rLen = pathResult.length;\r\n    if (canTransformS(pathResult, rLen, absolute[CPOS_X1], absolute[CPOS_Y1])) {\r\n        return compute_s_1.computeS(absolute.slice(CPOS_X2), relative.slice(CPOS_X2), pathResult, pos);\r\n    }\r\n    else {\r\n        // 普通情况\r\n        if (ramda_1.lt(number_length_1.numberLength(relative), number_length_1.numberLength(absolute))) {\r\n            pathResult.push({\r\n                type: 'c',\r\n                from: pos.slice(),\r\n                val: relative.slice()\r\n            });\r\n        }\r\n        else {\r\n            pathResult.push({\r\n                type: 'C',\r\n                from: pos.slice(),\r\n                val: absolute.slice()\r\n            });\r\n        }\r\n        return [absolute[CPOS_X], absolute[CPOS_Y]];\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/compute-c.ts?");

/***/ }),

/***/ "./src/slimming/path/compute-h.ts":
/*!****************************************!*\
  !*** ./src/slimming/path/compute-h.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst minus_1 = __webpack_require__(/*! ../math/minus */ \"./src/slimming/math/minus.ts\");\r\nconst plus_1 = __webpack_require__(/*! ../math/plus */ \"./src/slimming/math/plus.ts\");\r\nconst number_length_1 = __webpack_require__(/*! ../utils/number-length */ \"./src/slimming/utils/number-length.ts\");\r\nexports.computeH = (absolute, relative, pathResult, pos) => {\r\n    const rLen = pathResult.length;\r\n    if (rLen > 0 && pathResult[rLen - 1].type.toLowerCase() === 'h') {\r\n        const lastItem = pathResult.pop();\r\n        if (lastItem.type === 'h') {\r\n            return exports.computeH(absolute, plus_1.plus(relative, lastItem.val[0]), pathResult, lastItem.from);\r\n        }\r\n        else {\r\n            return exports.computeH(absolute, minus_1.minus(absolute, lastItem.from[0]), pathResult, lastItem.from);\r\n        }\r\n    }\r\n    else if (relative !== 0) {\r\n        if (ramda_1.lt(number_length_1.numberLength(relative), number_length_1.numberLength(absolute))) {\r\n            pathResult.push({\r\n                type: 'h',\r\n                from: pos.slice(),\r\n                val: [relative]\r\n            });\r\n        }\r\n        else {\r\n            pathResult.push({\r\n                type: 'H',\r\n                from: pos.slice(),\r\n                val: [absolute]\r\n            });\r\n        }\r\n        return [absolute, pos[1]];\r\n    }\r\n    return pos;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/compute-h.ts?");

/***/ }),

/***/ "./src/slimming/path/compute-l.ts":
/*!****************************************!*\
  !*** ./src/slimming/path/compute-l.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst minus_1 = __webpack_require__(/*! ../math/minus */ \"./src/slimming/math/minus.ts\");\r\nconst plus_1 = __webpack_require__(/*! ../math/plus */ \"./src/slimming/math/plus.ts\");\r\nconst number_length_1 = __webpack_require__(/*! ../utils/number-length */ \"./src/slimming/utils/number-length.ts\");\r\nconst compute_h_1 = __webpack_require__(/*! ./compute-h */ \"./src/slimming/path/compute-h.ts\");\r\nconst compute_v_1 = __webpack_require__(/*! ./compute-v */ \"./src/slimming/path/compute-v.ts\");\r\nexports.computeL = (absolute, relative, pathResult, pos) => {\r\n    const rLen = pathResult.length;\r\n    if (relative[0] === 0 || relative[1] === 0) {\r\n        // 需要转为水平或垂直的情况\r\n        if (relative[0] !== 0) {\r\n            return compute_h_1.computeH(absolute[0], relative[0], pathResult, pos);\r\n        }\r\n        else if (relative[1] !== 0) {\r\n            return compute_v_1.computeV(absolute[1], relative[1], pathResult, pos);\r\n        }\r\n        else {\r\n            return pos;\r\n        }\r\n    }\r\n    else if (rLen > 0 && pathResult[rLen - 1].type.toLowerCase() === 'l') {\r\n        // 需要和前面的数据合并的情况\r\n        const lastItem = pathResult[rLen - 1];\r\n        if (lastItem.type === 'l') {\r\n            const rel = lastItem.val.slice().concat(relative);\r\n            const abs = [];\r\n            for (let i = 0, l = rel.length; i < l; i += 2) {\r\n                if (i === 0) {\r\n                    abs[0] = plus_1.plus(lastItem.from[0], rel[0]);\r\n                    abs[1] = plus_1.plus(lastItem.from[1], rel[1]);\r\n                }\r\n                else {\r\n                    abs[i] = plus_1.plus(abs[i - 2], rel[i]);\r\n                    abs[i + 1] = plus_1.plus(abs[i - 1], rel[i + 1]);\r\n                }\r\n            }\r\n            if (ramda_1.lt(number_length_1.numberLength(rel), number_length_1.numberLength(abs))) {\r\n                lastItem.val = rel;\r\n            }\r\n            else {\r\n                lastItem.type = 'L';\r\n                lastItem.val = abs;\r\n            }\r\n        }\r\n        else {\r\n            const abs = lastItem.val.slice().concat(absolute);\r\n            const rel = [];\r\n            for (let i = 0, l = abs.length; i < l; i += 2) {\r\n                if (i === 0) {\r\n                    rel[0] = minus_1.minus(abs[0], lastItem.from[0]);\r\n                    rel[1] = minus_1.minus(abs[1], lastItem.from[1]);\r\n                }\r\n                else {\r\n                    rel[i] = minus_1.minus(abs[i], abs[i - 2]);\r\n                    rel[i + 1] = minus_1.minus(abs[i + 1], abs[i - 1]);\r\n                }\r\n            }\r\n            if (ramda_1.lt(number_length_1.numberLength(rel), number_length_1.numberLength(abs))) {\r\n                lastItem.type = 'l';\r\n                lastItem.val = rel;\r\n            }\r\n            else {\r\n                lastItem.val = abs;\r\n            }\r\n        }\r\n        return absolute.slice();\r\n    }\r\n    else {\r\n        // 普通情况\r\n        if (ramda_1.lt(number_length_1.numberLength(relative), number_length_1.numberLength(absolute))) {\r\n            pathResult.push({\r\n                type: 'l',\r\n                from: pos.slice(),\r\n                val: relative.slice()\r\n            });\r\n        }\r\n        else {\r\n            pathResult.push({\r\n                type: 'L',\r\n                from: pos.slice(),\r\n                val: absolute.slice()\r\n            });\r\n        }\r\n        return absolute.slice();\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/compute-l.ts?");

/***/ }),

/***/ "./src/slimming/path/compute-m.ts":
/*!****************************************!*\
  !*** ./src/slimming/path/compute-m.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst minus_1 = __webpack_require__(/*! ../math/minus */ \"./src/slimming/math/minus.ts\");\r\nconst plus_1 = __webpack_require__(/*! ../math/plus */ \"./src/slimming/math/plus.ts\");\r\nconst number_length_1 = __webpack_require__(/*! ../utils/number-length */ \"./src/slimming/utils/number-length.ts\");\r\nexports.computeM = (absolute, relative, pathResult, pos) => {\r\n    const rLen = pathResult.length;\r\n    if (rLen > 0 && pathResult[rLen - 1].type.toLowerCase() === 'm') {\r\n        const lastItem = pathResult.pop();\r\n        if (lastItem.type === 'm') {\r\n            return exports.computeM(absolute, [plus_1.plus(relative[0], lastItem.val[0]), plus_1.plus(relative[1], lastItem.val[1])], pathResult, lastItem.from);\r\n        }\r\n        else {\r\n            return exports.computeM(absolute, [minus_1.minus(absolute[0], lastItem.from[0]), minus_1.minus(absolute[1], lastItem.from[1])], pathResult, lastItem.from);\r\n        }\r\n    }\r\n    else {\r\n        if (ramda_1.lt(number_length_1.numberLength(relative), number_length_1.numberLength(absolute))) {\r\n            pathResult.push({\r\n                type: 'm',\r\n                from: pos.slice(),\r\n                val: relative.slice()\r\n            });\r\n        }\r\n        else {\r\n            pathResult.push({\r\n                type: 'M',\r\n                from: pos.slice(),\r\n                val: absolute.slice()\r\n            });\r\n        }\r\n        return absolute.slice();\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/compute-m.ts?");

/***/ }),

/***/ "./src/slimming/path/compute-q.ts":
/*!****************************************!*\
  !*** ./src/slimming/path/compute-q.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst number_length_1 = __webpack_require__(/*! ../utils/number-length */ \"./src/slimming/utils/number-length.ts\");\r\nconst compute_t_1 = __webpack_require__(/*! ./compute-t */ \"./src/slimming/path/compute-t.ts\");\r\nconst match_control_1 = __webpack_require__(/*! ./match-control */ \"./src/slimming/path/match-control.ts\");\r\nconst QPOS_X1 = 0;\r\nconst QPOS_Y1 = 1;\r\nconst QPOS_X = 2;\r\nconst QPOS_Y = 3;\r\nconst canTransformT = (pathResult, rLen, x1, y1) => {\r\n    if (rLen > 0) {\r\n        const lastItem = pathResult[rLen - 1];\r\n        const type = lastItem.type;\r\n        if (type === 'Q') {\r\n            return match_control_1.matchControl(lastItem.val, 0, 0, x1, y1);\r\n        }\r\n        else if (type === 'q') {\r\n            return match_control_1.matchControl(lastItem.val, lastItem.from[0], lastItem.from[1], x1, y1);\r\n        }\r\n        else if (type === 'T') {\r\n            return match_control_1.matchControl(lastItem.from.slice(2).concat(lastItem.val), lastItem.from[0], lastItem.from[1], x1, y1);\r\n        }\r\n        else if (type === 't') {\r\n            return match_control_1.matchControl(lastItem.from.slice(2).concat(lastItem.val), lastItem.from[0], lastItem.from[1], x1, y1);\r\n        }\r\n    }\r\n    return false;\r\n};\r\nexports.computeQ = (absolute, relative, pathResult, pos) => {\r\n    const rLen = pathResult.length;\r\n    if (canTransformT(pathResult, rLen, absolute[QPOS_X1], absolute[QPOS_Y1])) {\r\n        return compute_t_1.computeT(absolute.slice(QPOS_X), relative.slice(QPOS_X), pathResult, pos);\r\n    }\r\n    else {\r\n        // 普通情况\r\n        if (ramda_1.lt(number_length_1.numberLength(relative), number_length_1.numberLength(absolute))) {\r\n            pathResult.push({\r\n                type: 'Q',\r\n                from: pos.slice(),\r\n                val: relative.slice()\r\n            });\r\n        }\r\n        else {\r\n            pathResult.push({\r\n                type: 'q',\r\n                from: pos.slice(),\r\n                val: absolute.slice()\r\n            });\r\n        }\r\n        return [absolute[QPOS_X], absolute[QPOS_Y]];\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/compute-q.ts?");

/***/ }),

/***/ "./src/slimming/path/compute-s.ts":
/*!****************************************!*\
  !*** ./src/slimming/path/compute-s.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst number_length_1 = __webpack_require__(/*! ../utils/number-length */ \"./src/slimming/utils/number-length.ts\");\r\nexports.SPOS_X2 = 0;\r\nexports.SPOS_Y2 = 1;\r\nexports.SPOS_X = 2;\r\nexports.SPOS_Y = 3;\r\nexports.computeS = (absolute, relative, pathResult, pos) => {\r\n    if (ramda_1.lt(number_length_1.numberLength(relative), number_length_1.numberLength(absolute))) {\r\n        pathResult.push({\r\n            type: 's',\r\n            from: pos.slice(),\r\n            val: relative.slice()\r\n        });\r\n    }\r\n    else {\r\n        pathResult.push({\r\n            type: 'S',\r\n            from: pos.slice(),\r\n            val: absolute.slice()\r\n        });\r\n    }\r\n    return [absolute[exports.SPOS_X], absolute[exports.SPOS_Y]];\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/compute-s.ts?");

/***/ }),

/***/ "./src/slimming/path/compute-t.ts":
/*!****************************************!*\
  !*** ./src/slimming/path/compute-t.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst plus_1 = __webpack_require__(/*! ../math/plus */ \"./src/slimming/math/plus.ts\");\r\nconst number_length_1 = __webpack_require__(/*! ../utils/number-length */ \"./src/slimming/utils/number-length.ts\");\r\nconst POS2 = 2;\r\nconst POS3 = 3;\r\nexports.computeT = (absolute, relative, pathResult, pos) => {\r\n    const from = pos.slice();\r\n    const lastItem = pathResult[pathResult.length - 1];\r\n    if (lastItem.type === 'T') {\r\n        from.push(lastItem.from[POS2], lastItem.from[POS3]);\r\n    }\r\n    else if (lastItem.type === 't') {\r\n        from.push(plus_1.plus(lastItem.from[POS2], lastItem.from[0]), plus_1.plus(lastItem.from[POS3], lastItem.from[1]));\r\n    }\r\n    else if (lastItem.type === 'Q') {\r\n        from.push(lastItem.val[0], lastItem.val[1]);\r\n    }\r\n    else if (lastItem.type === 'q') {\r\n        from.push(plus_1.plus(lastItem.val[0], lastItem.from[0]), plus_1.plus(lastItem.val[1], lastItem.from[1]));\r\n    }\r\n    if (ramda_1.lt(number_length_1.numberLength(relative), number_length_1.numberLength(absolute))) {\r\n        pathResult.push({\r\n            type: 't',\r\n            from,\r\n            val: relative.slice()\r\n        });\r\n    }\r\n    else {\r\n        pathResult.push({\r\n            type: 'T',\r\n            from,\r\n            val: absolute.slice()\r\n        });\r\n    }\r\n    return absolute.slice();\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/compute-t.ts?");

/***/ }),

/***/ "./src/slimming/path/compute-v.ts":
/*!****************************************!*\
  !*** ./src/slimming/path/compute-v.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst number_length_1 = __webpack_require__(/*! ../utils/number-length */ \"./src/slimming/utils/number-length.ts\");\r\nconst plus_1 = __webpack_require__(/*! ../math/plus */ \"./src/slimming/math/plus.ts\");\r\nconst minus_1 = __webpack_require__(/*! ../math/minus */ \"./src/slimming/math/minus.ts\");\r\nexports.computeV = (absolute, relative, pathResult, pos) => {\r\n    const rLen = pathResult.length;\r\n    if (rLen > 0 && pathResult[rLen - 1].type.toLowerCase() === 'v') {\r\n        const lastItem = pathResult.pop();\r\n        if (lastItem.type === 'v') {\r\n            return exports.computeV(absolute, plus_1.plus(relative, lastItem.val[0]), pathResult, lastItem.from);\r\n        }\r\n        else {\r\n            return exports.computeV(absolute, minus_1.minus(absolute, lastItem.from[1]), pathResult, lastItem.from);\r\n        }\r\n    }\r\n    else if (relative !== 0) {\r\n        if (ramda_1.lt(number_length_1.numberLength(relative), number_length_1.numberLength(absolute))) {\r\n            pathResult.push({\r\n                type: 'v',\r\n                from: pos.slice(),\r\n                val: [relative]\r\n            });\r\n        }\r\n        else {\r\n            pathResult.push({\r\n                type: 'V',\r\n                from: pos.slice(),\r\n                val: [absolute]\r\n            });\r\n        }\r\n        return [pos[0], absolute];\r\n    }\r\n    return pos;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/compute-v.ts?");

/***/ }),

/***/ "./src/slimming/path/compute-z.ts":
/*!****************************************!*\
  !*** ./src/slimming/path/compute-z.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst plus_1 = __webpack_require__(/*! ../math/plus */ \"./src/slimming/math/plus.ts\");\r\nexports.computeZ = (pathResult, pos) => {\r\n    const rLen = pathResult.length;\r\n    if (rLen > 0) {\r\n        const lastItem = pathResult[rLen - 1];\r\n        if (lastItem.type.toLowerCase() !== 'z' && lastItem.type.toLowerCase() !== 'm') {\r\n            let i = rLen - 1;\r\n            let zpos = null;\r\n            while (i--) {\r\n                if (pathResult[i].type === 'm') {\r\n                    zpos = [plus_1.plus(pathResult[i].val[0], pathResult[i].from[0]), plus_1.plus(pathResult[i].val[1], pathResult[i].from[1])];\r\n                    break;\r\n                }\r\n                else if (pathResult[i].type === 'M') {\r\n                    zpos = [pathResult[i].val[0], pathResult[i].val[1]];\r\n                    break;\r\n                }\r\n            }\r\n            if (zpos === null) {\r\n                zpos = [0, 0];\r\n            }\r\n            pathResult.push({\r\n                type: 'z',\r\n                from: pos.slice(),\r\n                val: []\r\n            });\r\n            return zpos;\r\n        }\r\n    }\r\n    return pos;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/compute-z.ts?");

/***/ }),

/***/ "./src/slimming/path/exec.ts":
/*!***********************************!*\
  !*** ./src/slimming/path/exec.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst pathReg = /([mMzZlLhHvVcCsSqQtTaA])(.*?)(?=[mMzZlLhHvVcCsSqQtTaA]|$)/g;\r\nexports.execPath = (str) => {\r\n    const result = [];\r\n    // 重置正则匹配位置\r\n    pathReg.lastIndex = 0;\r\n    let match = pathReg.exec(str);\r\n    while (match !== null) {\r\n        const val = match[2].trim();\r\n        result.push({\r\n            type: match[1],\r\n            val: val ? val.replace(/(\\d)(?=-)/g, '$1 ').split(/[,\\s]+/).map(s => parseFloat(s)) : []\r\n        });\r\n        match = pathReg.exec(str);\r\n    }\r\n    return result;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/exec.ts?");

/***/ }),

/***/ "./src/slimming/path/match-control.ts":
/*!********************************************!*\
  !*** ./src/slimming/path/match-control.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n// 匹配贝塞尔曲线的控制点\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst plus_1 = __webpack_require__(/*! ../math/plus */ \"./src/slimming/math/plus.ts\");\r\nconst symmetry_1 = __webpack_require__(/*! ../math/symmetry */ \"./src/slimming/math/symmetry.ts\");\r\nconst POS_X1 = 0;\r\nconst POS_Y1 = 1;\r\nconst POS_X = 2;\r\nconst POS_Y = 3;\r\nexports.matchControl = (lastPos, extraX, extraY, x1, y1) => plus_1.plus(symmetry_1.symmetry(lastPos[POS_X1], lastPos[POS_X]), extraX) === x1 && plus_1.plus(symmetry_1.symmetry(lastPos[POS_Y1], lastPos[POS_Y]), extraY) === y1;\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/path/match-control.ts?");

/***/ }),

/***/ "./src/slimming/rules/collapse-g.ts":
/*!******************************************!*\
  !*** ./src/slimming/rules/collapse-g.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst definitions_1 = __webpack_require__(/*! ../const/definitions */ \"./src/slimming/const/definitions.ts\");\r\nconst exec_1 = __webpack_require__(/*! ../style/exec */ \"./src/slimming/style/exec.ts\");\r\nconst stringify_1 = __webpack_require__(/*! ../style/stringify */ \"./src/slimming/style/stringify.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst collapseAttributes = (node1, node2) => {\r\n    const attrObj = {};\r\n    const attributes1 = node1.attributes;\r\n    const attributes2 = node2.attributes;\r\n    attributes1.forEach(attr => {\r\n        attrObj[attr.fullname] = attr;\r\n    });\r\n    attributes2.forEach(attr => {\r\n        if (attrObj[attr.fullname]) {\r\n            if (definitions_1.transformAttributes.indexOf(attr.fullname) !== -1) {\r\n                attrObj[attr.fullname].value = `${attr.value} ${attrObj[attr.fullname].value}`;\r\n            }\r\n            else if (attr.fullname === 'style') {\r\n                const style1 = exec_1.execStyle(attrObj[attr.fullname].value);\r\n                const style2 = exec_1.execStyle(attr.value);\r\n                // 此处只进行属性合并，不做排重，排重在 shorten-style-attr 里做\r\n                attrObj[attr.fullname].value = stringify_1.stringifyStyle(style2.concat(style1));\r\n            }\r\n        }\r\n        else {\r\n            node1.setAttribute(attr.name, attr.value, attr.namespace);\r\n            attrObj[attr.fullname] = attr;\r\n        }\r\n    });\r\n};\r\n// 包含某些特定属性，不允许进行合并\r\nconst cantCollapse = (node) => node.attributes.filter(attr => definitions_1.cantCollapseAttributes.indexOf(attr.fullname) !== -1).length;\r\nconst doCollapse = (dom) => {\r\n    traversal_node_1.traversalNode(ramda_1.propEq('nodeName', 'g'), (node) => {\r\n        const childNodes = node.childNodes;\r\n        const childTags = childNodes.filter(is_tag_1.isTag);\r\n        if (!childTags.length) {\r\n            rm_node_1.rmNode(node);\r\n        }\r\n        else if (!cantCollapse(node)) {\r\n            if (childTags.length === 1) { // 只有一个子节点\r\n                const childNode = childTags[0];\r\n                collapseAttributes(childNode, node);\r\n                node.parentNode.replaceChild(node, ...childNodes);\r\n            }\r\n            else if (!node.attributes.length) { // 没有属性\r\n                node.parentNode.replaceChild(node, ...childNodes);\r\n            }\r\n        }\r\n    }, dom);\r\n};\r\nexports.collapseG = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        doCollapse(dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/collapse-g.ts?");

/***/ }),

/***/ "./src/slimming/rules/collapse-textwrap.ts":
/*!*************************************************!*\
  !*** ./src/slimming/rules/collapse-textwrap.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst regular_tag_1 = __webpack_require__(/*! ../const/regular-tag */ \"./src/slimming/const/regular-tag.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.collapseTextwrap = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, (node) => {\r\n            const tagDefine = regular_tag_1.regularTag[node.nodeName];\r\n            // 规则执行的前提：文本容器嵌套关系\r\n            if (tagDefine.containTextNode && regular_tag_1.regularTag[node.parentNode.nodeName].containTextNode) {\r\n                const attributes = node.attributes;\r\n                for (let i = attributes.length; i--;) {\r\n                    // 只要有一个非空属性，就不执行塌陷\r\n                    if (attributes[i].value.trim()) {\r\n                        return;\r\n                    }\r\n                }\r\n                node.parentNode.replaceChild(node, ...node.childNodes);\r\n            }\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/collapse-textwrap.ts?");

/***/ }),

/***/ "./src/slimming/rules/combine-path.ts":
/*!********************************************!*\
  !*** ./src/slimming/rules/combine-path.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// 合并属性和样式完全相同的路径\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst exec_1 = __webpack_require__(/*! ../style/exec */ \"./src/slimming/style/exec.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.combinePath = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, (node) => {\r\n            const pathChildren = {};\r\n            let tagIndex = 0;\r\n            for (let i = 0; i < node.childNodes.length; i++) {\r\n                const childNode = node.childNodes[i];\r\n                if (childNode.nodeName === 'path') {\r\n                    const attrObj = {};\r\n                    let styles = [];\r\n                    let d;\r\n                    childNode.attributes.forEach(attr => {\r\n                        if (attr.fullname === 'style') {\r\n                            styles = exec_1.execStyle(attr.value);\r\n                        }\r\n                        else if (attr.fullname === 'd') {\r\n                            d = attr;\r\n                        }\r\n                        else {\r\n                            attrObj[attr.fullname] = attr.value;\r\n                        }\r\n                    });\r\n                    styles.forEach(attr => {\r\n                        attrObj[attr.name] = attr.value;\r\n                    });\r\n                    if (d) {\r\n                        const key = `&${Object.keys(attrObj).map(k => `${k}=${attrObj[k]}`).join('&')}&&style&&${styles.map(attr => `${attr.name}=${attr.value}`).join('&')}&`;\r\n                        if (ramda_1.has(key, pathChildren)) {\r\n                            // TODO，此处用了简单粗暴的处理逻辑，没有 fill 或 stroke ，并且相邻的 path 节点才可以合并\r\n                            // 更妥善的做法是：1、相邻；2、没有fill或者stroke；3、路径没有相交或包含\r\n                            if (pathChildren[key].index === tagIndex - 1 && (key.indexOf('&fill=none&') !== -1 || key.indexOf('&stroke=none&') !== -1 || key.indexOf('&stroke=') === -1)) {\r\n                                pathChildren[key].attr.value += d.value;\r\n                                rm_node_1.rmNode(childNode);\r\n                                i--;\r\n                            }\r\n                            else {\r\n                                pathChildren[key] = {\r\n                                    attr: d,\r\n                                    index: tagIndex\r\n                                };\r\n                            }\r\n                        }\r\n                        else {\r\n                            pathChildren[key] = {\r\n                                attr: d,\r\n                                index: tagIndex\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n                if (is_tag_1.isTag(childNode)) {\r\n                    tagIndex++;\r\n                }\r\n            }\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/combine-path.ts?");

/***/ }),

/***/ "./src/slimming/rules/combine-transform.ts":
/*!*************************************************!*\
  !*** ./src/slimming/rules/combine-transform.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst definitions_1 = __webpack_require__(/*! ../const/definitions */ \"./src/slimming/const/definitions.ts\");\r\nconst combine_1 = __webpack_require__(/*! ../matrix/combine */ \"./src/slimming/matrix/combine.ts\");\r\nconst shorten_1 = __webpack_require__(/*! ../matrix/shorten */ \"./src/slimming/matrix/shorten.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst DEFAULT_DIGIT1 = 3;\r\nconst DEFAULT_DIGIT2 = 1;\r\nexports.combineTransform = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        let digit1 = rule.length > 1 ? rule[1] : DEFAULT_DIGIT1;\r\n        let digit2 = rule.length > 2 ? rule[2] : DEFAULT_DIGIT2;\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, (node) => {\r\n            const attributes = node.attributes;\r\n            for (let i = attributes.length; i--;) {\r\n                const attr = attributes[i];\r\n                if (definitions_1.transformAttributes.indexOf(attr.fullname) !== -1) {\r\n                    const transform = attr.value.trim();\r\n                    if (transform) {\r\n                        const matrix = shorten_1.shorten(combine_1.combineMatrix(transform, digit1, digit2));\r\n                        if (matrix === 'matrix(1,0,0,1,0,0)') {\r\n                            node.removeAttribute(attr.fullname);\r\n                        }\r\n                        else if (matrix.length < transform.length) {\r\n                            attr.value = matrix;\r\n                        }\r\n                        else {\r\n                            attr.value = shorten_1.shorten(transform);\r\n                        }\r\n                    }\r\n                    else {\r\n                        node.removeAttribute(attr.fullname);\r\n                    }\r\n                }\r\n            }\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/combine-transform.ts?");

/***/ }),

/***/ "./src/slimming/rules/compute-path.ts":
/*!********************************************!*\
  !*** ./src/slimming/rules/compute-path.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst douglas_peucker_1 = __webpack_require__(/*! ../algorithm/douglas-peucker */ \"./src/slimming/algorithm/douglas-peucker.ts\");\r\nconst minus_1 = __webpack_require__(/*! ../math/minus */ \"./src/slimming/math/minus.ts\");\r\nconst plus_1 = __webpack_require__(/*! ../math/plus */ \"./src/slimming/math/plus.ts\");\r\nconst compute_a_1 = __webpack_require__(/*! ../path/compute-a */ \"./src/slimming/path/compute-a.ts\");\r\nconst compute_c_1 = __webpack_require__(/*! ../path/compute-c */ \"./src/slimming/path/compute-c.ts\");\r\nconst compute_h_1 = __webpack_require__(/*! ../path/compute-h */ \"./src/slimming/path/compute-h.ts\");\r\nconst compute_l_1 = __webpack_require__(/*! ../path/compute-l */ \"./src/slimming/path/compute-l.ts\");\r\nconst compute_m_1 = __webpack_require__(/*! ../path/compute-m */ \"./src/slimming/path/compute-m.ts\");\r\nconst compute_q_1 = __webpack_require__(/*! ../path/compute-q */ \"./src/slimming/path/compute-q.ts\");\r\nconst compute_s_1 = __webpack_require__(/*! ../path/compute-s */ \"./src/slimming/path/compute-s.ts\");\r\nconst compute_t_1 = __webpack_require__(/*! ../path/compute-t */ \"./src/slimming/path/compute-t.ts\");\r\nconst compute_v_1 = __webpack_require__(/*! ../path/compute-v */ \"./src/slimming/path/compute-v.ts\");\r\nconst compute_z_1 = __webpack_require__(/*! ../path/compute-z */ \"./src/slimming/path/compute-z.ts\");\r\nconst exec_1 = __webpack_require__(/*! ../path/exec */ \"./src/slimming/path/exec.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst doCompute = (pathArr) => {\r\n    const pathResult = [];\r\n    let pos = [0, 0];\r\n    pathArr.forEach(pathItem => {\r\n        switch (pathItem.type) {\r\n            // 平移 - 绝对\r\n            case 'M':\r\n                pos = compute_m_1.computeM(pathItem.val, [minus_1.minus(pathItem.val[0], pos[0]), minus_1.minus(pathItem.val[1], pos[1])], pathResult, pos);\r\n                break;\r\n            // 平移 - 相对\r\n            case 'm':\r\n                pos = compute_m_1.computeM([plus_1.plus(pathItem.val[0], pos[0]), plus_1.plus(pathItem.val[1], pos[1])], pathItem.val, pathResult, pos);\r\n                break;\r\n            case 'Z':\r\n            case 'z':\r\n                pos = compute_z_1.computeZ(pathResult, pos);\r\n                break;\r\n            // 水平直线 - 绝对\r\n            case 'H':\r\n                pos = compute_h_1.computeH(pathItem.val[0], minus_1.minus(pathItem.val[0], pos[0]), pathResult, pos);\r\n                break;\r\n            // 水平直线 - 相对\r\n            case 'h':\r\n                pos = compute_h_1.computeH(plus_1.plus(pathItem.val[0], pos[0]), pathItem.val[0], pathResult, pos);\r\n                break;\r\n            // 垂直直线 - 绝对\r\n            case 'V':\r\n                pos = compute_v_1.computeV(pathItem.val[0], minus_1.minus(pathItem.val[0], pos[1]), pathResult, pos);\r\n                break;\r\n            // 垂直直线 - 相对\r\n            case 'v':\r\n                pos = compute_v_1.computeV(plus_1.plus(pathItem.val[0], pos[1]), pathItem.val[0], pathResult, pos);\r\n                break;\r\n            // 直线 - 绝对\r\n            case 'L':\r\n                for (let i = 0, l = pathItem.val.length; i < l; i += 2) {\r\n                    pos = compute_l_1.computeL([pathItem.val[i], pathItem.val[i + 1]], [minus_1.minus(pathItem.val[i], pos[0]), minus_1.minus(pathItem.val[i + 1], pos[1])], pathResult, pos);\r\n                }\r\n                break;\r\n            // 直线 - 相对\r\n            case 'l':\r\n                for (let i = 0, l = pathItem.val.length; i < l; i += 2) {\r\n                    pos = compute_l_1.computeL([plus_1.plus(pathItem.val[i], pos[0]), plus_1.plus(pathItem.val[i + 1], pos[1])], [pathItem.val[i], pathItem.val[i + 1]], pathResult, pos);\r\n                }\r\n                break;\r\n            // 三次贝塞尔曲线 - 绝对\r\n            case 'C':\r\n                pos = compute_c_1.computeC(pathItem.val, pathItem.val.map((s, i) => minus_1.minus(s, pos[i % 2])), pathResult, pos);\r\n                break;\r\n            // 三次贝塞尔曲线 - 相对\r\n            case 'c':\r\n                pos = compute_c_1.computeC(pathItem.val.map((s, i) => plus_1.plus(s, pos[i % 2])), pathItem.val, pathResult, pos);\r\n                break;\r\n            // 三次连续贝塞尔曲线 - 绝对\r\n            case 'S':\r\n                pos = compute_s_1.computeS(pathItem.val, pathItem.val.map((s, i) => minus_1.minus(s, pos[i % 2])), pathResult, pos);\r\n                break;\r\n            // 三次连续贝塞尔曲线 - 相对\r\n            case 's':\r\n                pos = compute_s_1.computeS(pathItem.val.map((s, i) => plus_1.plus(s, pos[i % 2])), pathItem.val, pathResult, pos);\r\n                break;\r\n            // 二次贝塞尔曲线 - 绝对\r\n            case 'Q':\r\n                pos = compute_q_1.computeQ(pathItem.val, pathItem.val.map((s, i) => minus_1.minus(s, pos[i % 2])), pathResult, pos);\r\n                break;\r\n            // 二次贝塞尔曲线 - 相对\r\n            case 'q':\r\n                pos = compute_q_1.computeQ(pathItem.val.map((s, i) => plus_1.plus(s, pos[i % 2])), pathItem.val, pathResult, pos);\r\n                break;\r\n            // 二次连续贝塞尔曲线 - 绝对\r\n            case 'T':\r\n                pos = compute_t_1.computeT(pathItem.val, pathItem.val.map((s, i) => minus_1.minus(s, pos[i % 2])), pathResult, pos);\r\n                break;\r\n            // 二次连续贝塞尔曲线 - 相对\r\n            case 't':\r\n                pos = compute_t_1.computeT(pathItem.val.map((s, i) => plus_1.plus(s, pos[i % 2])), pathItem.val, pathResult, pos);\r\n                break;\r\n            // 圆弧 - 绝对\r\n            case 'A':\r\n                pos = compute_a_1.computeA(pathItem.val, pathItem.val.map((s, i) => i < compute_a_1.APOS_X ? s : minus_1.minus(s, pos[1 - (i % 2)])), pathResult, pos);\r\n                break;\r\n            // 圆弧 - 相对\r\n            case 'a':\r\n                pos = compute_a_1.computeA(pathItem.val.map((s, i) => i < compute_a_1.APOS_X ? s : plus_1.plus(s, pos[1 - (i % 2)])), pathItem.val, pathResult, pos);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    });\r\n    return pathResult;\r\n};\r\nconst availTypes = 'LlHhVv';\r\nconst DPItemNormalize = (pathItem) => {\r\n    switch (pathItem.type) {\r\n        case 'l':\r\n            pathItem.val[0] = plus_1.plus(pathItem.val[0], pathItem.from[0]);\r\n            pathItem.val[1] = plus_1.plus(pathItem.val[1], pathItem.from[1]);\r\n            for (let i = 2, l = pathItem.val.length; i < l; i += 2) {\r\n                pathItem.val[i] = plus_1.plus(pathItem.val[i], pathItem.val[i - 2]);\r\n                pathItem.val[i + 1] = plus_1.plus(pathItem.val[i + 1], pathItem.val[i - 1]);\r\n            }\r\n            break;\r\n        case 'H':\r\n            pathItem.val.push(pathItem.from[1]);\r\n            break;\r\n        case 'h':\r\n            pathItem.val[0] = plus_1.plus(pathItem.val[0], pathItem.from[0]);\r\n            pathItem.val.push(pathItem.from[1]);\r\n            break;\r\n        case 'V':\r\n            pathItem.val.unshift(pathItem.from[0]);\r\n            break;\r\n        case 'v':\r\n            pathItem.val.unshift(pathItem.from[0]);\r\n            pathItem.val[1] = plus_1.plus(pathItem.val[1], pathItem.from[1]);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    pathItem.type = 'L';\r\n    return pathItem;\r\n};\r\nconst DPItemMerge = (lastItem, pathItem) => {\r\n    lastItem.val = lastItem.val.concat(DPItemNormalize(pathItem).val);\r\n};\r\nconst DPInit = (threshold, pathArr) => {\r\n    const pathResult = [];\r\n    let len = 0;\r\n    for (let i = 0, l = pathArr.length; i < l; i++) {\r\n        const pathItem = pathArr[i];\r\n        if (availTypes.indexOf(pathItem.type) !== -1) {\r\n            const lastItem = pathResult[len - 1];\r\n            if (lastItem.type === 'L') {\r\n                DPItemMerge(lastItem, pathItem);\r\n            }\r\n            else {\r\n                pathResult.push(DPItemNormalize(pathItem));\r\n                len++;\r\n            }\r\n        }\r\n        else {\r\n            if (len > 0 && pathResult[len - 1].type === 'L') {\r\n                const lastItem = pathResult[len - 1];\r\n                lastItem.val = douglas_peucker_1.douglasPeucker(threshold, lastItem.from.concat(lastItem.val)).slice(2);\r\n            }\r\n            pathResult.push(pathItem);\r\n            len++;\r\n        }\r\n    }\r\n    if (pathResult[len - 1].type === 'L') {\r\n        const lastItem = pathResult[len - 1];\r\n        lastItem.val = douglas_peucker_1.douglasPeucker(threshold, lastItem.from.concat(lastItem.val)).slice(2);\r\n    }\r\n    return pathResult;\r\n};\r\nexports.computePath = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        traversal_node_1.traversalNode(ramda_1.propEq('nodeName', 'path'), (node) => {\r\n            const attrD = node.getAttribute('d');\r\n            if (attrD) {\r\n                const pathArr = exec_1.execPath(attrD);\r\n                let pathResult = doCompute(pathArr);\r\n                // 如果存在道格拉斯 - 普克规则，则执行道格拉斯普克算法，之后需要再次更新\r\n                if (rule[1] && rule[2]) {\r\n                    pathResult = doCompute(DPInit(rule[2], pathResult));\r\n                }\r\n                let d = '';\r\n                pathResult.forEach(pathItem => {\r\n                    d += `${pathItem.type}${pathItem.val.join(',')}`;\r\n                });\r\n                // 最后移除掉负号前面的空格\r\n                node.setAttribute('d', d.replace(/,-/g, '-'));\r\n            }\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/compute-path.ts?");

/***/ }),

/***/ "./src/slimming/rules/douglas-peucker.ts":
/*!***********************************************!*\
  !*** ./src/slimming/rules/douglas-peucker.ts ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst douglas_peucker_1 = __webpack_require__(/*! ../algorithm/douglas-peucker */ \"./src/slimming/algorithm/douglas-peucker.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.douglasPeucker = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0] && rule[1]) {\r\n        traversal_node_1.traversalNode(ramda_1.anyPass([ramda_1.propEq('nodeName', 'polygon'), ramda_1.propEq('nodeName', 'polyline')]), (node) => {\r\n            const pointsVal = node.getAttribute('points');\r\n            if (pointsVal) {\r\n                const paths = pointsVal.trim().split(/[,\\s]+/).map(s => parseFloat(s));\r\n                node.setAttribute('points', douglas_peucker_1.douglasPeucker(rule[1], paths).join(','));\r\n            }\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/douglas-peucker.ts?");

/***/ }),

/***/ "./src/slimming/rules/index.ts":
/*!*************************************!*\
  !*** ./src/slimming/rules/index.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// default rules\r\nconst combine_script_1 = __webpack_require__(/*! ../default-rules/combine-script */ \"./src/slimming/default-rules/combine-script.ts\");\r\nconst combine_style_1 = __webpack_require__(/*! ../default-rules/combine-style */ \"./src/slimming/default-rules/combine-style.ts\");\r\nconst combine_textnode_1 = __webpack_require__(/*! ../default-rules/combine-textnode */ \"./src/slimming/default-rules/combine-textnode.ts\");\r\nconst rm_useless_1 = __webpack_require__(/*! ../default-rules/rm-useless */ \"./src/slimming/default-rules/rm-useless.ts\");\r\n// rules\r\nconst collapse_g_1 = __webpack_require__(/*! ./collapse-g */ \"./src/slimming/rules/collapse-g.ts\");\r\nconst collapse_textwrap_1 = __webpack_require__(/*! ./collapse-textwrap */ \"./src/slimming/rules/collapse-textwrap.ts\");\r\nconst combine_path_1 = __webpack_require__(/*! ./combine-path */ \"./src/slimming/rules/combine-path.ts\");\r\nconst combine_transform_1 = __webpack_require__(/*! ./combine-transform */ \"./src/slimming/rules/combine-transform.ts\");\r\nconst compute_path_1 = __webpack_require__(/*! ./compute-path */ \"./src/slimming/rules/compute-path.ts\");\r\nconst douglas_peucker_1 = __webpack_require__(/*! ./douglas-peucker */ \"./src/slimming/rules/douglas-peucker.ts\");\r\nconst rm_attribute_1 = __webpack_require__(/*! ./rm-attribute */ \"./src/slimming/rules/rm-attribute.ts\");\r\nconst rm_comments_1 = __webpack_require__(/*! ./rm-comments */ \"./src/slimming/rules/rm-comments.ts\");\r\nconst rm_doctype_1 = __webpack_require__(/*! ./rm-doctype */ \"./src/slimming/rules/rm-doctype.ts\");\r\nconst rm_hidden_1 = __webpack_require__(/*! ./rm-hidden */ \"./src/slimming/rules/rm-hidden.ts\");\r\nconst rm_irregular_nesting_1 = __webpack_require__(/*! ./rm-irregular-nesting */ \"./src/slimming/rules/rm-irregular-nesting.ts\");\r\nconst rm_irregular_tag_1 = __webpack_require__(/*! ./rm-irregular-tag */ \"./src/slimming/rules/rm-irregular-tag.ts\");\r\nconst rm_px_1 = __webpack_require__(/*! ./rm-px */ \"./src/slimming/rules/rm-px.ts\");\r\nconst rm_unnecessary_1 = __webpack_require__(/*! ./rm-unnecessary */ \"./src/slimming/rules/rm-unnecessary.ts\");\r\nconst rm_version_1 = __webpack_require__(/*! ./rm-version */ \"./src/slimming/rules/rm-version.ts\");\r\nconst rm_viewbox_1 = __webpack_require__(/*! ./rm-viewbox */ \"./src/slimming/rules/rm-viewbox.ts\");\r\nconst rm_xml_decl_1 = __webpack_require__(/*! ./rm-xml-decl */ \"./src/slimming/rules/rm-xml-decl.ts\");\r\nconst rm_xmlns_1 = __webpack_require__(/*! ./rm-xmlns */ \"./src/slimming/rules/rm-xmlns.ts\");\r\nconst shape_to_path_1 = __webpack_require__(/*! ./shape-to-path */ \"./src/slimming/rules/shape-to-path.ts\");\r\nconst shorten_class_1 = __webpack_require__(/*! ./shorten-class */ \"./src/slimming/rules/shorten-class.ts\");\r\nconst shorten_color_1 = __webpack_require__(/*! ./shorten-color */ \"./src/slimming/rules/shorten-color.ts\");\r\nconst shorten_decimal_digits_1 = __webpack_require__(/*! ./shorten-decimal-digits */ \"./src/slimming/rules/shorten-decimal-digits.ts\");\r\nconst shorten_defs_1 = __webpack_require__(/*! ./shorten-defs */ \"./src/slimming/rules/shorten-defs.ts\");\r\nconst shorten_id_1 = __webpack_require__(/*! ./shorten-id */ \"./src/slimming/rules/shorten-id.ts\");\r\nconst shorten_style_attr_1 = __webpack_require__(/*! ./shorten-style-attr */ \"./src/slimming/rules/shorten-style-attr.ts\");\r\nconst shorten_style_tag_1 = __webpack_require__(/*! ./shorten-style-tag */ \"./src/slimming/rules/shorten-style-tag.ts\");\r\n// [isDefaultRule: boolean, ruleHandler: Function, configKey?: string]\r\nexports.rules = [\r\n    [1, rm_useless_1.rmUseless],\r\n    [1, combine_style_1.combineStyle],\r\n    [1, combine_script_1.combineScript],\r\n    [0, rm_xml_decl_1.rmXMLDecl, 'rm-xml-decl'],\r\n    [0, rm_version_1.rmVersion, 'rm-version'],\r\n    [0, rm_doctype_1.rmDocType, 'rm-doctype'],\r\n    [0, rm_comments_1.rmComments, 'rm-comments'],\r\n    [0, rm_irregular_tag_1.rmIrregularTag, 'rm-irregular-tag'],\r\n    [0, rm_irregular_nesting_1.rmIrregularNesting, 'rm-irregular-nesting'],\r\n    [0, rm_unnecessary_1.rmUnnecessary, 'rm-unnecessary'],\r\n    [0, rm_viewbox_1.rmViewBox, 'rm-viewbox'],\r\n    [0, rm_attribute_1.rmAttribute, 'rm-attribute'],\r\n    [0, shorten_id_1.shortenID, 'shorten-id'],\r\n    [0, shorten_class_1.shortenClass, 'shorten-class'],\r\n    [0, shorten_defs_1.shortenDefs, 'shorten-defs'],\r\n    [0, collapse_g_1.collapseG, 'collapse-g'],\r\n    [0, rm_hidden_1.rmHidden, 'rm-hidden'],\r\n    [0, rm_px_1.rmPx, 'rm-px'],\r\n    [0, shorten_decimal_digits_1.shortenDecimalDigits, 'shorten-decimal-digits'],\r\n    [0, shorten_color_1.shortenColor, 'shorten-color'],\r\n    [0, shorten_style_attr_1.shortenStyleAttr, 'shorten-style-attr'],\r\n    [0, shorten_style_tag_1.shortenStyleTag, 'shorten-style-tag'],\r\n    [0, douglas_peucker_1.douglasPeucker, 'douglas-peucker'],\r\n    [0, shape_to_path_1.shapeToPath, 'shape-to-path'],\r\n    [0, combine_path_1.combinePath, 'combine-path'],\r\n    [0, compute_path_1.computePath, 'compute-path'],\r\n    [0, combine_transform_1.combineTransform, 'combine-transform'],\r\n    [0, collapse_textwrap_1.collapseTextwrap, 'collapse-textwrap'],\r\n    [1, combine_textnode_1.combineTextNode],\r\n    [0, rm_xmlns_1.rmXMLNS, 'rm-xmlns'],\r\n];\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/index.ts?");

/***/ }),

/***/ "./src/slimming/rules/rm-attribute.ts":
/*!********************************************!*\
  !*** ./src/slimming/rules/rm-attribute.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst definitions_1 = __webpack_require__(/*! ../const/definitions */ \"./src/slimming/const/definitions.ts\");\r\nconst regular_attr_1 = __webpack_require__(/*! ../const/regular-attr */ \"./src/slimming/const/regular-attr.ts\");\r\nconst regular_tag_1 = __webpack_require__(/*! ../const/regular-tag */ \"./src/slimming/const/regular-tag.ts\");\r\nconst legal_value_1 = __webpack_require__(/*! ../validate/legal-value */ \"./src/slimming/validate/legal-value.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.rmAttribute = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, (node) => {\r\n            const tagDefine = regular_tag_1.regularTag[node.nodeName];\r\n            // 先取出来 attributeName 属性\r\n            const attributeName = node.getAttribute('attributeName');\r\n            const attributes = node.attributes;\r\n            for (let i = attributes.length; i--;) {\r\n                const attr = attributes[i];\r\n                const attrDefine = regular_attr_1.regularAttr[attr.fullname];\r\n                if (attrDefine.isUndef) { // 非标准属性\r\n                    let isUndef = true;\r\n                    if ((rule[2] && definitions_1.eventAttributes.indexOf(attr.fullname) !== -1) // 事件属性是否保留\r\n                        ||\r\n                            (rule[3] && definitions_1.ariaAttributes.indexOf(attr.fullname) !== -1)) // aria 属性是否保留\r\n                     {\r\n                        isUndef = false;\r\n                    }\r\n                    if (isUndef) {\r\n                        node.removeAttribute(attr.fullname);\r\n                        continue;\r\n                    }\r\n                }\r\n                if (!attr.value.trim() // 空属性\r\n                    ||\r\n                        (!attrDefine.couldBeStyle && attr.fullname.indexOf('xmlns') === -1 && tagDefine.ownAttributes.indexOf(attr.fullname) === -1) // 属性和元素不匹配\r\n                    ||\r\n                        !legal_value_1.legalValue(attrDefine, attr) // 不合法的值\r\n                ) {\r\n                    node.removeAttribute(attr.fullname);\r\n                    continue;\r\n                }\r\n                // 不能实现动画的属性被动画属性引用)\r\n                if (definitions_1.animationAttributes.indexOf(attr.fullname) !== -1 && (!attributeName || !regular_attr_1.regularAttr[attributeName].animatable)) {\r\n                    node.removeAttribute(attr.fullname);\r\n                    // 同时移除 attributeName 属性\r\n                    node.removeAttribute('attributeName');\r\n                }\r\n            }\r\n        }, dom);\r\n        // TODO rule[1] 深度分析，移除与继承链相同的属性\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/rm-attribute.ts?");

/***/ }),

/***/ "./src/slimming/rules/rm-comments.ts":
/*!*******************************************!*\
  !*** ./src/slimming/rules/rm-comments.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst index_1 = __webpack_require__(/*! ../../node/index */ \"./src/node/index.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.rmComments = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        traversal_node_1.traversalNode(ramda_1.propEq('nodeType', index_1.NodeType.Comments), rm_node_1.rmNode, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/rm-comments.ts?");

/***/ }),

/***/ "./src/slimming/rules/rm-doctype.ts":
/*!******************************************!*\
  !*** ./src/slimming/rules/rm-doctype.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst index_1 = __webpack_require__(/*! ../../node/index */ \"./src/node/index.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.rmDocType = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        traversal_node_1.traversalNode(ramda_1.propEq('nodeType', index_1.NodeType.DocType), rm_node_1.rmNode, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/rm-doctype.ts?");

/***/ }),

/***/ "./src/slimming/rules/rm-hidden.ts":
/*!*****************************************!*\
  !*** ./src/slimming/rules/rm-hidden.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst definitions_1 = __webpack_require__(/*! ../const/definitions */ \"./src/slimming/const/definitions.ts\");\r\nconst regular_tag_1 = __webpack_require__(/*! ../const/regular-tag */ \"./src/slimming/const/regular-tag.ts\");\r\nconst exec_1 = __webpack_require__(/*! ../style/exec */ \"./src/slimming/style/exec.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.rmHidden = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, (node) => {\r\n            // 未包含子节点的文本容器视为隐藏节点\r\n            if (!node.childNodes.length && regular_tag_1.regularTag[node.nodeName].containTextNode) {\r\n                rm_node_1.rmNode(node);\r\n                return;\r\n            }\r\n            const attrObj = {};\r\n            let styleObj;\r\n            node.attributes.forEach(attr => {\r\n                if (attr.fullname === 'style') {\r\n                    styleObj = exec_1.execStyle(attr.value);\r\n                }\r\n                else {\r\n                    attrObj[attr.fullname] = attr.value;\r\n                }\r\n            });\r\n            // style 覆盖 attr\r\n            if (styleObj) {\r\n                // 考虑到可能未排重\r\n                styleObj.forEach(s => {\r\n                    attrObj[s.name] = s.value;\r\n                });\r\n            }\r\n            if (attrObj.display === 'none') {\r\n                rm_node_1.rmNode(node);\r\n                return;\r\n            }\r\n            const noFill = attrObj.fill === 'none';\r\n            const noStroke = attrObj.stroke === 'none';\r\n            if (noFill && noStroke) {\r\n                if (definitions_1.shapeElements.indexOf(node.nodeName) !== -1) {\r\n                    rm_node_1.rmNode(node);\r\n                    return;\r\n                }\r\n            }\r\n            switch (node.nodeName) {\r\n                // 路径必须有 d 属性\r\n                case 'path':\r\n                    if (!attrObj.d) {\r\n                        rm_node_1.rmNode(node);\r\n                    }\r\n                    break;\r\n                // 矩形的宽高必须均大于 0\r\n                case 'rect':\r\n                    if (isNaN(parseFloat(attrObj.width)) || isNaN(parseFloat(attrObj.height)) || parseFloat(attrObj.width) <= 0 || parseFloat(attrObj.height) <= 0) {\r\n                        rm_node_1.rmNode(node);\r\n                    }\r\n                    break;\r\n                // 圆和椭圆的半径必须大于 0\r\n                case 'circle':\r\n                    if (isNaN(parseFloat(attrObj.r)) || parseFloat(attrObj.r) <= 0) {\r\n                        rm_node_1.rmNode(node);\r\n                    }\r\n                    break;\r\n                case 'ellipse':\r\n                    if (isNaN(parseFloat(attrObj.rx)) || isNaN(parseFloat(attrObj.ry)) || parseFloat(attrObj.rx) <= 0 || parseFloat(attrObj.ry) <= 0) {\r\n                        rm_node_1.rmNode(node);\r\n                    }\r\n                    break;\r\n                // 线段长度不能为 0\r\n                case 'line':\r\n                    const xyObj = {\r\n                        x1: '0',\r\n                        y1: '0',\r\n                        x2: '0',\r\n                        y2: '0',\r\n                    };\r\n                    Object.assign(xyObj, attrObj);\r\n                    if (xyObj.x1 === xyObj.x2 && xyObj.y1 === xyObj.y2) {\r\n                        rm_node_1.rmNode(node);\r\n                    }\r\n                    break;\r\n                // polyline 和 polygon 必须有 points 属性\r\n                case 'polyline':\r\n                    if (!attrObj.points) {\r\n                        rm_node_1.rmNode(node);\r\n                    }\r\n                    break;\r\n                case 'polygon':\r\n                    if (!attrObj.points) {\r\n                        rm_node_1.rmNode(node);\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/rm-hidden.ts?");

/***/ }),

/***/ "./src/slimming/rules/rm-irregular-nesting.ts":
/*!****************************************************!*\
  !*** ./src/slimming/rules/rm-irregular-nesting.ts ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst regular_tag_1 = __webpack_require__(/*! ../const/regular-tag */ \"./src/slimming/const/regular-tag.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.rmIrregularNesting = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, (node) => {\r\n            // 在配置的忽略列表中\r\n            if (Array.isArray(rule[1]) && rule[1].indexOf(node.nodeName) !== -1) {\r\n                return;\r\n            }\r\n            let legalRule = regular_tag_1.regularTag[node.nodeName].legalChildElements;\r\n            if (legalRule) {\r\n                // any 表示可以任意嵌套\r\n                if (legalRule.any) {\r\n                    return;\r\n                }\r\n                // noself 表示不允许嵌套自身\r\n                let noself = legalRule.noself;\r\n                // transparent 表示参照最近的非 switch 上级元素的规则\r\n                if (legalRule.transparent) {\r\n                    let parent = node.parentNode;\r\n                    while (parent.nodeName === 'switch') {\r\n                        parent = parent.parentNode;\r\n                    }\r\n                    legalRule = regular_tag_1.regularTag[parent.nodeName].legalChildElements;\r\n                    if (!noself && legalRule.any) {\r\n                        return;\r\n                    }\r\n                }\r\n                const childNodes = node.childNodes;\r\n                for (let i = childNodes.length; i--;) {\r\n                    const childNode = childNodes[i];\r\n                    // 只针对 tag 类的子节点作处理\r\n                    if (!is_tag_1.isTag(childNode)) {\r\n                        continue;\r\n                    }\r\n                    if (noself && childNode.nodeName === node.nodeName) { // 不允许嵌套自身\r\n                        rm_node_1.rmNode(childNode);\r\n                    }\r\n                    else if (legalRule.any) { // transparent 和 noself 并存的情况（其实只有 a）\r\n                        continue;\r\n                    }\r\n                    else if (legalRule.childElements.indexOf(childNode.nodeName) === -1) { // 不在嵌套列表中的情况\r\n                        rm_node_1.rmNode(childNode);\r\n                    }\r\n                }\r\n            }\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/rm-irregular-nesting.ts?");

/***/ }),

/***/ "./src/slimming/rules/rm-irregular-tag.ts":
/*!************************************************!*\
  !*** ./src/slimming/rules/rm-irregular-tag.ts ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst regular_tag_1 = __webpack_require__(/*! ../const/regular-tag */ \"./src/slimming/const/regular-tag.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.rmIrregularTag = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, (node) => {\r\n            // 在配置的忽略列表中\r\n            if (Array.isArray(rule[1]) && rule[1].indexOf(node.nodeName) !== -1) {\r\n                return;\r\n            }\r\n            if (regular_tag_1.regularTag[node.nodeName].isUndef) {\r\n                rm_node_1.rmNode(node);\r\n            }\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/rm-irregular-tag.ts?");

/***/ }),

/***/ "./src/slimming/rules/rm-px.ts":
/*!*************************************!*\
  !*** ./src/slimming/rules/rm-px.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tokens_1 = __webpack_require__(/*! ../const/tokens */ \"./src/slimming/const/tokens.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst pxReg = new RegExp(`(^|\\\\(|\\\\s|,|{|;|:)(${tokens_1.numberPattern})px(?=$|\\\\)|\\\\s|,|;|})`, 'gi');\r\nexports.rmPx = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, (node) => {\r\n            node.attributes.forEach(attr => {\r\n                if (pxReg.test(attr.value)) {\r\n                    attr.value = attr.value.replace(pxReg, '$1$2');\r\n                }\r\n            });\r\n            if (node.nodeName === 'style') {\r\n                node.childNodes[0].textContent = node.childNodes[0].textContent.replace(pxReg, '$1$2');\r\n            }\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/rm-px.ts?");

/***/ }),

/***/ "./src/slimming/rules/rm-unnecessary.ts":
/*!**********************************************!*\
  !*** ./src/slimming/rules/rm-unnecessary.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst definitions_1 = __webpack_require__(/*! ../const/definitions */ \"./src/slimming/const/definitions.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.rmUnnecessary = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0] && Array.isArray(rule[1]) && rule[1].length) {\r\n        traversal_node_1.traversalNode(node => rule[1].indexOf(node.nodeName) !== -1 && definitions_1.unnecessaryElements.indexOf(node.nodeName) !== -1, rm_node_1.rmNode, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/rm-unnecessary.ts?");

/***/ }),

/***/ "./src/slimming/rules/rm-version.ts":
/*!******************************************!*\
  !*** ./src/slimming/rules/rm-version.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.rmVersion = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        traversal_node_1.traversalNode(ramda_1.propEq('nodeName', 'svg'), node => {\r\n            node.removeAttribute('version');\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/rm-version.ts?");

/***/ }),

/***/ "./src/slimming/rules/rm-viewbox.ts":
/*!******************************************!*\
  !*** ./src/slimming/rules/rm-viewbox.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.rmViewBox = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        traversal_node_1.traversalNode(node => node.hasAttribute('viewBox'), node => {\r\n            const size = {\r\n                x: '0',\r\n                y: '0',\r\n                width: '100%',\r\n                height: '100%',\r\n            };\r\n            const viewBox = {\r\n                x: '0',\r\n                y: '0',\r\n                width: '100%',\r\n                height: '100%',\r\n            };\r\n            node.attributes.forEach(attr => {\r\n                if (node.nodeName === 'marker') {\r\n                    if (attr.fullname === 'markerWidth') {\r\n                        size.width = attr.value.replace('px', '');\r\n                    }\r\n                    else if (attr.fullname === 'markerHeight') {\r\n                        size.height = attr.value.replace('px', '');\r\n                    }\r\n                }\r\n                else {\r\n                    if (attr.fullname === 'width') {\r\n                        size.width = attr.value.replace('px', '');\r\n                    }\r\n                    else if (attr.fullname === 'height') {\r\n                        size.height = attr.value.replace('px', '');\r\n                    }\r\n                }\r\n                if (attr.fullname === 'viewBox') {\r\n                    [viewBox.x, viewBox.y, viewBox.width, viewBox.height] = attr.value.split(/[\\s,]+/);\r\n                }\r\n            });\r\n            if (ramda_1.equals(size, viewBox)) {\r\n                node.removeAttribute('viewBox');\r\n            }\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/rm-viewbox.ts?");

/***/ }),

/***/ "./src/slimming/rules/rm-xml-decl.ts":
/*!*******************************************!*\
  !*** ./src/slimming/rules/rm-xml-decl.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst index_1 = __webpack_require__(/*! ../../node/index */ \"./src/node/index.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.rmXMLDecl = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        traversal_node_1.traversalNode(ramda_1.propEq('nodeType', index_1.NodeType.XMLDecl), rm_node_1.rmNode, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/rm-xml-decl.ts?");

/***/ }),

/***/ "./src/slimming/rules/rm-xmlns.ts":
/*!****************************************!*\
  !*** ./src/slimming/rules/rm-xmlns.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nexports.rmXMLNS = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        const traversalNode = (node, nsStack) => {\r\n            if (is_tag_1.isTag(node)) {\r\n                const xmlnsObj = {};\r\n                Object.assign(xmlnsObj, nsStack[nsStack.length - 1]);\r\n                // 首先判断节点是否存在命名空间\r\n                if (node.namespace) {\r\n                    if (xmlnsObj[node.namespace]) {\r\n                        xmlnsObj[node.namespace].count++;\r\n                    }\r\n                    else {\r\n                        rm_node_1.rmNode(node);\r\n                        return;\r\n                    }\r\n                }\r\n                // 遍历节点属性的命名空间\r\n                for (let i = node.attributes.length; i--;) {\r\n                    const attr = node.attributes[i];\r\n                    if (attr.namespace === 'xmlns') {\r\n                        xmlnsObj[attr.name] = {\r\n                            target: node,\r\n                            count: 0\r\n                        };\r\n                    }\r\n                    else if (attr.namespace) {\r\n                        if (xmlnsObj[attr.namespace]) {\r\n                            xmlnsObj[attr.namespace].count++;\r\n                        }\r\n                        else {\r\n                            node.removeAttribute(attr.fullname);\r\n                        }\r\n                    }\r\n                }\r\n                // 压栈，并遍历子节点\r\n                nsStack.push(xmlnsObj);\r\n                node.childNodes.forEach(childNode => {\r\n                    traversalNode(childNode, nsStack);\r\n                });\r\n                Object.keys(xmlnsObj).forEach(ns => {\r\n                    if (xmlnsObj[ns].count === 0 && xmlnsObj[ns].target === node) {\r\n                        node.removeAttribute(`xmlns:${ns}`);\r\n                    }\r\n                });\r\n                nsStack.pop();\r\n            }\r\n        };\r\n        dom.childNodes.forEach(node => {\r\n            traversalNode(node, [{}]);\r\n        });\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/rm-xmlns.ts?");

/***/ }),

/***/ "./src/slimming/rules/shape-to-path.ts":
/*!*********************************************!*\
  !*** ./src/slimming/rules/shape-to-path.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst definitions_1 = __webpack_require__(/*! ../const/definitions */ \"./src/slimming/const/definitions.ts\");\r\nconst create_1 = __webpack_require__(/*! ../xml/create */ \"./src/slimming/xml/create.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst rectToPath = (node) => {\r\n    const shapeAttr = {\r\n        x: '0',\r\n        y: '0',\r\n        width: '0',\r\n        height: '0',\r\n        rx: 'auto',\r\n        ry: 'auto',\r\n    };\r\n    const attributes = node.attributes;\r\n    for (let i = attributes.length; i--;) {\r\n        const attr = attributes[i];\r\n        if (ramda_1.has(attr.fullname, shapeAttr)) {\r\n            shapeAttr[attr.fullname] = attr.value;\r\n            node.removeAttribute(attr.fullname);\r\n        }\r\n    }\r\n    if ((shapeAttr.rx !== '0' && shapeAttr.rx !== 'auto' && shapeAttr.ry !== '0') || (shapeAttr.ry !== '0' && shapeAttr.ry !== 'auto' && shapeAttr.rx !== '0')) {\r\n        return;\r\n    }\r\n    node.nodeName = 'path';\r\n    node.setAttribute('d', `M${shapeAttr.x},${shapeAttr.y}h${shapeAttr.width}v${shapeAttr.height}h${-shapeAttr.width}z`);\r\n};\r\nconst lineToPath = (node) => {\r\n    const shapeAttr = {\r\n        x1: '0',\r\n        y1: '0',\r\n        x2: '0',\r\n        y2: '0',\r\n    };\r\n    const attributes = node.attributes;\r\n    for (let i = attributes.length; i--;) {\r\n        const attr = attributes[i];\r\n        if (ramda_1.has(attr.fullname, shapeAttr)) {\r\n            shapeAttr[attr.fullname] = attr.value;\r\n            node.removeAttribute(attr.fullname);\r\n        }\r\n    }\r\n    node.nodeName = 'path';\r\n    node.setAttribute('d', `M${shapeAttr.x1},${shapeAttr.y1}L${shapeAttr.x2},${shapeAttr.y2}`);\r\n};\r\nconst polyToPath = (node, addZ = false) => {\r\n    const shapeAttr = {\r\n        points: node.getAttribute('points'),\r\n    };\r\n    if (shapeAttr.points) {\r\n        node.removeAttribute('points');\r\n        node.nodeName = 'path';\r\n        const points = shapeAttr.points.split(/[\\s,]+/);\r\n        if (points.length % 2 === 1) {\r\n            points.pop();\r\n        }\r\n        let d = '';\r\n        if (points.length === 0) {\r\n            d = 'M0,0';\r\n        }\r\n        else if (points.length === 2) {\r\n            d = `M${points[0]},${points[1]}`;\r\n        }\r\n        else {\r\n            d = `M${points[0]},${points[1]}L${points.slice(2).join(',')}`;\r\n        }\r\n        if (addZ) {\r\n            d += 'z';\r\n        }\r\n        node.setAttribute('d', d);\r\n    }\r\n};\r\nexports.shapeToPath = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        traversal_node_1.traversalNode(node => definitions_1.shapeElements.indexOf(node.nodeName) !== -1, (node) => {\r\n            const cloneNode = node.cloneNode();\r\n            switch (node.nodeName) {\r\n                case 'rect':\r\n                    rectToPath(cloneNode);\r\n                    break;\r\n                case 'line':\r\n                    lineToPath(cloneNode);\r\n                    break;\r\n                case 'polyline':\r\n                    polyToPath(cloneNode);\r\n                    break;\r\n                case 'polygon':\r\n                    polyToPath(cloneNode, true);\r\n                    break;\r\n                default:\r\n                    cloneNode.nodeName = 'notneed';\r\n                    break;\r\n            }\r\n            if (cloneNode.nodeName === 'path' && create_1.createTag(cloneNode).length <= create_1.createTag(node).length) {\r\n                Object.assign(node, cloneNode);\r\n            }\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/shape-to-path.ts?");

/***/ }),

/***/ "./src/slimming/rules/shorten-class.ts":
/*!*********************************************!*\
  !*** ./src/slimming/rules/shorten-class.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst css_1 = __webpack_require__(/*! css */ \"css\");\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst create_shorten_id_1 = __webpack_require__(/*! ../algorithm/create-shorten-id */ \"./src/slimming/algorithm/create-shorten-id.ts\");\r\nconst shorten_tag_1 = __webpack_require__(/*! ../style/shorten-tag */ \"./src/slimming/style/shorten-tag.ts\");\r\nconst mix_white_space_1 = __webpack_require__(/*! ../utils/mix-white-space */ \"./src/slimming/utils/mix-white-space.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst classSelectorReg = /\\.([^,\\*#>+~:{\\s\\[\\.]+)/gi;\r\nexports.shortenClass = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        const classList = {};\r\n        let si = 0;\r\n        let cssNode;\r\n        let cssContent;\r\n        let parsedCss = null;\r\n        const shorten = (key, rid) => {\r\n            if (classList[key]) {\r\n                return classList[key][0];\r\n            }\r\n            const sid = create_shorten_id_1.createShortenID(si++);\r\n            classList[key] = [sid, rid];\r\n            return sid;\r\n        };\r\n        // 首先取出所有被引用的 class ，并缩短\r\n        traversal_node_1.traversalNode(ramda_1.propEq('nodeName', 'style'), (node) => {\r\n            cssNode = node;\r\n            cssContent = node.childNodes[0];\r\n            parsedCss = css_1.parse(cssContent.textContent, { silent: true });\r\n            if (parsedCss) {\r\n                parsedCss.stylesheet.rules.forEach((item) => {\r\n                    if (item.type === 'rule') {\r\n                        item.ruleId = +new Date();\r\n                        item.selectors.forEach((selector, selectorIndex) => {\r\n                            item.selectors[selectorIndex] = selector.replace(classSelectorReg, (m, p) => `.${shorten(p, item.ruleId)}`);\r\n                        });\r\n                    }\r\n                });\r\n                cssContent.textContent = shorten_tag_1.shortenTag(css_1.stringify(parsedCss, { compress: true }));\r\n            }\r\n        }, dom);\r\n        // 查找 dom 树，找到被引用的 class ，替换为缩短后的值\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, node => {\r\n            const classAttr = node.getAttribute('class');\r\n            if (classAttr !== null) {\r\n                const className = mix_white_space_1.mixWhiteSpace(classAttr.trim()).split(/\\s/);\r\n                for (let ci = className.length; ci--;) {\r\n                    if (classList[className[ci]]) {\r\n                        const cName = classList[className[ci]][0];\r\n                        delete classList[className[ci]];\r\n                        className[ci] = cName;\r\n                    }\r\n                    else {\r\n                        className.splice(ci, 1);\r\n                    }\r\n                }\r\n                if (className.length) {\r\n                    node.setAttribute('class', className.join(' '));\r\n                }\r\n                else {\r\n                    node.removeAttribute('class');\r\n                }\r\n            }\r\n        }, dom);\r\n        // 最后移除不存在的 class 引用\r\n        Object.values(classList).forEach(item => {\r\n            const reg = new RegExp(`.${item[0]}(?=[,\\\\*#>+~:{\\\\s\\\\[\\\\.]|$)`);\r\n            for (let ri = parsedCss.stylesheet.rules.length; ri--;) {\r\n                const cssRule = parsedCss.stylesheet.rules[ri];\r\n                if (cssRule.ruleId === item[1]) {\r\n                    for (let i = cssRule.selectors.length; i--;) {\r\n                        if (reg.test(cssRule.selectors[i])) {\r\n                            cssRule.selectors.splice(i, 1);\r\n                        }\r\n                    }\r\n                    if (!cssRule.selectors.length) {\r\n                        parsedCss.stylesheet.rules.splice(ri, 1);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            if (parsedCss.stylesheet.rules.length) {\r\n                cssContent.textContent = shorten_tag_1.shortenTag(css_1.stringify(parsedCss, { compress: true }));\r\n            }\r\n            else {\r\n                rm_node_1.rmNode(cssNode);\r\n            }\r\n        });\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/shorten-class.ts?");

/***/ }),

/***/ "./src/slimming/rules/shorten-color.ts":
/*!*********************************************!*\
  !*** ./src/slimming/rules/shorten-color.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst css_1 = __webpack_require__(/*! css */ \"css\");\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst regular_attr_1 = __webpack_require__(/*! ../const/regular-attr */ \"./src/slimming/const/regular-attr.ts\");\r\nconst tofixed_1 = __webpack_require__(/*! ../math/tofixed */ \"./src/slimming/math/tofixed.ts\");\r\nconst shorten_1 = __webpack_require__(/*! ../matrix/shorten */ \"./src/slimming/matrix/shorten.ts\");\r\nconst exec_1 = __webpack_require__(/*! ../style/exec */ \"./src/slimming/style/exec.ts\");\r\nconst shorten_tag_1 = __webpack_require__(/*! ../style/shorten-tag */ \"./src/slimming/style/shorten-tag.ts\");\r\nconst stringify_1 = __webpack_require__(/*! ../style/stringify */ \"./src/slimming/style/stringify.ts\");\r\nconst fillin_1 = __webpack_require__(/*! ../utils/fillin */ \"./src/slimming/utils/fillin.ts\");\r\nconst tohex_1 = __webpack_require__(/*! ../utils/tohex */ \"./src/slimming/utils/tohex.ts\");\r\nconst traversal_obj_1 = __webpack_require__(/*! ../utils/traversal-obj */ \"./src/slimming/utils/traversal-obj.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst tokens_1 = __webpack_require__(/*! ../const/tokens */ \"./src/slimming/const/tokens.ts\");\r\nconst operateHex = ramda_1.pipe(tohex_1.toHex, ramda_1.toLower, fillin_1.fillIn(2));\r\nconst shortenMap1 = {\r\n    'aliceblue': '#f0f8ff',\r\n    'antiquewhite': 'faebd7',\r\n    'aquamarine': '#7fffd4',\r\n    'black': '#000',\r\n    'blanchedalmond': '#ffebcd',\r\n    'blueviolet': '#8a2be2',\r\n    'burlywood': '#deb887',\r\n    'burntsienna': '#ea7e5d',\r\n    'cadetblue': '#5f9ea0',\r\n    'chartreuse': '#7fff00',\r\n    'chocolate': '#d2691e',\r\n    'cornflowerblue': '#6495ed',\r\n    'cornsilk': '#fff8dc',\r\n    'darkblue': '#00008b',\r\n    'darkcyan': '#008b8b',\r\n    'darkgoldenrod': '#b8860b',\r\n    'darkgray': '#a9a9a9',\r\n    'darkgreen': '#006400',\r\n    'darkgrey': '#a9a9a9',\r\n    'darkkhaki': '#bdb76b',\r\n    'darkmagenta': '#8b008b',\r\n    'darkolivegreen': '#556b2f',\r\n    'darkorange': '#ff8c00',\r\n    'darkorchid': '#9932cc',\r\n    'darksalmon': '#e9967a',\r\n    'darkseagreen': '#8fbc8f',\r\n    'darkslateblue': '#483d8b',\r\n    'darkslategray': '#2f4f4f',\r\n    'darkslategrey': '#2f4f4f',\r\n    'darkturquoise': '#00ced1',\r\n    'darkviolet': '#9400d3',\r\n    'deeppink': '#ff1493',\r\n    'deepskyblue': '#00bfff',\r\n    'dodgerblue': '#1e90ff',\r\n    'firebrick': '#b22222',\r\n    'floralwhite': '#fffaf0',\r\n    'forestgreen': '#228b22',\r\n    'gainsboro': '#dcdcdc',\r\n    'ghostwhite': '#f8f8ff',\r\n    'goldenrod': '#daa520',\r\n    'greenyellow': '#adff2f',\r\n    'honeydew': '#f0fff0',\r\n    'indianred': '#cd5c5c',\r\n    'lavender': '#e6e6fa',\r\n    'lavenderblush': '#fff0f5',\r\n    'lawngreen': '#7cfc00',\r\n    'lemonchiffon': '#fffacd',\r\n    'lightblue': '#add8e6',\r\n    'lightcoral': '#f08080',\r\n    'lightcyan': '#e0ffff',\r\n    'lightgoldenrodyellow': '#fafad2',\r\n    'lightgray': '#d3d3d3',\r\n    'lightgreen': '#90ee90',\r\n    'lightgrey': '#d3d3d3',\r\n    'lightpink': '#ffb6c1',\r\n    'lightsalmon': '#ffa07a',\r\n    'lightseagreen': '#20b2aa',\r\n    'lightskyblue': '#87cefa',\r\n    'lightslategray': '#789',\r\n    'lightslategrey': '#789',\r\n    'lightsteelblue': '#b0c4de',\r\n    'lightyellow': '#ffffe0',\r\n    'limegreen': '#32cd32',\r\n    'mediumaquamarine': '#66cdaa',\r\n    'mediumblue': '#0000cd',\r\n    'mediumorchid': '#ba55d3',\r\n    'mediumpurple': '#9370db',\r\n    'mediumseagreen': '#3cb371',\r\n    'mediumslateblue': '#7b68ee',\r\n    'mediumspringgreen': '#00fa9a',\r\n    'mediumturquoise': '#48d1cc',\r\n    'mediumvioletred': '#c71585',\r\n    'midnightblue': '#191970',\r\n    'mintcream': '#f5fffa',\r\n    'mistyrose': '#ffe4e1',\r\n    'moccasin': '#ffe4b5',\r\n    'navajowhite': '#ffdead',\r\n    'olivedrab': '#6b8e23',\r\n    'orangered': '#ff4500',\r\n    'palegoldenrod': '#eee8aa',\r\n    'palegreen': '#98fb98',\r\n    'paleturquoise': '#afeeee',\r\n    'palevioletred': '#db7093',\r\n    'papayawhip': '#ffefd5',\r\n    'peachpuff': '#ffdab9',\r\n    'powderblue': '#b0e0e6',\r\n    'rebeccapurple': '#639',\r\n    'rosybrown': '#bc8f8f',\r\n    'royalblue': '#4169e1',\r\n    'saddlebrown': '#8b4513',\r\n    'sandybrown': '#f4a460',\r\n    'seagreen': '#2e8b57',\r\n    'seashell': '#fff5ee',\r\n    'slateblue': '#6a5acd',\r\n    'slategray': '#708090',\r\n    'slategrey': '#708090',\r\n    'springgreen': '#00ff7f',\r\n    'steelblue': '#4682b4',\r\n    'turquoise': '#40e0d0',\r\n    'white': '#fff',\r\n    'whitesmoke': '#f5f5f5',\r\n    'yellow': '#ff0',\r\n    'yellowgreen': '#9acd32',\r\n};\r\nconst shortenReg1 = new RegExp(`(^|[^a-z])(${Object.keys(shortenMap1).join('|')})(?=[^a-z]|$)`, 'gi');\r\nconst shortenMap2 = {\r\n    '#f0ffff': 'azure',\r\n    '#f5f5dc': 'beige',\r\n    '#ffe4c4': 'bisque',\r\n    '#a52a2a': 'brown',\r\n    '#ff7f50': 'coral',\r\n    '#ffd700': 'gold',\r\n    '#808080': 'gray',\r\n    '#008000': 'green',\r\n    '#4b0082': 'indigo',\r\n    '#fffff0': 'ivory',\r\n    '#f0e68c': 'khaki',\r\n    '#faf0e6': 'linen',\r\n    '#800000': 'maroon',\r\n    '#000080': 'navy',\r\n    '#808000': 'olive',\r\n    '#ffa500': 'orange',\r\n    '#da70d6': 'orchid',\r\n    '#cd853f': 'peru',\r\n    '#ffc0cb': 'pink',\r\n    '#dda0dd': 'plum',\r\n    '#800080': 'purple',\r\n    '#f00': 'red',\r\n    '#fa8072': 'salmon',\r\n    '#a0522d': 'sienna',\r\n    '#c0c0c0': 'silver',\r\n    '#fffafa': 'snow',\r\n    '#d2b48c': 'tan',\r\n    '#008080': 'teal',\r\n    '#ff6347': 'tomato',\r\n    '#ee82ee': 'violet',\r\n    '#f5deb3': 'wheat',\r\n};\r\nconst shortenReg2 = new RegExp(`(?:${Object.keys(shortenMap2).join('|')})(?=[^0-9a-f]|$)`, 'gi');\r\nconst Hundred = 100;\r\nconst FF = 255;\r\nconst Circ = 360;\r\nconst Circ6 = 60;\r\nconst half = 0.5;\r\nconst validPercent = (max, n) => Math.round(Math.max(Math.min(Hundred, n), 0) * max / Hundred);\r\nconst validNum = (max, n) => Math.max(Math.min(max, Math.round(n)), 0);\r\nconst valid = (p, max, n) => p ? validPercent(max, +n) : validNum(max, +n);\r\nconst validOpacity = (digit, p, n) => tofixed_1.toFixed(digit, Math.max(Math.min(1, p ? +n / Hundred : +n), 0));\r\nfunction hsl2rgb(h, s, l) {\r\n    let _R, G, B, X, C;\r\n    let _h = (h % Circ) / Circ6;\r\n    C = 2 * s * (l < half ? l : 1 - l);\r\n    X = C * (1 - Math.abs(_h % 2 - 1));\r\n    _R = G = B = l - C / 2;\r\n    _h = ~~_h;\r\n    _R += [C, X, 0, 0, X, C][_h];\r\n    G += [X, C, C, X, 0, 0][_h];\r\n    B += [0, 0, X, C, C, X][_h];\r\n    return [validNum(FF, _R * FF), validNum(FF, G * FF), validNum(FF, B * FF)];\r\n}\r\nconst colorFuncReg = new RegExp(`((?:rgb|hsl)a?)\\\\((${tokens_1.numberPattern})(%?),(${tokens_1.numberPattern})(%?),(${tokens_1.numberPattern})(%?)(?:,(${tokens_1.numberPattern})(%?))?\\\\)`, 'gi');\r\nconst formatColor = (rgba, digit, str) => {\r\n    let s = shorten_1.shorten(str).replace(colorFuncReg, (match, func, n1, p1, n2, p2, n3, p3, n4, p4) => {\r\n        switch (func) {\r\n            case 'rgb':\r\n                if (p1 === p2 && p1 === p3) {\r\n                    return `#${operateHex(valid(p1, FF, n1))}${operateHex(valid(p1, FF, n2))}${operateHex(valid(p1, FF, n3))}`;\r\n                }\r\n                else {\r\n                    return '';\r\n                }\r\n            case 'rgba':\r\n                if (p1 === p2 && p1 === p3) {\r\n                    if (rgba) {\r\n                        return `#${operateHex(valid(p1, FF, n1))}${operateHex(valid(p1, FF, n2))}${operateHex(valid(p1, FF, n3))}${operateHex(validOpacity(digit, p4, n4))}`;\r\n                    }\r\n                    else {\r\n                        return `rgba(${valid(p1, FF, n1)},${valid(p1, FF, n2)},${valid(p1, FF, n3)},${`${validOpacity(digit, p4, n4)}`.replace(/^0\\./, '.')})`;\r\n                    }\r\n                }\r\n                else {\r\n                    return '';\r\n                }\r\n            case 'hsl':\r\n                if (p1 || !p2 || !p3) {\r\n                    return '';\r\n                }\r\n                else {\r\n                    const [r, g, b] = hsl2rgb(+n1, +n2 / Hundred, +n3 / Hundred);\r\n                    return `#${operateHex(r)}${operateHex(g)}${operateHex(b)}`;\r\n                }\r\n            case 'hsla':\r\n                if (p1 || !p2 || !p3) {\r\n                    return '';\r\n                }\r\n                else {\r\n                    const [r, g, b] = hsl2rgb(+n1, +n2 / Hundred, +n3 / Hundred);\r\n                    if (rgba) {\r\n                        return `#${operateHex(r)}${operateHex(g)}${operateHex(b)}${operateHex(validOpacity(digit, p4, n4))}`;\r\n                    }\r\n                    else {\r\n                        return `rgba(${r},${g},${b},${`${validOpacity(digit, p4, n4)}`.replace(/^0\\./, '.')})`;\r\n                    }\r\n                }\r\n            default:\r\n                return match;\r\n        }\r\n    });\r\n    s = s.replace(/#([0-9a-f])\\1([0-9a-f])\\2([0-9a-f])\\3(?=[^0-9a-f]|$)/gi, '#$1$2$3');\r\n    s = s.replace(shortenReg1, ($0, $1, $2) => `${$1}${shortenMap1[$2]}`).replace(shortenReg2, $0 => `${shortenMap2[$0]}`);\r\n    if (rgba) {\r\n        s = s.replace(/#([0-9a-f])\\1([0-9a-f])\\2([0-9a-f])\\3([0-9a-f])\\4(?=[^0-9a-f]|$)/gi, '#$1$2$3$4');\r\n        s = s.replace(/transparent/gi, '#0000');\r\n    }\r\n    return s;\r\n};\r\nexports.shortenColor = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, node => {\r\n            node.attributes.forEach(attr => {\r\n                if (regular_attr_1.regularAttr[attr.fullname].maybeColor) {\r\n                    attr.value = formatColor(rule[1], rule[2], attr.value);\r\n                }\r\n                else if (attr.fullname === 'style') {\r\n                    const style = exec_1.execStyle(attr.value);\r\n                    style.forEach(s => {\r\n                        if (regular_attr_1.regularAttr[s.fullname].maybeColor) {\r\n                            s.value = formatColor(rule[1], rule[2], s.value);\r\n                        }\r\n                    });\r\n                    attr.value = stringify_1.stringifyStyle(style);\r\n                }\r\n            });\r\n            if (node.nodeName === 'style') {\r\n                // 缩短 style 标签内的数值\r\n                const parsedCss = css_1.parse(node.childNodes[0].textContent, { silent: true });\r\n                if (parsedCss) {\r\n                    traversal_obj_1.traversalObj(ramda_1.both(ramda_1.has('property'), ramda_1.has('value')), (cssRule) => {\r\n                        if (regular_attr_1.regularAttr[cssRule.property].maybeColor) { // 可以模糊处理的数字\r\n                            cssRule.value = formatColor(rule[1], rule[2], cssRule.value);\r\n                        }\r\n                    }, parsedCss.stylesheet.rules);\r\n                    node.childNodes[0].textContent = shorten_tag_1.shortenTag(css_1.stringify(parsedCss, { compress: true }));\r\n                }\r\n            }\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/shorten-color.ts?");

/***/ }),

/***/ "./src/slimming/rules/shorten-decimal-digits.ts":
/*!******************************************************!*\
  !*** ./src/slimming/rules/shorten-decimal-digits.ts ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst css_1 = __webpack_require__(/*! css */ \"css\");\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst regular_attr_1 = __webpack_require__(/*! ../const/regular-attr */ \"./src/slimming/const/regular-attr.ts\");\r\nconst tofixed_1 = __webpack_require__(/*! ../math/tofixed */ \"./src/slimming/math/tofixed.ts\");\r\nconst exec_1 = __webpack_require__(/*! ../style/exec */ \"./src/slimming/style/exec.ts\");\r\nconst shorten_tag_1 = __webpack_require__(/*! ../style/shorten-tag */ \"./src/slimming/style/shorten-tag.ts\");\r\nconst stringify_1 = __webpack_require__(/*! ../style/stringify */ \"./src/slimming/style/stringify.ts\");\r\nconst traversal_obj_1 = __webpack_require__(/*! ../utils/traversal-obj */ \"./src/slimming/utils/traversal-obj.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst definitions_1 = __webpack_require__(/*! ../const/definitions */ \"./src/slimming/const/definitions.ts\");\r\nconst tokens_1 = __webpack_require__(/*! ../const/tokens */ \"./src/slimming/const/tokens.ts\");\r\nconst doShorten = ramda_1.curry((digit, val) => val.replace(tokens_1.numberRegGlobal, s => `${tofixed_1.toFixed(digit, parseFloat(s))}`.replace(/^0\\./, '.')));\r\nexports.shortenDecimalDigits = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        const fuzzyDigit = doShorten(rule[1]);\r\n        const accurateDigit = doShorten(rule[2]);\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, node => {\r\n            if (node.nodeName === 'style') {\r\n                // 缩短 style 标签内的数值\r\n                const parsedCss = css_1.parse(node.childNodes[0].textContent, { silent: true });\r\n                if (parsedCss) {\r\n                    traversal_obj_1.traversalObj(ramda_1.both(ramda_1.has('property'), ramda_1.has('value')), (cssRule) => {\r\n                        if (regular_attr_1.regularAttr[cssRule.property].maybeSizeNumber) { // 可以模糊处理的数字\r\n                            cssRule.value = fuzzyDigit(cssRule.value);\r\n                        }\r\n                        else if (regular_attr_1.regularAttr[cssRule.property].maybeAccurateNumber) { // 需要较精确的数字\r\n                            cssRule.value = accurateDigit(cssRule.value);\r\n                        }\r\n                    }, parsedCss.stylesheet.rules);\r\n                    node.childNodes[0].textContent = shorten_tag_1.shortenTag(css_1.stringify(parsedCss, { compress: true }));\r\n                }\r\n            }\r\n            // 先取出来 attributeName 属性\r\n            const attributeName = node.getAttribute('attributeName');\r\n            // 缩短节点属性的数值\r\n            node.attributes.forEach(attr => {\r\n                if (regular_attr_1.regularAttr[attr.fullname].maybeSizeNumber) { // 可以模糊处理的数字\r\n                    attr.value = fuzzyDigit(attr.value);\r\n                }\r\n                else if (regular_attr_1.regularAttr[attr.fullname].maybeAccurateNumber) { // 需要较精确的数字\r\n                    attr.value = accurateDigit(attr.value);\r\n                }\r\n                else if (definitions_1.animationAttributes.indexOf(attr.fullname) !== -1) { // 动画处理的属性，需要根据 attributeName 属性判断\r\n                    if (regular_attr_1.regularAttr[attributeName].maybeSizeNumber) {\r\n                        attr.value = fuzzyDigit(attr.value);\r\n                    }\r\n                    else if (regular_attr_1.regularAttr[attributeName].maybeAccurateNumber) {\r\n                        attr.value = accurateDigit(attr.value);\r\n                    }\r\n                }\r\n                else if (attr.fullname === 'style') { // css 样式处理，和属性类似\r\n                    const style = exec_1.execStyle(attr.value);\r\n                    style.forEach(s => {\r\n                        if (regular_attr_1.regularAttr[s.fullname].maybeSizeNumber) {\r\n                            s.value = fuzzyDigit(s.value);\r\n                        }\r\n                        else if (regular_attr_1.regularAttr[s.fullname].maybeAccurateNumber) {\r\n                            s.value = accurateDigit(s.value);\r\n                        }\r\n                    });\r\n                    attr.value = stringify_1.stringifyStyle(style);\r\n                }\r\n            });\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/shorten-decimal-digits.ts?");

/***/ }),

/***/ "./src/slimming/rules/shorten-defs.ts":
/*!********************************************!*\
  !*** ./src/slimming/rules/shorten-defs.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst regular_attr_1 = __webpack_require__(/*! ../const/regular-attr */ \"./src/slimming/const/regular-attr.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst funciriReg = /^url\\(([\"']?)#(.+)\\1\\)$/;\r\nconst iriReg = /^#(.+)$/;\r\nconst checkSub = (node, IDList) => {\r\n    let hasId = false;\r\n    const attributes = node.attributes;\r\n    for (let i = attributes.length; i--;) {\r\n        const attr = attributes[i];\r\n        if (attr.fullname === 'id') {\r\n            if (IDList[attr.value]) {\r\n                hasId = true;\r\n            }\r\n            else {\r\n                node.removeAttribute(attr.fullname);\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    if (!hasId) {\r\n        const childNodes = node.childNodes;\r\n        for (let ci = childNodes.length; ci--;) {\r\n            const childNode = childNodes[ci];\r\n            if (is_tag_1.isTag(childNode)) {\r\n                checkSub(childNode, IDList);\r\n            }\r\n            else {\r\n                rm_node_1.rmNode(childNode);\r\n            }\r\n        }\r\n        if (!node.childNodes.length) {\r\n            rm_node_1.rmNode(node);\r\n        }\r\n    }\r\n};\r\nexports.shortenDefs = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        let firstDefs;\r\n        const IDList = {};\r\n        // 首先取出所有被引用的 ID\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, (node) => {\r\n            node.attributes.forEach(attr => {\r\n                if (regular_attr_1.regularAttr[attr.fullname].maybeFuncIRI) {\r\n                    const firi = funciriReg.exec(attr.value);\r\n                    if (firi) {\r\n                        IDList[firi[2]] = true;\r\n                    }\r\n                }\r\n                else if (regular_attr_1.regularAttr[attr.fullname].maybeIRI) {\r\n                    const iri = iriReg.exec(attr.value);\r\n                    if (iri) {\r\n                        IDList[iri[1]] = true;\r\n                    }\r\n                }\r\n            });\r\n        }, dom);\r\n        // 合并 defs 标签\r\n        traversal_node_1.traversalNode(ramda_1.propEq('nodeName', 'defs'), (node) => {\r\n            if (firstDefs) {\r\n                node.childNodes.forEach(childNode => {\r\n                    firstDefs.appendChild(childNode);\r\n                });\r\n                rm_node_1.rmNode(node);\r\n            }\r\n            else {\r\n                firstDefs = node;\r\n            }\r\n        }, dom);\r\n        if (firstDefs) {\r\n            checkSub(firstDefs, IDList);\r\n        }\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/shorten-defs.ts?");

/***/ }),

/***/ "./src/slimming/rules/shorten-id.ts":
/*!******************************************!*\
  !*** ./src/slimming/rules/shorten-id.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst css_1 = __webpack_require__(/*! css */ \"css\");\r\nconst create_shorten_id_1 = __webpack_require__(/*! ../algorithm/create-shorten-id */ \"./src/slimming/algorithm/create-shorten-id.ts\");\r\nconst regular_attr_1 = __webpack_require__(/*! ../const/regular-attr */ \"./src/slimming/const/regular-attr.ts\");\r\nconst shorten_tag_1 = __webpack_require__(/*! ../style/shorten-tag */ \"./src/slimming/style/shorten-tag.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst rm_node_1 = __webpack_require__(/*! ../xml/rm-node */ \"./src/slimming/xml/rm-node.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst funciriReg = /^url\\(([\"']?)#(.+)\\1\\)$/;\r\nconst iriReg = /^#(.+)$/;\r\nconst idSelectorReg = /#([^,\\*#>+~:{\\s\\[\\.]+)/gi;\r\nexports.shortenID = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        const IDList = {};\r\n        let si = 0;\r\n        let cssNode;\r\n        let cssContent;\r\n        let parsedCss;\r\n        const shorten = (node, attrname, key) => {\r\n            if (IDList[key]) {\r\n                return IDList[key][0];\r\n            }\r\n            const sid = create_shorten_id_1.createShortenID(si++);\r\n            IDList[key] = [sid, node, attrname];\r\n            return sid;\r\n        };\r\n        // 首先取出所有被引用的 ID ，并缩短\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, (node) => {\r\n            if (node.nodeName === 'style') {\r\n                cssNode = node;\r\n                cssContent = node.childNodes[0];\r\n                parsedCss = css_1.parse(cssContent.textContent, { silent: true });\r\n                if (parsedCss) {\r\n                    parsedCss.stylesheet.rules.forEach((item) => {\r\n                        if (item.type === 'rule') {\r\n                            item.ruleId = +new Date();\r\n                            item.selectors.forEach((selector, selectorIndex) => {\r\n                                item.selectors[selectorIndex] = selector.replace(idSelectorReg, (m, p) => `#${shorten(node, item.ruleId, p)}`);\r\n                            });\r\n                        }\r\n                    });\r\n                    cssContent.textContent = shorten_tag_1.shortenTag(css_1.stringify(parsedCss, { compress: true }));\r\n                }\r\n            }\r\n            else {\r\n                node.attributes.forEach(attr => {\r\n                    if (regular_attr_1.regularAttr[attr.fullname].maybeFuncIRI) {\r\n                        const firi = funciriReg.exec(attr.value);\r\n                        if (firi) {\r\n                            attr.value = `url(#${shorten(node, attr.fullname, firi[2])})`;\r\n                        }\r\n                    }\r\n                    else if (regular_attr_1.regularAttr[attr.fullname].maybeIRI) {\r\n                        const iri = iriReg.exec(attr.value);\r\n                        if (iri) {\r\n                            attr.value = `#${shorten(node, attr.fullname, iri[1])}`;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }, dom);\r\n        // 查找 dom 树，找到被引用的 ID ，替换为缩短后的值\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, (node) => {\r\n            const ID = node.getAttribute('id');\r\n            if (ID !== null) {\r\n                if (IDList[ID]) {\r\n                    const id = IDList[ID][0];\r\n                    delete IDList[ID];\r\n                    node.setAttribute('id', id);\r\n                }\r\n                else {\r\n                    node.removeAttribute('id');\r\n                }\r\n            }\r\n        }, dom);\r\n        // 最后移除不存在的 ID 引用\r\n        Object.values(IDList).forEach(item => {\r\n            if (item[1]) {\r\n                if (typeof item[2] === 'string') {\r\n                    item[1].removeAttribute(item[2]);\r\n                }\r\n                else {\r\n                    const reg = new RegExp(`#${item[0]}(?=[,\\\\*#>+~:{\\\\s\\\\[\\\\.]|$)`);\r\n                    for (let ri = parsedCss.stylesheet.rules.length; ri--;) {\r\n                        const cssRule = parsedCss.stylesheet.rules[ri];\r\n                        if (cssRule.ruleId === item[2]) {\r\n                            for (let i = cssRule.selectors.length; i--;) {\r\n                                if (reg.test(cssRule.selectors[i])) {\r\n                                    cssRule.selectors.splice(i, 1);\r\n                                }\r\n                            }\r\n                            if (!cssRule.selectors.length) {\r\n                                parsedCss.stylesheet.rules.splice(ri, 1);\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (parsedCss.stylesheet.rules.length) {\r\n                        cssContent.textContent = shorten_tag_1.shortenTag(css_1.stringify(parsedCss, { compress: true }));\r\n                    }\r\n                    else {\r\n                        rm_node_1.rmNode(cssNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/shorten-id.ts?");

/***/ }),

/***/ "./src/slimming/rules/shorten-style-attr.ts":
/*!**************************************************!*\
  !*** ./src/slimming/rules/shorten-style-attr.ts ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst regular_attr_1 = __webpack_require__(/*! ../const/regular-attr */ \"./src/slimming/const/regular-attr.ts\");\r\nconst check_apply_1 = __webpack_require__(/*! ../style/check-apply */ \"./src/slimming/style/check-apply.ts\");\r\nconst exec_1 = __webpack_require__(/*! ../style/exec */ \"./src/slimming/style/exec.ts\");\r\nconst shorten_1 = __webpack_require__(/*! ../style/shorten */ \"./src/slimming/style/shorten.ts\");\r\nconst stringify_1 = __webpack_require__(/*! ../style/stringify */ \"./src/slimming/style/stringify.ts\");\r\nconst legal_value_1 = __webpack_require__(/*! ../validate/legal-value */ \"./src/slimming/validate/legal-value.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\n// 属性转 style 的临界值\r\nconst styleThreshold = 4;\r\nconst style2value = ramda_1.pipe(stringify_1.stringifyStyle, shorten_1.shortenStyle);\r\nexports.shortenStyleAttr = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        let hasStyleTag = false;\r\n        traversal_node_1.traversalNode(ramda_1.propEq('nodeName', 'style'), (node) => {\r\n            hasStyleTag = true;\r\n        }, dom);\r\n        traversal_node_1.traversalNode(is_tag_1.isTag, (node) => {\r\n            const attrObj = {};\r\n            for (let i = node.attributes.length; i--;) {\r\n                const attr = node.attributes[i];\r\n                const attrDefine = regular_attr_1.regularAttr[attr.fullname];\r\n                if (attr.fullname === 'style') {\r\n                    const styleObj = exec_1.execStyle(attr.value);\r\n                    const styleUnique = {};\r\n                    for (let si = styleObj.length; si--;) {\r\n                        const styleItem = styleObj[si];\r\n                        const styleDefine = regular_attr_1.regularAttr[styleItem.fullname];\r\n                        if (styleUnique[styleItem.fullname] // 排重\r\n                            ||\r\n                                !styleDefine.couldBeStyle // 不是合法的样式属性\r\n                            ||\r\n                                !check_apply_1.checkApply(styleDefine, node, dom) // 样式继承链上不存在可应用对象\r\n                            ||\r\n                                !legal_value_1.legalValue(styleDefine, styleItem) // 值不合法\r\n                        ) {\r\n                            styleObj.splice(si, 1);\r\n                        }\r\n                        else {\r\n                            if (ramda_1.has(styleItem.fullname, attrObj)) { // 如果存在同名属性，要把被覆盖的属性移除掉\r\n                                node.removeAttribute(styleItem.fullname);\r\n                            }\r\n                            styleUnique[styleItem.fullname] = true;\r\n                            attrObj[styleItem.fullname] = styleItem.value;\r\n                        }\r\n                    }\r\n                    if (Object.keys(styleObj).length) {\r\n                        attr.value = style2value(styleObj);\r\n                    }\r\n                    else {\r\n                        node.removeAttribute(attr.fullname);\r\n                    }\r\n                }\r\n                else if (attrDefine.couldBeStyle) {\r\n                    if (attrObj[attr.fullname] // 已被 style 属性覆盖\r\n                        ||\r\n                            !check_apply_1.checkApply(attrDefine, node, dom) // 样式继承链上不存在可应用对象\r\n                        ||\r\n                            !legal_value_1.legalValue(attrDefine, attr) // 值不合法\r\n                    ) {\r\n                        node.removeAttribute(attr.fullname);\r\n                    }\r\n                    else {\r\n                        attrObj[attr.fullname] = attr.value;\r\n                    }\r\n                }\r\n            }\r\n            if (!hasStyleTag || rule[1]) {\r\n                // [warning] svg 的样式覆盖规则是 style 属性 > style 标签 > 属性，所以以下代码可能导致不正确的覆盖！\r\n                const attributes = node.attributes;\r\n                if (Object.keys(attrObj).length > styleThreshold) {\r\n                    // 属性转 style\r\n                    for (let j = attributes.length; j--;) {\r\n                        const attr = attributes[j];\r\n                        if (regular_attr_1.regularAttr[attr.fullname].couldBeStyle || attr.fullname === 'style') {\r\n                            node.removeAttribute(attr.fullname);\r\n                        }\r\n                    }\r\n                    node.setAttribute('style', style2value(Object.keys(attrObj).map(key => {\r\n                        return {\r\n                            name: key,\r\n                            fullname: key,\r\n                            value: attrObj[key],\r\n                        };\r\n                    })));\r\n                }\r\n                else {\r\n                    // style 转属性\r\n                    node.removeAttribute('style');\r\n                    attributes.forEach(attr => {\r\n                        if (ramda_1.has(attr.fullname, attrObj)) {\r\n                            delete attrObj[attr.fullname];\r\n                        }\r\n                    });\r\n                    Object.keys(attrObj).forEach(name => {\r\n                        node.setAttribute(name, attrObj[name]);\r\n                    });\r\n                }\r\n            }\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/shorten-style-attr.ts?");

/***/ }),

/***/ "./src/slimming/rules/shorten-style-tag.ts":
/*!*************************************************!*\
  !*** ./src/slimming/rules/shorten-style-tag.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst css_1 = __webpack_require__(/*! css */ \"css\");\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst regular_attr_1 = __webpack_require__(/*! ../const/regular-attr */ \"./src/slimming/const/regular-attr.ts\");\r\nconst shorten_tag_1 = __webpack_require__(/*! ../style/shorten-tag */ \"./src/slimming/style/shorten-tag.ts\");\r\nconst mix_white_space_1 = __webpack_require__(/*! ../utils/mix-white-space */ \"./src/slimming/utils/mix-white-space.ts\");\r\nconst traversal_obj_1 = __webpack_require__(/*! ../utils/traversal-obj */ \"./src/slimming/utils/traversal-obj.ts\");\r\nconst legal_value_1 = __webpack_require__(/*! ../validate/legal-value */ \"./src/slimming/validate/legal-value.ts\");\r\nconst get_by_selector_1 = __webpack_require__(/*! ../xml/get-by-selector */ \"./src/slimming/xml/get-by-selector.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nexports.shortenStyleTag = (rule, dom) => new Promise((resolve, reject) => {\r\n    if (rule[0]) {\r\n        traversal_node_1.traversalNode(ramda_1.propEq('nodeName', 'style'), (node) => {\r\n            const cssContent = node.childNodes[0];\r\n            const parsedCss = css_1.parse(cssContent.textContent);\r\n            // 遍历 style 解析对象，取得包含 css 定义的值\r\n            traversal_obj_1.traversalObj(ramda_1.has('declarations'), (cssRule, parents) => {\r\n                const declared = {};\r\n                for (let i = cssRule.declarations.length; i--;) {\r\n                    const ruleItem = cssRule.declarations[i];\r\n                    const property = ruleItem.property;\r\n                    /*\r\n                     * 1、排重\r\n                     * 2、验证属性有效性\r\n                     * 3、验证值合法性\r\n                     */\r\n                    if (!declared[property] && regular_attr_1.regularAttr[property].couldBeStyle && legal_value_1.legalValue(regular_attr_1.regularAttr[property], {\r\n                        fullname: property,\r\n                        name: property,\r\n                        value: ruleItem.value\r\n                    })) {\r\n                        declared[property] = true;\r\n                    }\r\n                    else {\r\n                        cssRule.declarations.splice(i, 1);\r\n                    }\r\n                }\r\n                if (!cssRule.declarations.length) {\r\n                    const plen = parents.length;\r\n                    const plist = parents[plen - 1];\r\n                    plist.splice(plist.indexOf(cssRule), 1);\r\n                    if (cssRule.type === 'keyframe' && !plist.length) {\r\n                        const rules = parents[plen - 3];\r\n                        rules.splice(rules.indexOf(parents[plen - 2]), 1);\r\n                    }\r\n                }\r\n            }, parsedCss.stylesheet.rules);\r\n            // 深度优化\r\n            if (rule[1]) {\r\n                const selectorUnique = {};\r\n                const declareUnique = {};\r\n                for (let i = 0, l = parsedCss.stylesheet.rules.length; i < l; i++) {\r\n                    const styleRule = parsedCss.stylesheet.rules[i];\r\n                    // 只针对规则类\r\n                    if (styleRule.type === 'rule') {\r\n                        // 移除无效的选择器\r\n                        for (let si = styleRule.selectors.length; si--;) {\r\n                            if (!get_by_selector_1.getBySelector(dom, styleRule.selectors[si]).length) {\r\n                                styleRule.selectors.splice(si, 1);\r\n                            }\r\n                        }\r\n                        if (!styleRule.selectors.length) {\r\n                            parsedCss.stylesheet.rules.splice(i, 1);\r\n                            i--;\r\n                            l--;\r\n                            continue;\r\n                        }\r\n                        // 合并相同选择器\r\n                        styleRule.selectors.sort((a, b) => a < b ? -1 : 1);\r\n                        styleRule.selectors = styleRule.selectors.map(s => mix_white_space_1.mixWhiteSpace(s.trim()));\r\n                        const selectorKey = styleRule.selectors.join(',');\r\n                        if (selectorUnique[selectorKey]) {\r\n                            const declarations = selectorUnique[selectorKey].declarations.concat(styleRule.declarations);\r\n                            // 合并之后依然要排重\r\n                            const declared = {};\r\n                            for (let j = declarations.length; j--;) {\r\n                                if (declared[declarations[j].property]) {\r\n                                    declarations.splice(j, 1);\r\n                                }\r\n                                else {\r\n                                    declared[declarations[j].property] = true;\r\n                                }\r\n                            }\r\n                            selectorUnique[selectorKey].declarations = declarations;\r\n                            parsedCss.stylesheet.rules.splice(i, 1);\r\n                            i--;\r\n                            l--;\r\n                            continue;\r\n                        }\r\n                        else {\r\n                            selectorUnique[selectorKey] = styleRule;\r\n                        }\r\n                        // 合并相同规则\r\n                        styleRule.declarations.sort((a, b) => a.property < b.property ? -1 : 1);\r\n                        const declareKey = styleRule.declarations.map((d) => `${d.property}:${d.value}`).join(';');\r\n                        if (declareUnique[declareKey]) {\r\n                            const selectors = declareUnique[declareKey].selectors.concat(styleRule.selectors);\r\n                            const selected = {};\r\n                            for (let j = selectors.length; j--;) {\r\n                                if (selected[selectors[j]]) {\r\n                                    selectors.splice(j, 1);\r\n                                }\r\n                                else {\r\n                                    selected[selectors[j]] = true;\r\n                                }\r\n                            }\r\n                            declareUnique[declareKey].selectors = selectors;\r\n                            parsedCss.stylesheet.rules.splice(i, 1);\r\n                            i--;\r\n                            l--;\r\n                            continue;\r\n                        }\r\n                        else {\r\n                            declareUnique[declareKey] = styleRule;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            cssContent.textContent = shorten_tag_1.shortenTag(css_1.stringify(parsedCss, { compress: true }));\r\n        }, dom);\r\n    }\r\n    resolve();\r\n});\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/rules/shorten-style-tag.ts?");

/***/ }),

/***/ "./src/slimming/style/check-apply.ts":
/*!*******************************************!*\
  !*** ./src/slimming/style/check-apply.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst traversal_node_1 = __webpack_require__(/*! ../xml/traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ../xml/is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst check = (styleDefine, node, dom, unique) => {\r\n    if (styleDefine.applyTo.indexOf(node.nodeName) !== -1) {\r\n        return true;\r\n    }\r\n    // 因为递归可能存在循环引用，所以需要排重\r\n    if (unique.indexOf(node) !== -1) {\r\n        return;\r\n    }\r\n    unique.push(node);\r\n    let result = false;\r\n    traversal_node_1.traversalNode(is_tag_1.isTag, (childNode) => {\r\n        // 因为递归可能存在循环引用，所以需要排重\r\n        if (unique.indexOf(childNode) !== -1) {\r\n            return;\r\n        }\r\n        unique.push(childNode);\r\n        if (styleDefine.applyTo.indexOf(childNode.nodeName) !== -1) {\r\n            result = true;\r\n        }\r\n        else if (childNode.hasAttribute('xlink:href')) {\r\n            // TODO：只有 xlink:href 吗？其它 IRI 或 funcIRI 属性是否也需要验证？\r\n            // 遇到引用属性，还需要递归验证被引用对象是否可应用样式\r\n            const idStr = childNode.getAttribute('xlink:href');\r\n            traversal_node_1.traversalNode(n => idStr === `#${n.getAttribute('id')}`, n => {\r\n                result = check(styleDefine, n, dom, unique) || result;\r\n            }, dom);\r\n        }\r\n    }, node);\r\n    return result;\r\n};\r\n// 深度分析，判断样式继承链上是否存在可应用对象\r\nexports.checkApply = (styleDefine, node, dom) => {\r\n    return check(styleDefine, node, dom, []);\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/style/check-apply.ts?");

/***/ }),

/***/ "./src/slimming/style/define.ts":
/*!**************************************!*\
  !*** ./src/slimming/style/define.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// 选择器混合字符，不含后代选择器（空格）\r\nvar selectorUnitCombinator;\r\n(function (selectorUnitCombinator) {\r\n    selectorUnitCombinator[selectorUnitCombinator[\">\"] = 1] = \">\";\r\n    selectorUnitCombinator[selectorUnitCombinator[\"+\"] = 2] = \"+\";\r\n    selectorUnitCombinator[selectorUnitCombinator[\"~\"] = 3] = \"~\";\r\n})(selectorUnitCombinator = exports.selectorUnitCombinator || (exports.selectorUnitCombinator = {}));\r\n// 属性选择器等号修饰符\r\nvar attrModifier;\r\n(function (attrModifier) {\r\n    attrModifier[attrModifier[\"^\"] = 1] = \"^\";\r\n    attrModifier[attrModifier[\"$\"] = 2] = \"$\";\r\n    attrModifier[attrModifier[\"~\"] = 3] = \"~\";\r\n    attrModifier[attrModifier[\"|\"] = 4] = \"|\";\r\n    attrModifier[attrModifier[\"*\"] = 5] = \"*\";\r\n})(attrModifier = exports.attrModifier || (exports.attrModifier = {}));\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/style/define.ts?");

/***/ }),

/***/ "./src/slimming/style/exec.ts":
/*!************************************!*\
  !*** ./src/slimming/style/exec.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.execStyle = (styleStr = '') => {\r\n    // 此处使用数组，因为不能在解析器中排重，排重的工作要交给优化工具\r\n    const style = [];\r\n    styleStr.split(/\\s*;\\s*/).forEach(s => {\r\n        const attr = s.trim().split(/\\s*:\\s*/);\r\n        if (attr[0] && attr[1]) {\r\n            style.push({\r\n                fullname: attr[0],\r\n                name: attr[0],\r\n                value: attr[1],\r\n            });\r\n        }\r\n    });\r\n    return style;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/style/exec.ts?");

/***/ }),

/***/ "./src/slimming/style/match-selector.ts":
/*!**********************************************!*\
  !*** ./src/slimming/style/match-selector.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst define_1 = __webpack_require__(/*! ./define */ \"./src/slimming/style/define.ts\");\r\n// 验证 selector 和 node 是否匹配\r\nexports.matchSelector = (node, selector) => {\r\n    if (!selector) {\r\n        return false;\r\n    }\r\n    // 如果存在标签，则标签必须符合\r\n    if (selector.type && selector.type !== node.nodeName) {\r\n        return false;\r\n    }\r\n    // 如果存在 class 选择器，则每个 class 都要匹配\r\n    if (selector.class) {\r\n        let className = node.getAttribute('class');\r\n        let classNames = [];\r\n        if (className) {\r\n            classNames = className.trim().split(/\\s+/);\r\n        }\r\n        for (let ci = selector.class.length; ci--;) {\r\n            if (classNames.indexOf(selector.class[ci]) === -1) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    // 如果存在 id 选择器，则每个 id 都要匹配\r\n    if (selector.id) {\r\n        let id = node.getAttribute('id');\r\n        if (id) {\r\n            id = id.trim();\r\n        }\r\n        for (let i = selector.id.length; i--;) {\r\n            if (id !== selector.id[i]) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    if (selector.attr) {\r\n        for (let ai = selector.attr.length; ai--;) {\r\n            const attrSelector = selector.attr[ai];\r\n            let attr = node.getAttribute(attrSelector.key);\r\n            if (attr === null) {\r\n                return false;\r\n            }\r\n            else if (attrSelector.value) {\r\n                // 属性值大小写不敏感\r\n                attr = attr.trim().toLowerCase();\r\n                switch (attrSelector.modifier) {\r\n                    // 开始字符匹配\r\n                    case define_1.attrModifier['^']:\r\n                        if (attr.indexOf(attrSelector.value) !== 0) {\r\n                            return false;\r\n                        }\r\n                        break;\r\n                    // 结尾字符匹配\r\n                    // tslint:disable-next-line:no-string-literal\r\n                    case define_1.attrModifier['$']:\r\n                        if (attr.lastIndexOf(attrSelector.value) !== attr.length - attrSelector.value.length) {\r\n                            return false;\r\n                        }\r\n                        break;\r\n                    // 空格分组字符匹配\r\n                    case define_1.attrModifier['~']:\r\n                        if (attr.split(/\\s+/).indexOf(attrSelector.value) === -1) {\r\n                            return false;\r\n                        }\r\n                        break;\r\n                    // 前缀字符匹配\r\n                    case define_1.attrModifier['|']:\r\n                        if (attr !== attrSelector.value && attr.indexOf(`${attrSelector.value}-`) !== 0) {\r\n                            return false;\r\n                        }\r\n                        break;\r\n                    // 模糊匹配\r\n                    case define_1.attrModifier['*']:\r\n                        if (attr.indexOf(attrSelector.value) === -1) {\r\n                            return false;\r\n                        }\r\n                        break;\r\n                    // 默认全字匹配\r\n                    default:\r\n                        if (attr !== attrSelector.value) {\r\n                            return false;\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // TODO：未验证伪类和伪元素\r\n    // if (selector.pseudo) {\r\n    //     return true;\r\n    // }\r\n    return true;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/style/match-selector.ts?");

/***/ }),

/***/ "./src/slimming/style/shorten-tag.ts":
/*!*******************************************!*\
  !*** ./src/slimming/style/shorten-tag.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n// 去除 style 标签最后的分号\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.shortenTag = (s) => s.replace(/;}/g, '}');\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/style/shorten-tag.ts?");

/***/ }),

/***/ "./src/slimming/style/shorten.ts":
/*!***************************************!*\
  !*** ./src/slimming/style/shorten.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst mix_white_space_1 = __webpack_require__(/*! ../utils/mix-white-space */ \"./src/slimming/utils/mix-white-space.ts\");\r\nexports.shortenStyle = (s) => mix_white_space_1.mixWhiteSpace(s.trim()).replace(/\\s*([@='\"#\\.\\*+>~\\[\\]\\(\\){}:,;])\\s*/g, '$1').replace(/;$/, '');\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/style/shorten.ts?");

/***/ }),

/***/ "./src/slimming/style/stringify.ts":
/*!*****************************************!*\
  !*** ./src/slimming/style/stringify.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.stringifyStyle = (style) => style.map(attr => `${attr.name}:${attr.value}`).join(';');\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/style/stringify.ts?");

/***/ }),

/***/ "./src/slimming/utils/fillin.ts":
/*!**************************************!*\
  !*** ./src/slimming/utils/fillin.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nexports.fillIn = ramda_1.curry((digit, s) => s.length >= digit ? s : exports.fillIn(digit, `0${s}`));\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/utils/fillin.ts?");

/***/ }),

/***/ "./src/slimming/utils/mix-white-space.ts":
/*!***********************************************!*\
  !*** ./src/slimming/utils/mix-white-space.ts ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.mixWhiteSpace = (str) => str.replace(/\\s+/g, ' ');\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/utils/mix-white-space.ts?");

/***/ }),

/***/ "./src/slimming/utils/number-length.ts":
/*!*********************************************!*\
  !*** ./src/slimming/utils/number-length.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.numberLength = (num) => `${num}`.length;\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/utils/number-length.ts?");

/***/ }),

/***/ "./src/slimming/utils/shortenlist.ts":
/*!*******************************************!*\
  !*** ./src/slimming/utils/shortenlist.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst letterList = 'abcdefghijklmnopqrstuvwxyz';\r\nconst numberList = '0123456789';\r\nexports.startChar = `${letterList}${letterList.toUpperCase()}_:`;\r\nexports.nameChar = `${exports.startChar}${numberList}-.`;\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/utils/shortenlist.ts?");

/***/ }),

/***/ "./src/slimming/utils/to-array.ts":
/*!****************************************!*\
  !*** ./src/slimming/utils/to-array.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.toArray = (item) => Array.isArray(item) ? item : [item];\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/utils/to-array.ts?");

/***/ }),

/***/ "./src/slimming/utils/tohex.ts":
/*!*************************************!*\
  !*** ./src/slimming/utils/tohex.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst HEX = 16;\r\nconst TEN = 10;\r\nexports.toHex = (s) => parseInt(`${s}`, TEN).toString(HEX);\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/utils/tohex.ts?");

/***/ }),

/***/ "./src/slimming/utils/traversal-obj.ts":
/*!*********************************************!*\
  !*** ./src/slimming/utils/traversal-obj.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/*\r\n * 深度遍历所有的 Object 属性\r\n * @param { function } 条件\r\n * @param { function } 回调\r\n * @param { obj } 目标对象\r\n * @param { visited } 避免对象调用自身造成死循环\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst traversal = (condition, cb, obj, path, visited) => {\r\n    if (visited.indexOf(obj) !== -1) {\r\n        return;\r\n    }\r\n    visited.push(obj);\r\n    if (condition(obj)) {\r\n        cb(obj, path);\r\n        return;\r\n    }\r\n    path.push(obj);\r\n    if (Array.isArray(obj)) {\r\n        for (let i = 0; i < obj.length;) {\r\n            const item = obj[i];\r\n            traversal(condition, cb, item, path, visited);\r\n            if (item === obj[i]) {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        Object.keys(obj).forEach(key => {\r\n            if (typeof obj[key] === 'object') {\r\n                traversal(condition, cb, obj[key], path, visited);\r\n            }\r\n        });\r\n    }\r\n    path.pop();\r\n};\r\nexports.traversalObj = (condition, cb, obj) => {\r\n    traversal(condition, cb, obj, [], []);\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/utils/traversal-obj.ts?");

/***/ }),

/***/ "./src/slimming/validate/legal-value.ts":
/*!**********************************************!*\
  !*** ./src/slimming/validate/legal-value.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst regular_attr_1 = __webpack_require__(/*! ../const/regular-attr */ \"./src/slimming/const/regular-attr.ts\");\r\nconst use_enum_1 = __webpack_require__(/*! ./use-enum */ \"./src/slimming/validate/use-enum.ts\");\r\nconst use_reg_1 = __webpack_require__(/*! ./use-reg */ \"./src/slimming/validate/use-reg.ts\");\r\n// TODO\r\nexports.legalValue = (attrDefine, attr) => {\r\n    if (attrDefine.legalValues.length) {\r\n        let legal = true;\r\n        for (const legalRule of attrDefine.legalValues) {\r\n            switch (legalRule.type) {\r\n                // 用正则判断\r\n                case 'reg':\r\n                    if (!use_reg_1.useReg(legalRule.reg, attr.value)) {\r\n                        return false;\r\n                    }\r\n                    break;\r\n                // 用枚举判断\r\n                case 'enum':\r\n                    if (!use_enum_1.useEnum(legalRule.enum, attr.value)) {\r\n                        return false;\r\n                    }\r\n                    break;\r\n                // 值应该是一个属性名，而且不允许循环引用\r\n                case 'attr':\r\n                    return !regular_attr_1.regularAttr[attr.value].isUndef && attr.fullname !== attr.value;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        return legal;\r\n    }\r\n    else {\r\n        return true;\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/validate/legal-value.ts?");

/***/ }),

/***/ "./src/slimming/validate/use-enum.ts":
/*!*******************************************!*\
  !*** ./src/slimming/validate/use-enum.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.useEnum = (e, val) => val in e;\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/validate/use-enum.ts?");

/***/ }),

/***/ "./src/slimming/validate/use-reg.ts":
/*!******************************************!*\
  !*** ./src/slimming/validate/use-reg.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.useReg = (reg, val) => reg.test(val);\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/validate/use-reg.ts?");

/***/ }),

/***/ "./src/slimming/xml/create.ts":
/*!************************************!*\
  !*** ./src/slimming/xml/create.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst index_1 = __webpack_require__(/*! ../../node/index */ \"./src/node/index.ts\");\r\nconst mix_white_space_1 = __webpack_require__(/*! ../utils/mix-white-space */ \"./src/slimming/utils/mix-white-space.ts\");\r\nfunction createNode(node) {\r\n    let xml = '';\r\n    switch (node.nodeType) {\r\n        case index_1.NodeType.Tag:\r\n            xml += createTag(node);\r\n            break;\r\n        case index_1.NodeType.Text:\r\n            xml += node.textContent;\r\n            break;\r\n        case index_1.NodeType.XMLDecl:\r\n            xml += `<?xml${mix_white_space_1.mixWhiteSpace(` ${node.textContent}`).replace(/\\s(?=\"|=|$)/g, '')}?>`;\r\n            break;\r\n        case index_1.NodeType.Comments:\r\n            const comments = mix_white_space_1.mixWhiteSpace(node.textContent).trim();\r\n            if (comments) {\r\n                xml += `<!--${comments}-->`;\r\n            }\r\n            break;\r\n        case index_1.NodeType.CDATA:\r\n            const cdata = node.textContent;\r\n            if (cdata.indexOf('<') === -1) {\r\n                xml += cdata;\r\n            }\r\n            else {\r\n                xml += `<![CDATA[${cdata}]]>`;\r\n            }\r\n            break;\r\n        case index_1.NodeType.DocType:\r\n            xml += `<!DOCTYPE${mix_white_space_1.mixWhiteSpace(` ${node.textContent.trim()}`)}>`;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return xml;\r\n}\r\nexports.createNode = createNode;\r\nfunction createTag(node) {\r\n    let xml = '';\r\n    xml += `<${node.namespace ? `${node.namespace}:` : ''}${node.nodeName}`;\r\n    if (node.attributes.length) {\r\n        for (const { name, value, namespace } of node.attributes) {\r\n            if (value.trim()) {\r\n                xml += ` ${namespace ? `${namespace}:` : ''}${name}=\"${mix_white_space_1.mixWhiteSpace(value.trim()).replace(/\"/g, '&quot;')}\"`;\r\n            }\r\n        }\r\n    }\r\n    if (node.childNodes.length) {\r\n        xml += '>';\r\n        node.childNodes.forEach(childNode => {\r\n            xml += createNode(childNode);\r\n        });\r\n        xml += `</${node.namespace ? `${node.namespace}:` : ''}${node.nodeName}>`;\r\n    }\r\n    else {\r\n        xml += '/>';\r\n    }\r\n    return xml;\r\n}\r\nexports.createTag = createTag;\r\nexports.createXML = (dom) => {\r\n    if (!dom) {\r\n        return '';\r\n    }\r\n    let result = '';\r\n    dom.childNodes.forEach(node => {\r\n        result += createNode(node);\r\n    });\r\n    return result;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/xml/create.ts?");

/***/ }),

/***/ "./src/slimming/xml/get-by-selector.ts":
/*!*********************************************!*\
  !*** ./src/slimming/xml/get-by-selector.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst match_selector_1 = __webpack_require__(/*! ../style/match-selector */ \"./src/slimming/style/match-selector.ts\");\r\nconst is_tag_1 = __webpack_require__(/*! ./is-tag */ \"./src/slimming/xml/is-tag.ts\");\r\nconst traversal_node_1 = __webpack_require__(/*! ./traversal-node */ \"./src/slimming/xml/traversal-node.ts\");\r\nconst regs_1 = __webpack_require__(/*! ../const/regs */ \"./src/slimming/const/regs.ts\");\r\nconst define_1 = __webpack_require__(/*! ../style/define */ \"./src/slimming/style/define.ts\");\r\n// 类似 querySelectorAll 的规则，找到所有符合条件的元素\r\nexports.getBySelector = (dom, selector) => {\r\n    const selectors = [];\r\n    const selectorUnitReg = new RegExp(`^([^\\\\s>+~#\\\\.\\\\[:]+|\\\\*)?(${regs_1.idChar}|${regs_1.classChar}|${regs_1.attrChar}|${regs_1.pseudoChar})*([\\\\s>+~]+|$)`);\r\n    let selectorStr = selector;\r\n    let selectorExec = selectorUnitReg.exec(selectorStr);\r\n    while (selectorExec && selectorExec[0].length) {\r\n        const selectorUnit = { id: [], class: [], attr: [], pseudo: [] };\r\n        if (selectorExec[1]) {\r\n            if (selectorExec[1] === '*') {\r\n                selectorUnit.universal = true;\r\n            }\r\n            else {\r\n                selectorUnit.type = selectorExec[1];\r\n            }\r\n        }\r\n        if (selectorExec[2]) {\r\n            let specialStr = selectorExec[2];\r\n            const specialReg = new RegExp(`^(?:${regs_1.idChar}|${regs_1.classChar}|${regs_1.attrChar}|${regs_1.pseudoChar}?:)`);\r\n            let specialExec = specialReg.exec(specialStr);\r\n            while (specialExec) {\r\n                switch (specialExec[0][0]) {\r\n                    case '#': // id 选择器\r\n                        selectorUnit.id.push(specialExec[0].slice(1));\r\n                        break;\r\n                    case '.': // class 选择器\r\n                        selectorUnit.class.push(specialExec[0].slice(1));\r\n                        break;\r\n                    case '[': // 属性选择器\r\n                        const attrStr = specialExec[0].slice(1, -1);\r\n                        const eqIndex = attrStr.indexOf['='];\r\n                        if (eqIndex === -1) {\r\n                            // 没有等号的情况\r\n                            selectorUnit.attr.push({\r\n                                key: attrStr\r\n                            });\r\n                        }\r\n                        else {\r\n                            // 取出等号修饰符\r\n                            if (define_1.attrModifier[attrStr[eqIndex - 1]]) {\r\n                                selectorUnit.attr.push({\r\n                                    key: attrStr.slice(0, eqIndex - 1),\r\n                                    modifier: define_1.attrModifier[attrStr[eqIndex - 1]],\r\n                                    value: attrStr.slice(eqIndex + 1)\r\n                                });\r\n                            }\r\n                            else {\r\n                                selectorUnit.attr.push({\r\n                                    key: attrStr.slice(0, eqIndex),\r\n                                    value: attrStr.slice(eqIndex + 1)\r\n                                });\r\n                            }\r\n                        }\r\n                        break;\r\n                    case ':': // 伪类，伪元素\r\n                        const pseudoStr = specialExec[0].replace(/^:+/, '');\r\n                        const parenIndex = pseudoStr.indexOf('(');\r\n                        if (parenIndex === -1) {\r\n                            // 不是函数型伪类\r\n                            selectorUnit.pseudo.push({\r\n                                func: pseudoStr\r\n                            });\r\n                        }\r\n                        else {\r\n                            selectorUnit.pseudo.push({\r\n                                func: pseudoStr.slice(0, parenIndex),\r\n                                value: pseudoStr.slice(parenIndex + 1, -1)\r\n                            });\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                specialStr = specialStr.slice(specialExec[0].length);\r\n                specialExec = specialReg.exec(specialStr);\r\n            }\r\n        }\r\n        if (selectorExec[3]) {\r\n            const combinator = selectorExec[3].trim();\r\n            if (define_1.selectorUnitCombinator[combinator]) {\r\n                selectorUnit.combinator = define_1.selectorUnitCombinator[combinator];\r\n            }\r\n        }\r\n        selectors.push(selectorUnit);\r\n        selectorStr = selectorStr.slice(selectorExec[0].length);\r\n        selectorExec = selectorUnitReg.exec(selectorStr);\r\n    }\r\n    const len = selectors.length;\r\n    const result = [];\r\n    traversal_node_1.traversalNode((node) => is_tag_1.isTag(node) && match_selector_1.matchSelector(node, selectors[len - 1]), (node) => {\r\n        let i = len - 2;\r\n        let currentNode = node;\r\n        while (i >= 0) {\r\n            switch (selectors[i].combinator) {\r\n                // 子选择器\r\n                case define_1.selectorUnitCombinator['>']:\r\n                    if (!match_selector_1.matchSelector(currentNode.parentNode, selectors[i])) {\r\n                        return;\r\n                    }\r\n                    currentNode = node.parentNode;\r\n                    break;\r\n                // 相邻兄弟选择器\r\n                case define_1.selectorUnitCombinator['+']:\r\n                    const brothers = currentNode.parentNode.childNodes;\r\n                    const index = brothers.indexOf(currentNode);\r\n                    if (index <= 0 || !match_selector_1.matchSelector(brothers[index - 1], selectors[i])) {\r\n                        return;\r\n                    }\r\n                    currentNode = brothers[index - 1];\r\n                    break;\r\n                // 兄弟选择器\r\n                case define_1.selectorUnitCombinator['~']:\r\n                    const _brothers = currentNode.parentNode.childNodes;\r\n                    const _index = _brothers.indexOf(currentNode);\r\n                    if (_index <= 0) {\r\n                        return;\r\n                    }\r\n                    let _brother;\r\n                    for (let bi = _index - 1; bi--;) {\r\n                        _brother = _brothers[bi];\r\n                        if (match_selector_1.matchSelector(_brother, selectors[i])) {\r\n                            currentNode = _brother;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (currentNode !== _brother) {\r\n                        return;\r\n                    }\r\n                    break;\r\n                // 后代选择器\r\n                default:\r\n                    let parent = currentNode.parentNode;\r\n                    while (parent.nodeName !== '#document') {\r\n                        if (match_selector_1.matchSelector(parent, selectors[i])) {\r\n                            currentNode = parent;\r\n                            break;\r\n                        }\r\n                        parent = parent.parentNode;\r\n                    }\r\n                    if (currentNode !== parent) {\r\n                        return;\r\n                    }\r\n                    break;\r\n            }\r\n            i--;\r\n        }\r\n        result.push(node);\r\n    }, dom);\r\n    return result;\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/xml/get-by-selector.ts?");

/***/ }),

/***/ "./src/slimming/xml/is-tag.ts":
/*!************************************!*\
  !*** ./src/slimming/xml/is-tag.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ramda_1 = __webpack_require__(/*! ramda */ \"ramda\");\r\nconst index_1 = __webpack_require__(/*! ../../node/index */ \"./src/node/index.ts\");\r\nexports.isTag = ramda_1.propEq('nodeType', index_1.NodeType.Tag);\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/xml/is-tag.ts?");

/***/ }),

/***/ "./src/slimming/xml/rm-node.ts":
/*!*************************************!*\
  !*** ./src/slimming/xml/rm-node.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.rmNode = (node) => {\r\n    if (node.parentNode) {\r\n        node.parentNode.removeChild(node);\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/xml/rm-node.ts?");

/***/ }),

/***/ "./src/slimming/xml/traversal-node.ts":
/*!********************************************!*\
  !*** ./src/slimming/xml/traversal-node.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/*\r\n * 遍历所有的 Node 节点，并对符合条件的节点执行操作\r\n * @param { function } 条件\r\n * @param { function } 回调\r\n * @param { Node } 目标节点\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction traversal(condition, cb, node) {\r\n    // 此处不能用 forEach ，for 循环可以避免当前节点被移除导致下一个节点不会被遍历到的问题\r\n    for (let i = 0; i < node.childNodes.length;) {\r\n        const childNode = node.childNodes[i];\r\n        if (condition(childNode)) {\r\n            cb(childNode);\r\n            if (childNode === node.childNodes[i]) {\r\n                if (childNode.childNodes && childNode.childNodes.length) {\r\n                    traversal(condition, cb, childNode);\r\n                }\r\n                i++;\r\n            }\r\n        }\r\n        else {\r\n            if (childNode.childNodes && childNode.childNodes.length) {\r\n                traversal(condition, cb, childNode);\r\n            }\r\n            i++;\r\n        }\r\n    }\r\n}\r\nfunction traversalNode(condition, cb, dom) {\r\n    traversal(condition, cb, dom);\r\n}\r\nexports.traversalNode = traversalNode;\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/slimming/xml/traversal-node.ts?");

/***/ }),

/***/ "./src/xml-parser/app.ts":
/*!*******************************!*\
  !*** ./src/xml-parser/app.ts ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar index_1 = __webpack_require__(/*! ../node/index */ \"./src/node/index.ts\");\r\nexports.NodeType = index_1.NodeType;\r\nvar parser_1 = __webpack_require__(/*! ./parser */ \"./src/xml-parser/parser.ts\");\r\nexports.parse = parser_1.Parser;\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/xml-parser/app.ts?");

/***/ }),

/***/ "./src/xml-parser/node.ts":
/*!********************************!*\
  !*** ./src/xml-parser/node.ts ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst index_1 = __webpack_require__(/*! ../node/index */ \"./src/node/index.ts\");\r\nclass Node {\r\n    constructor(option) {\r\n        this.nodeName = option.nodeName;\r\n        this.nodeType = option.nodeType;\r\n        this.namespace = option.namespace;\r\n        this.selfClose = option.selfClose;\r\n        this.textContent = option.textContent;\r\n        if (this.nodeType === index_1.NodeType.Tag || this.nodeType === index_1.NodeType.Document) {\r\n            this._attributes = [];\r\n            this._childNodes = [];\r\n        }\r\n    }\r\n    get attributes() {\r\n        return this._attributes ? Object.freeze(this._attributes.slice()) : null;\r\n    }\r\n    get childNodes() {\r\n        return this._childNodes ? Object.freeze(this._childNodes.slice()) : null;\r\n    }\r\n    // 复制自身，但是不复制节点树关系链\r\n    cloneNode() {\r\n        const cloneNode = new Node({\r\n            nodeName: this.nodeName,\r\n            nodeType: this.nodeType,\r\n            namespace: this.namespace,\r\n            textContent: this.textContent\r\n        });\r\n        if (this._attributes) {\r\n            // 属性需要深拷贝\r\n            cloneNode._attributes = this._attributes.map(attr => {\r\n                return {\r\n                    name: attr.name,\r\n                    value: attr.value,\r\n                    fullname: attr.fullname,\r\n                    namespace: attr.namespace,\r\n                };\r\n            });\r\n        }\r\n        return cloneNode;\r\n    }\r\n    // 追加子节点\r\n    appendChild(childNode) {\r\n        if (this._childNodes) {\r\n            // 如果子节点原本有父节点，则先从原本的父节点中移除\r\n            if (childNode.parentNode && childNode.parentNode !== this) {\r\n                const pindex = childNode.parentNode.childNodes.indexOf(childNode);\r\n                if (pindex !== -1) {\r\n                    childNode.parentNode.removeChild(childNode);\r\n                }\r\n            }\r\n            // 如果已在自己的子节点列表中，则先移除再追加到末尾\r\n            const index = this._childNodes.indexOf(childNode);\r\n            if (index !== -1) {\r\n                this._childNodes.splice(index, 1);\r\n            }\r\n            this._childNodes.push(childNode);\r\n            childNode.parentNode = this;\r\n        }\r\n    }\r\n    // 插入到子节点之前\r\n    insertBefore(childNode, previousTarget) {\r\n        if (this._childNodes) {\r\n            // 首先判断目标节点是否在自己的子节点列表中\r\n            let pindex = this._childNodes.indexOf(previousTarget);\r\n            if (pindex !== -1) {\r\n                // 首先判断子节点是否在自己的子节点列表中，如果在，则先移除\r\n                const index = this._childNodes.indexOf(childNode);\r\n                if (index !== -1) {\r\n                    this._childNodes.splice(index, 1);\r\n                }\r\n                childNode.parentNode = null;\r\n            }\r\n        }\r\n    }\r\n    // 替换子节点\r\n    replaceChild(childNode, ...children) {\r\n        if (this._childNodes) {\r\n            const index = this._childNodes.indexOf(childNode);\r\n            if (index !== -1) {\r\n                this._childNodes.splice(index, 1, ...children);\r\n                childNode.parentNode = null;\r\n                children.forEach(child => {\r\n                    child.parentNode = this;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    // 移除子节点\r\n    removeChild(childNode) {\r\n        if (this._childNodes) {\r\n            const index = this._childNodes.indexOf(childNode);\r\n            if (index !== -1) {\r\n                this._childNodes.splice(index, 1);\r\n                childNode.parentNode = null;\r\n            }\r\n        }\r\n    }\r\n    // 是否存在属性\r\n    hasAttribute(name, namespace) {\r\n        if (this._attributes) {\r\n            for (const attr of this._attributes) {\r\n                if ((!namespace && attr.fullname === name) || (attr.name === name && attr.namespace === namespace)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    getAttribute(name, namespace) {\r\n        if (this._attributes) {\r\n            for (const attr of this._attributes) {\r\n                if ((!namespace && attr.fullname === name) || (attr.name === name && attr.namespace === namespace)) {\r\n                    return attr.value;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    setAttribute(name, value, namespace) {\r\n        if (this._attributes) {\r\n            for (const attr of this._attributes) {\r\n                if ((!namespace && attr.fullname === name) || (attr.name === name && attr.namespace === namespace)) {\r\n                    attr.value = value;\r\n                    return;\r\n                }\r\n            }\r\n            const newAttr = {\r\n                name,\r\n                value,\r\n                fullname: name\r\n            };\r\n            if (namespace) {\r\n                newAttr.fullname = `${namespace}:${name}`;\r\n                newAttr.namespace = namespace;\r\n            }\r\n            this._attributes.push(newAttr);\r\n        }\r\n    }\r\n    removeAttribute(name, namespace) {\r\n        if (this._attributes) {\r\n            for (let i = this._attributes.length; i--;) {\r\n                const attr = this._attributes[i];\r\n                if ((!namespace && attr.fullname === name) || (attr.name === name && attr.namespace === namespace)) {\r\n                    this._attributes.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.Node = Node;\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/xml-parser/node.ts?");

/***/ }),

/***/ "./src/xml-parser/parser.ts":
/*!**********************************!*\
  !*** ./src/xml-parser/parser.ts ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst index_1 = __webpack_require__(/*! ../node/index */ \"./src/node/index.ts\");\r\nconst node_1 = __webpack_require__(/*! ./node */ \"./src/xml-parser/node.ts\");\r\nconst regs_1 = __webpack_require__(/*! ./regs */ \"./src/xml-parser/regs.ts\");\r\nexports.REG_XML_DECL = regs_1.REG_XML_DECL;\r\nexports.REG_CDATA_SECT = regs_1.REG_CDATA_SECT;\r\nexports.REG_OTHER_SECT = regs_1.REG_OTHER_SECT;\r\nexports.REG_DOCTYPE = regs_1.REG_DOCTYPE;\r\nexports.REG_OTHER_DECL = regs_1.REG_OTHER_DECL;\r\nexports.REG_COMMENTS = regs_1.REG_COMMENTS;\r\nexports.REG_START_TAG = regs_1.REG_START_TAG;\r\nexports.REG_END_TAG = regs_1.REG_END_TAG;\r\nexports.REG_ATTR = regs_1.REG_ATTR;\r\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./src/xml-parser/utils.ts\");\r\nconst mix_white_space_1 = __webpack_require__(/*! ../slimming/utils/mix-white-space */ \"./src/slimming/utils/mix-white-space.ts\");\r\nconst configs = [\r\n    [1, 'xml-decl', regs_1.REG_XML_DECL, index_1.NodeType.XMLDecl],\r\n    [1, 'cdata', regs_1.REG_CDATA_SECT, index_1.NodeType.CDATA],\r\n    [2, regs_1.REG_OTHER_SECT, index_1.NodeType.OtherSect],\r\n    [1, 'doctype', regs_1.REG_DOCTYPE, index_1.NodeType.DocType],\r\n    [2, regs_1.REG_OTHER_DECL, index_1.NodeType.OtherDecl],\r\n    [1, 'comments', regs_1.REG_COMMENTS, index_1.NodeType.Comments],\r\n];\r\nconst updStatus = (pos, str, status) => {\r\n    for (; status.lastpos < pos; status.lastpos++) {\r\n        if (str[status.lastpos] === '\\r' || str[status.lastpos] === '\\n') {\r\n            // 换行判断，\\r 直接换行，\\n 判断一下是不是紧跟在 \\r 后面\r\n            if (str[status.lastpos] === '\\r' || str[status.lastpos - 1] !== '\\r') {\r\n                status.line++;\r\n                status.pos = 0;\r\n            }\r\n        }\r\n        else {\r\n            status.pos++;\r\n        }\r\n    }\r\n};\r\n// 应对一个捕获组的状况\r\nconst Process1 = (conf, str) => {\r\n    const reg = conf[2];\r\n    if (reg.test(str)) {\r\n        const execResult = reg.exec(str);\r\n        return {\r\n            node: new node_1.Node({\r\n                nodeType: conf[3],\r\n                nodeName: `#${conf[1]}`,\r\n                textContent: execResult[1]\r\n            }),\r\n            str: str.slice(execResult[0].length)\r\n        };\r\n    }\r\n    return null;\r\n};\r\n// 应对两个捕获组的状况\r\nconst Process2 = (conf, str) => {\r\n    const reg = conf[1];\r\n    if (reg.test(str)) {\r\n        const execResult = reg.exec(str);\r\n        return {\r\n            node: new node_1.Node({\r\n                nodeType: conf[2],\r\n                nodeName: `#${execResult[1].toLowerCase()}`,\r\n                textContent: execResult[2]\r\n            }),\r\n            str: str.slice(execResult[0].length)\r\n        };\r\n    }\r\n    return null;\r\n};\r\n// 处理标签\r\nconst ProcessTag = (str, status) => {\r\n    if (regs_1.REG_START_TAG.test(str)) {\r\n        const tempStatus = { line: status.line, pos: status.pos, lastpos: 0 };\r\n        const execResult = regs_1.REG_START_TAG.exec(str);\r\n        const result = {\r\n            node: new node_1.Node({\r\n                nodeType: index_1.NodeType.Tag,\r\n                nodeName: execResult[1],\r\n                namespace: '',\r\n                selfClose: execResult[3] === '/'\r\n            }),\r\n            str: str.slice(execResult[0].length)\r\n        };\r\n        // 标签的 namespace\r\n        if (execResult[1].indexOf(':') !== -1) {\r\n            const tagName = execResult[1].split(':');\r\n            if (!tagName[1]) {\r\n                throw new Error(`错误的开始标签！ 在第 ${status.line} 行第 ${status.pos} 位`);\r\n            }\r\n            else {\r\n                result.node.nodeName = tagName[1];\r\n                if (tagName[0]) {\r\n                    result.node.namespace = tagName[0];\r\n                }\r\n            }\r\n        }\r\n        updStatus(execResult[1].length + 1, execResult[0], tempStatus);\r\n        // ** 重要 ** 重置匹配位置！\r\n        regs_1.REG_ATTR.lastIndex = 0;\r\n        let attrExec = regs_1.REG_ATTR.exec(execResult[2]);\r\n        const attrUnique = {};\r\n        while (attrExec) {\r\n            updStatus(attrExec.index + execResult[1].length + 1, execResult[0], tempStatus);\r\n            // 属性名排重\r\n            if (attrUnique[attrExec[1]]) {\r\n                throw new Error(`属性名重复！ 在第 ${tempStatus.line} 行第 ${tempStatus.pos} 位`);\r\n            }\r\n            attrUnique[attrExec[1]] = true;\r\n            if (attrExec[1].indexOf(':') !== -1) {\r\n                const attrName = attrExec[1].split(':');\r\n                if (attrName[1]) {\r\n                    result.node.setAttribute(attrName[1], utils_1.collapseQuot(attrExec[2]).trim(), attrName[0]);\r\n                }\r\n                else {\r\n                    throw new Error(`错误的属性名！ 在第 ${tempStatus.line + status.line - 1} 行第 ${tempStatus.line > 1 ? tempStatus.pos : status.pos + tempStatus.pos} 位`);\r\n                }\r\n            }\r\n            else {\r\n                result.node.setAttribute(attrExec[1], utils_1.collapseQuot(attrExec[2]).trim());\r\n            }\r\n            attrExec = regs_1.REG_ATTR.exec(execResult[2]);\r\n        }\r\n        return result;\r\n    }\r\n    return null;\r\n};\r\nconst ProcessEndTag = (str, status) => {\r\n    if (regs_1.REG_END_TAG.test(str)) {\r\n        const execResult = regs_1.REG_END_TAG.exec(str);\r\n        const result = {\r\n            node: new node_1.Node({\r\n                nodeType: index_1.NodeType.EndTag,\r\n                nodeName: execResult[1],\r\n                namespace: '',\r\n            }),\r\n            str: str.slice(execResult[0].length)\r\n        };\r\n        if (execResult[1].indexOf(':') !== -1) {\r\n            const tagName = execResult[1].split(':');\r\n            if (!tagName[1]) {\r\n                throw new Error(`错误的结束标签！ 在第 ${status.line} 行第 ${status.pos} 位`);\r\n            }\r\n            else {\r\n                result.node.nodeName = tagName[1];\r\n                if (tagName[0]) {\r\n                    result.node.namespace = tagName[0];\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    return null;\r\n};\r\nconst parse = (str, status) => {\r\n    const startCharPos = str.indexOf('<');\r\n    if (startCharPos === 0) { // 以 < 开始的情况都按节点处理\r\n        for (const cfg of configs) {\r\n            if (cfg[0] === 1) {\r\n                const processResult1 = Process1(cfg, str);\r\n                if (processResult1) {\r\n                    return processResult1;\r\n                }\r\n            }\r\n            else {\r\n                const processResult2 = Process2(cfg, str);\r\n                if (processResult2) {\r\n                    return processResult2;\r\n                }\r\n            }\r\n        }\r\n        const processTag = ProcessTag(str, status);\r\n        if (processTag) {\r\n            return processTag;\r\n        }\r\n        const processEndTag = ProcessEndTag(str, status);\r\n        if (processEndTag) {\r\n            return processEndTag;\r\n        }\r\n        throw new Error(`解析标签失败！ 在第 ${status.line} 行第 ${status.pos} 位`);\r\n    }\r\n    else { // 非 < 开始的都按文本处理\r\n        return {\r\n            node: new node_1.Node({\r\n                nodeType: index_1.NodeType.Text,\r\n                nodeName: '#text',\r\n                textContent: mix_white_space_1.mixWhiteSpace(str.slice(0, startCharPos)),\r\n            }),\r\n            str: startCharPos === -1 ? '' : str.slice(startCharPos)\r\n        };\r\n    }\r\n};\r\nfunction Parser(str) {\r\n    return new Promise((resolve, reject) => {\r\n        const doc = new node_1.Node({\r\n            nodeType: index_1.NodeType.Document,\r\n            nodeName: '#document'\r\n        });\r\n        const stack = [];\r\n        const status = {\r\n            line: 1,\r\n            pos: 0,\r\n            lastpos: 0\r\n        };\r\n        let current;\r\n        let hasRoot = false;\r\n        const firstIndex = str.indexOf('<');\r\n        if (firstIndex > 0 && !!str.slice(0, firstIndex).replace(/\\s+/, '')) {\r\n            reject(new Error(`意外的文本节点！ 在第 ${status.line} 行第 ${status.pos} 位`));\r\n        }\r\n        try {\r\n            current = parse(str.slice(firstIndex), status); // 第一个 < 之前的全部字符都忽略掉\r\n        }\r\n        catch (e) {\r\n            reject(e);\r\n        }\r\n        if (current.node.nodeType === index_1.NodeType.XMLDecl && firstIndex > 0) {\r\n            reject(new Error(`xml声明必须在文档最前面！ 在第 ${status.line} 行第 ${status.pos} 位`));\r\n        }\r\n        doc.appendChild(current.node);\r\n        if (current.node.nodeType === index_1.NodeType.Tag) {\r\n            hasRoot = true;\r\n            if (!current.node.selfClose) {\r\n                stack.push(current.node);\r\n            }\r\n        }\r\n        while (current.str) {\r\n            updStatus(str.indexOf(current.str), str, status);\r\n            try {\r\n                current = parse(current.str, status); // 第一个 < 之前的全部字符都忽略掉\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n                break;\r\n            }\r\n            const stackLen = stack.length;\r\n            if (current.node.nodeType === index_1.NodeType.EndTag) {\r\n                // 遇到结束标签的处理逻辑\r\n                if (stackLen) {\r\n                    // 结束标签和开始标签匹配\r\n                    if (stack[stackLen - 1].nodeName === current.node.nodeName && stack[stackLen - 1].namespace === current.node.namespace) {\r\n                        // 无子节点，则转为自闭合节点\r\n                        if (!stack[stackLen - 1].childNodes.length) {\r\n                            stack[stackLen - 1].selfClose = true;\r\n                        }\r\n                        stack.pop();\r\n                    }\r\n                    else {\r\n                        reject(new Error(`开始和结束标签无法匹配！ 在第 ${status.line} 行第 ${status.pos} 位`));\r\n                    }\r\n                }\r\n                else {\r\n                    // 没有开始标签而出现了结束标签\r\n                    reject(new Error(`意外的结束标签！ 在第 ${status.line} 行第 ${status.pos} 位`));\r\n                }\r\n            }\r\n            else {\r\n                if (stackLen) {\r\n                    // 插入子节点\r\n                    stack[stackLen - 1].appendChild(current.node);\r\n                }\r\n                else if (current.node.nodeType === index_1.NodeType.Text || current.node.nodeType === index_1.NodeType.CDATA) {\r\n                    // 没有节点而出现了非空文本节点\r\n                    if (current.node.textContent.replace(/\\s/g, '')) {\r\n                        reject(new Error(`意外的文本节点！ 在第 ${status.line} 行第 ${status.pos} 位`));\r\n                    }\r\n                }\r\n                else {\r\n                    // 直接扔到根下\r\n                    doc.appendChild(current.node);\r\n                }\r\n                // 遇到未闭合的节点，扔到stack内\r\n                if (current.node.nodeType === index_1.NodeType.Tag) {\r\n                    if (!stackLen) {\r\n                        if (hasRoot) {\r\n                            reject(new Error(`只允许出现一个根元素节点！ 在第 ${status.line} 行第 ${status.pos} 位`));\r\n                        }\r\n                        hasRoot = true;\r\n                    }\r\n                    if (!current.node.selfClose) {\r\n                        stack.push(current.node);\r\n                    }\r\n                }\r\n            }\r\n            if (!current.str) {\r\n                updStatus(str.length, str, status);\r\n            }\r\n        }\r\n        if (stack.length) {\r\n            reject(new Error(`文档结构错误！ 在第 ${status.line} 行第 ${status.pos} 位`));\r\n        }\r\n        if (!hasRoot) {\r\n            reject(new Error(`没有根元素节点！ 在第 ${status.line} 行第 ${status.pos} 位`));\r\n        }\r\n        resolve(doc);\r\n    });\r\n}\r\nexports.Parser = Parser;\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/xml-parser/parser.ts?");

/***/ }),

/***/ "./src/xml-parser/regs.ts":
/*!********************************!*\
  !*** ./src/xml-parser/regs.ts ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nlet support_unicode = true;\r\ntry {\r\n    support_unicode = /\\u{20BB7}/u.test('𠮷');\r\n}\r\ncatch (e) {\r\n    support_unicode = false;\r\n}\r\nconst NameStartChar = `:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD${support_unicode ? '\\\\u{10000}-\\\\u{EFFFF}' : ''}`;\r\nconst NameChar = `${NameStartChar}\\\\-\\\\.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040`;\r\nconst Name = `[${NameStartChar}][${NameChar}]*`;\r\nconst Eq = '\\\\s*=\\\\s*';\r\nconst VersionNum = '1\\\\.[0-9]+';\r\nconst EncName = '[A-Za-z](?:[A-Za-z0-9\\\\._]|-)*';\r\nconst VersionInfo = `\\\\s+version${Eq}(?:'${VersionNum}'|\"${VersionNum}\")`;\r\nconst EncodingDecl = `\\\\s+encoding${Eq}(?:'${EncName}'|\"${EncName}\")`;\r\nconst SDDecl = `\\\\s+standalone${Eq}(?:'(?:yes|no)'|\"(?:yes|no)\")`;\r\nconst Reference = `(?:&${Name};|&#[0-9]+;|&#x[0-9a-fA-F]+;)`;\r\nconst AttrVal = `\"(?:[^<&\"]|${Reference})*\"|'(?:[^<&']|${Reference})*'`;\r\nconst DeclContent = `(?:[^<>]+|[^<>]*'[^']*'[^<>]*|[^<>]*\"[^\"]*\"[^<>]*|[^<>]*<[^<>]*>[^<>]*)+?`;\r\nexports.REG_XML_DECL = new RegExp(`^<\\\\?xml(${VersionInfo}(?:${EncodingDecl})?(?:${SDDecl})?\\\\s*)\\\\?>`);\r\nexports.REG_CDATA_SECT = /^<!\\[CDATA\\[([\\d\\D]*?)\\]\\]>/;\r\nexports.REG_OTHER_SECT = /^<!\\[\\s?([A-Z]+)\\s?\\[([\\d\\D]*?)\\]\\]>/;\r\nexports.REG_DOCTYPE = new RegExp(`^<!DOCTYPE\\\\s+(${DeclContent})>`);\r\nexports.REG_OTHER_DECL = new RegExp(`^<!([A-Z]+)\\\\s+(${DeclContent})>`);\r\nexports.REG_COMMENTS = /^<!--([\\d\\D]*?)-->/;\r\nexports.REG_START_TAG = new RegExp(`^<(${Name})((?:\\\\s+${Name}${Eq}(?:${AttrVal}))*)\\\\s*(\\\\/?)>`, support_unicode ? 'u' : '');\r\nexports.REG_END_TAG = new RegExp(`^</(${Name})\\\\s*>`, support_unicode ? 'u' : '');\r\nexports.REG_ATTR = new RegExp(`(${Name})${Eq}(${AttrVal})`, support_unicode ? 'gu' : 'g');\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/xml-parser/regs.ts?");

/***/ }),

/***/ "./src/xml-parser/utils.ts":
/*!*********************************!*\
  !*** ./src/xml-parser/utils.ts ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.collapseQuot = (str) => str.slice(1, -1);\r\n\n\n//# sourceURL=webpack://svg-slimming/./src/xml-parser/utils.ts?");

/***/ }),

/***/ "css":
/*!**********************!*\
  !*** external "css" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"css\");\n\n//# sourceURL=webpack://svg-slimming/external_%22css%22?");

/***/ }),

/***/ "ramda":
/*!************************!*\
  !*** external "ramda" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"ramda\");\n\n//# sourceURL=webpack://svg-slimming/external_%22ramda%22?");

/***/ })

/******/ });
});